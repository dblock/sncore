//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1434.
// 
#pragma warning disable 1591

namespace SnCore.Web.Soap.Tests.WebBugService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebBugServiceSoap", Namespace="http://www.vestris.com/sncore/ns/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfBugLink))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfBugNote))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfBug))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfBugProject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfBugType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfBugStatu))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfBugResolution))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfBugSeverity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfBugPriority))]
    public partial class WebBugService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateOrUpdateBugPriorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugPriorityByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugPrioritiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugPrioritiesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBugPriorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateBugSeverityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugSeverityByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugSeveritiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugSeveritiesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBugSeverityOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateBugResolutionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugResolutionByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugResolutionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugResolutionsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBugResolutionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateBugStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugStatusByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugStatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugStatusesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBugStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateBugTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugTypeByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugTypesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBugTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateBugProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugProjectByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugProjectsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBugProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugsWithOptionsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugsWithOptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateBugOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBugOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResolveBugOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseBugOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReopenBugOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugNotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugNotesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBugNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateBugNoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugNoteByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugLinksCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBugLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateBugLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBugLinkByIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebBugService() {
            this.Url = global::SnCore.Web.Soap.Tests.Properties.Settings.Default.SnCore_Web_Soap_Tests_WebBugService_WebBugService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateOrUpdateBugPriorityCompletedEventHandler CreateOrUpdateBugPriorityCompleted;
        
        /// <remarks/>
        public event GetBugPriorityByIdCompletedEventHandler GetBugPriorityByIdCompleted;
        
        /// <remarks/>
        public event GetBugPrioritiesCompletedEventHandler GetBugPrioritiesCompleted;
        
        /// <remarks/>
        public event GetBugPrioritiesCountCompletedEventHandler GetBugPrioritiesCountCompleted;
        
        /// <remarks/>
        public event DeleteBugPriorityCompletedEventHandler DeleteBugPriorityCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateBugSeverityCompletedEventHandler CreateOrUpdateBugSeverityCompleted;
        
        /// <remarks/>
        public event GetBugSeverityByIdCompletedEventHandler GetBugSeverityByIdCompleted;
        
        /// <remarks/>
        public event GetBugSeveritiesCompletedEventHandler GetBugSeveritiesCompleted;
        
        /// <remarks/>
        public event GetBugSeveritiesCountCompletedEventHandler GetBugSeveritiesCountCompleted;
        
        /// <remarks/>
        public event DeleteBugSeverityCompletedEventHandler DeleteBugSeverityCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateBugResolutionCompletedEventHandler CreateOrUpdateBugResolutionCompleted;
        
        /// <remarks/>
        public event GetBugResolutionByIdCompletedEventHandler GetBugResolutionByIdCompleted;
        
        /// <remarks/>
        public event GetBugResolutionsCompletedEventHandler GetBugResolutionsCompleted;
        
        /// <remarks/>
        public event GetBugResolutionsCountCompletedEventHandler GetBugResolutionsCountCompleted;
        
        /// <remarks/>
        public event DeleteBugResolutionCompletedEventHandler DeleteBugResolutionCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateBugStatusCompletedEventHandler CreateOrUpdateBugStatusCompleted;
        
        /// <remarks/>
        public event GetBugStatusByIdCompletedEventHandler GetBugStatusByIdCompleted;
        
        /// <remarks/>
        public event GetBugStatusesCompletedEventHandler GetBugStatusesCompleted;
        
        /// <remarks/>
        public event GetBugStatusesCountCompletedEventHandler GetBugStatusesCountCompleted;
        
        /// <remarks/>
        public event DeleteBugStatusCompletedEventHandler DeleteBugStatusCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateBugTypeCompletedEventHandler CreateOrUpdateBugTypeCompleted;
        
        /// <remarks/>
        public event GetBugTypeByIdCompletedEventHandler GetBugTypeByIdCompleted;
        
        /// <remarks/>
        public event GetBugTypesCountCompletedEventHandler GetBugTypesCountCompleted;
        
        /// <remarks/>
        public event GetBugTypesCompletedEventHandler GetBugTypesCompleted;
        
        /// <remarks/>
        public event DeleteBugTypeCompletedEventHandler DeleteBugTypeCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateBugProjectCompletedEventHandler CreateOrUpdateBugProjectCompleted;
        
        /// <remarks/>
        public event GetBugProjectByIdCompletedEventHandler GetBugProjectByIdCompleted;
        
        /// <remarks/>
        public event GetBugProjectsCompletedEventHandler GetBugProjectsCompleted;
        
        /// <remarks/>
        public event GetBugProjectsCountCompletedEventHandler GetBugProjectsCountCompleted;
        
        /// <remarks/>
        public event DeleteBugProjectCompletedEventHandler DeleteBugProjectCompleted;
        
        /// <remarks/>
        public event GetBugsWithOptionsCountCompletedEventHandler GetBugsWithOptionsCountCompleted;
        
        /// <remarks/>
        public event GetBugsWithOptionsCompletedEventHandler GetBugsWithOptionsCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateBugCompletedEventHandler CreateOrUpdateBugCompleted;
        
        /// <remarks/>
        public event GetBugByIdCompletedEventHandler GetBugByIdCompleted;
        
        /// <remarks/>
        public event GetBugsCountCompletedEventHandler GetBugsCountCompleted;
        
        /// <remarks/>
        public event GetBugsCompletedEventHandler GetBugsCompleted;
        
        /// <remarks/>
        public event DeleteBugCompletedEventHandler DeleteBugCompleted;
        
        /// <remarks/>
        public event ResolveBugCompletedEventHandler ResolveBugCompleted;
        
        /// <remarks/>
        public event CloseBugCompletedEventHandler CloseBugCompleted;
        
        /// <remarks/>
        public event ReopenBugCompletedEventHandler ReopenBugCompleted;
        
        /// <remarks/>
        public event GetBugNotesCompletedEventHandler GetBugNotesCompleted;
        
        /// <remarks/>
        public event GetBugNotesCountCompletedEventHandler GetBugNotesCountCompleted;
        
        /// <remarks/>
        public event DeleteBugNoteCompletedEventHandler DeleteBugNoteCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateBugNoteCompletedEventHandler CreateOrUpdateBugNoteCompleted;
        
        /// <remarks/>
        public event GetBugNoteByIdCompletedEventHandler GetBugNoteByIdCompleted;
        
        /// <remarks/>
        public event GetBugLinksCompletedEventHandler GetBugLinksCompleted;
        
        /// <remarks/>
        public event GetBugLinksCountCompletedEventHandler GetBugLinksCountCompleted;
        
        /// <remarks/>
        public event DeleteBugLinkCompletedEventHandler DeleteBugLinkCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateBugLinkCompletedEventHandler CreateOrUpdateBugLinkCompleted;
        
        /// <remarks/>
        public event GetBugLinkByIdCompletedEventHandler GetBugLinkByIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateBugPriority", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateBugPriority(string ticket, TransitBugPriority priority) {
            object[] results = this.Invoke("CreateOrUpdateBugPriority", new object[] {
                        ticket,
                        priority});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugPriorityAsync(string ticket, TransitBugPriority priority) {
            this.CreateOrUpdateBugPriorityAsync(ticket, priority, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugPriorityAsync(string ticket, TransitBugPriority priority, object userState) {
            if ((this.CreateOrUpdateBugPriorityOperationCompleted == null)) {
                this.CreateOrUpdateBugPriorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateBugPriorityOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateBugPriority", new object[] {
                        ticket,
                        priority}, this.CreateOrUpdateBugPriorityOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateBugPriorityOperationCompleted(object arg) {
            if ((this.CreateOrUpdateBugPriorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateBugPriorityCompleted(this, new CreateOrUpdateBugPriorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugPriorityById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugPriority GetBugPriorityById(string ticket, int id) {
            object[] results = this.Invoke("GetBugPriorityById", new object[] {
                        ticket,
                        id});
            return ((TransitBugPriority)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugPriorityByIdAsync(string ticket, int id) {
            this.GetBugPriorityByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetBugPriorityByIdAsync(string ticket, int id, object userState) {
            if ((this.GetBugPriorityByIdOperationCompleted == null)) {
                this.GetBugPriorityByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugPriorityByIdOperationCompleted);
            }
            this.InvokeAsync("GetBugPriorityById", new object[] {
                        ticket,
                        id}, this.GetBugPriorityByIdOperationCompleted, userState);
        }
        
        private void OnGetBugPriorityByIdOperationCompleted(object arg) {
            if ((this.GetBugPriorityByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugPriorityByIdCompleted(this, new GetBugPriorityByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugPriorities", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugPriority[] GetBugPriorities(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetBugPriorities", new object[] {
                        ticket,
                        options});
            return ((TransitBugPriority[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBugPrioritiesAsync(string ticket, ServiceQueryOptions options) {
            this.GetBugPrioritiesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetBugPrioritiesAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetBugPrioritiesOperationCompleted == null)) {
                this.GetBugPrioritiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugPrioritiesOperationCompleted);
            }
            this.InvokeAsync("GetBugPriorities", new object[] {
                        ticket,
                        options}, this.GetBugPrioritiesOperationCompleted, userState);
        }
        
        private void OnGetBugPrioritiesOperationCompleted(object arg) {
            if ((this.GetBugPrioritiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugPrioritiesCompleted(this, new GetBugPrioritiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugPrioritiesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBugPrioritiesCount(string ticket) {
            object[] results = this.Invoke("GetBugPrioritiesCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugPrioritiesCountAsync(string ticket) {
            this.GetBugPrioritiesCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetBugPrioritiesCountAsync(string ticket, object userState) {
            if ((this.GetBugPrioritiesCountOperationCompleted == null)) {
                this.GetBugPrioritiesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugPrioritiesCountOperationCompleted);
            }
            this.InvokeAsync("GetBugPrioritiesCount", new object[] {
                        ticket}, this.GetBugPrioritiesCountOperationCompleted, userState);
        }
        
        private void OnGetBugPrioritiesCountOperationCompleted(object arg) {
            if ((this.GetBugPrioritiesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugPrioritiesCountCompleted(this, new GetBugPrioritiesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteBugPriority", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteBugPriority(string ticket, int id) {
            this.Invoke("DeleteBugPriority", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteBugPriorityAsync(string ticket, int id) {
            this.DeleteBugPriorityAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteBugPriorityAsync(string ticket, int id, object userState) {
            if ((this.DeleteBugPriorityOperationCompleted == null)) {
                this.DeleteBugPriorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBugPriorityOperationCompleted);
            }
            this.InvokeAsync("DeleteBugPriority", new object[] {
                        ticket,
                        id}, this.DeleteBugPriorityOperationCompleted, userState);
        }
        
        private void OnDeleteBugPriorityOperationCompleted(object arg) {
            if ((this.DeleteBugPriorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBugPriorityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateBugSeverity", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateBugSeverity(string ticket, TransitBugSeverity severity) {
            object[] results = this.Invoke("CreateOrUpdateBugSeverity", new object[] {
                        ticket,
                        severity});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugSeverityAsync(string ticket, TransitBugSeverity severity) {
            this.CreateOrUpdateBugSeverityAsync(ticket, severity, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugSeverityAsync(string ticket, TransitBugSeverity severity, object userState) {
            if ((this.CreateOrUpdateBugSeverityOperationCompleted == null)) {
                this.CreateOrUpdateBugSeverityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateBugSeverityOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateBugSeverity", new object[] {
                        ticket,
                        severity}, this.CreateOrUpdateBugSeverityOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateBugSeverityOperationCompleted(object arg) {
            if ((this.CreateOrUpdateBugSeverityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateBugSeverityCompleted(this, new CreateOrUpdateBugSeverityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugSeverityById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugSeverity GetBugSeverityById(string ticket, int id) {
            object[] results = this.Invoke("GetBugSeverityById", new object[] {
                        ticket,
                        id});
            return ((TransitBugSeverity)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugSeverityByIdAsync(string ticket, int id) {
            this.GetBugSeverityByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetBugSeverityByIdAsync(string ticket, int id, object userState) {
            if ((this.GetBugSeverityByIdOperationCompleted == null)) {
                this.GetBugSeverityByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugSeverityByIdOperationCompleted);
            }
            this.InvokeAsync("GetBugSeverityById", new object[] {
                        ticket,
                        id}, this.GetBugSeverityByIdOperationCompleted, userState);
        }
        
        private void OnGetBugSeverityByIdOperationCompleted(object arg) {
            if ((this.GetBugSeverityByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugSeverityByIdCompleted(this, new GetBugSeverityByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugSeverities", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugSeverity[] GetBugSeverities(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetBugSeverities", new object[] {
                        ticket,
                        options});
            return ((TransitBugSeverity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBugSeveritiesAsync(string ticket, ServiceQueryOptions options) {
            this.GetBugSeveritiesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetBugSeveritiesAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetBugSeveritiesOperationCompleted == null)) {
                this.GetBugSeveritiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugSeveritiesOperationCompleted);
            }
            this.InvokeAsync("GetBugSeverities", new object[] {
                        ticket,
                        options}, this.GetBugSeveritiesOperationCompleted, userState);
        }
        
        private void OnGetBugSeveritiesOperationCompleted(object arg) {
            if ((this.GetBugSeveritiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugSeveritiesCompleted(this, new GetBugSeveritiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugSeveritiesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBugSeveritiesCount(string ticket) {
            object[] results = this.Invoke("GetBugSeveritiesCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugSeveritiesCountAsync(string ticket) {
            this.GetBugSeveritiesCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetBugSeveritiesCountAsync(string ticket, object userState) {
            if ((this.GetBugSeveritiesCountOperationCompleted == null)) {
                this.GetBugSeveritiesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugSeveritiesCountOperationCompleted);
            }
            this.InvokeAsync("GetBugSeveritiesCount", new object[] {
                        ticket}, this.GetBugSeveritiesCountOperationCompleted, userState);
        }
        
        private void OnGetBugSeveritiesCountOperationCompleted(object arg) {
            if ((this.GetBugSeveritiesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugSeveritiesCountCompleted(this, new GetBugSeveritiesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteBugSeverity", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteBugSeverity(string ticket, int id) {
            this.Invoke("DeleteBugSeverity", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteBugSeverityAsync(string ticket, int id) {
            this.DeleteBugSeverityAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteBugSeverityAsync(string ticket, int id, object userState) {
            if ((this.DeleteBugSeverityOperationCompleted == null)) {
                this.DeleteBugSeverityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBugSeverityOperationCompleted);
            }
            this.InvokeAsync("DeleteBugSeverity", new object[] {
                        ticket,
                        id}, this.DeleteBugSeverityOperationCompleted, userState);
        }
        
        private void OnDeleteBugSeverityOperationCompleted(object arg) {
            if ((this.DeleteBugSeverityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBugSeverityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateBugResolution", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateBugResolution(string ticket, TransitBugResolution resolution) {
            object[] results = this.Invoke("CreateOrUpdateBugResolution", new object[] {
                        ticket,
                        resolution});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugResolutionAsync(string ticket, TransitBugResolution resolution) {
            this.CreateOrUpdateBugResolutionAsync(ticket, resolution, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugResolutionAsync(string ticket, TransitBugResolution resolution, object userState) {
            if ((this.CreateOrUpdateBugResolutionOperationCompleted == null)) {
                this.CreateOrUpdateBugResolutionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateBugResolutionOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateBugResolution", new object[] {
                        ticket,
                        resolution}, this.CreateOrUpdateBugResolutionOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateBugResolutionOperationCompleted(object arg) {
            if ((this.CreateOrUpdateBugResolutionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateBugResolutionCompleted(this, new CreateOrUpdateBugResolutionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugResolutionById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugResolution GetBugResolutionById(string ticket, int id) {
            object[] results = this.Invoke("GetBugResolutionById", new object[] {
                        ticket,
                        id});
            return ((TransitBugResolution)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugResolutionByIdAsync(string ticket, int id) {
            this.GetBugResolutionByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetBugResolutionByIdAsync(string ticket, int id, object userState) {
            if ((this.GetBugResolutionByIdOperationCompleted == null)) {
                this.GetBugResolutionByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugResolutionByIdOperationCompleted);
            }
            this.InvokeAsync("GetBugResolutionById", new object[] {
                        ticket,
                        id}, this.GetBugResolutionByIdOperationCompleted, userState);
        }
        
        private void OnGetBugResolutionByIdOperationCompleted(object arg) {
            if ((this.GetBugResolutionByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugResolutionByIdCompleted(this, new GetBugResolutionByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugResolutions", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugResolution[] GetBugResolutions(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetBugResolutions", new object[] {
                        ticket,
                        options});
            return ((TransitBugResolution[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBugResolutionsAsync(string ticket, ServiceQueryOptions options) {
            this.GetBugResolutionsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetBugResolutionsAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetBugResolutionsOperationCompleted == null)) {
                this.GetBugResolutionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugResolutionsOperationCompleted);
            }
            this.InvokeAsync("GetBugResolutions", new object[] {
                        ticket,
                        options}, this.GetBugResolutionsOperationCompleted, userState);
        }
        
        private void OnGetBugResolutionsOperationCompleted(object arg) {
            if ((this.GetBugResolutionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugResolutionsCompleted(this, new GetBugResolutionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugResolutionsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBugResolutionsCount(string ticket) {
            object[] results = this.Invoke("GetBugResolutionsCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugResolutionsCountAsync(string ticket) {
            this.GetBugResolutionsCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetBugResolutionsCountAsync(string ticket, object userState) {
            if ((this.GetBugResolutionsCountOperationCompleted == null)) {
                this.GetBugResolutionsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugResolutionsCountOperationCompleted);
            }
            this.InvokeAsync("GetBugResolutionsCount", new object[] {
                        ticket}, this.GetBugResolutionsCountOperationCompleted, userState);
        }
        
        private void OnGetBugResolutionsCountOperationCompleted(object arg) {
            if ((this.GetBugResolutionsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugResolutionsCountCompleted(this, new GetBugResolutionsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteBugResolution", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteBugResolution(string ticket, int id) {
            this.Invoke("DeleteBugResolution", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteBugResolutionAsync(string ticket, int id) {
            this.DeleteBugResolutionAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteBugResolutionAsync(string ticket, int id, object userState) {
            if ((this.DeleteBugResolutionOperationCompleted == null)) {
                this.DeleteBugResolutionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBugResolutionOperationCompleted);
            }
            this.InvokeAsync("DeleteBugResolution", new object[] {
                        ticket,
                        id}, this.DeleteBugResolutionOperationCompleted, userState);
        }
        
        private void OnDeleteBugResolutionOperationCompleted(object arg) {
            if ((this.DeleteBugResolutionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBugResolutionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateBugStatus", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateBugStatus(string ticket, TransitBugStatus status) {
            object[] results = this.Invoke("CreateOrUpdateBugStatus", new object[] {
                        ticket,
                        status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugStatusAsync(string ticket, TransitBugStatus status) {
            this.CreateOrUpdateBugStatusAsync(ticket, status, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugStatusAsync(string ticket, TransitBugStatus status, object userState) {
            if ((this.CreateOrUpdateBugStatusOperationCompleted == null)) {
                this.CreateOrUpdateBugStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateBugStatusOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateBugStatus", new object[] {
                        ticket,
                        status}, this.CreateOrUpdateBugStatusOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateBugStatusOperationCompleted(object arg) {
            if ((this.CreateOrUpdateBugStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateBugStatusCompleted(this, new CreateOrUpdateBugStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugStatusById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugStatus GetBugStatusById(string ticket, int id) {
            object[] results = this.Invoke("GetBugStatusById", new object[] {
                        ticket,
                        id});
            return ((TransitBugStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugStatusByIdAsync(string ticket, int id) {
            this.GetBugStatusByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetBugStatusByIdAsync(string ticket, int id, object userState) {
            if ((this.GetBugStatusByIdOperationCompleted == null)) {
                this.GetBugStatusByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugStatusByIdOperationCompleted);
            }
            this.InvokeAsync("GetBugStatusById", new object[] {
                        ticket,
                        id}, this.GetBugStatusByIdOperationCompleted, userState);
        }
        
        private void OnGetBugStatusByIdOperationCompleted(object arg) {
            if ((this.GetBugStatusByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugStatusByIdCompleted(this, new GetBugStatusByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugStatuses", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugStatus[] GetBugStatuses(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetBugStatuses", new object[] {
                        ticket,
                        options});
            return ((TransitBugStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBugStatusesAsync(string ticket, ServiceQueryOptions options) {
            this.GetBugStatusesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetBugStatusesAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetBugStatusesOperationCompleted == null)) {
                this.GetBugStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugStatusesOperationCompleted);
            }
            this.InvokeAsync("GetBugStatuses", new object[] {
                        ticket,
                        options}, this.GetBugStatusesOperationCompleted, userState);
        }
        
        private void OnGetBugStatusesOperationCompleted(object arg) {
            if ((this.GetBugStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugStatusesCompleted(this, new GetBugStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugStatusesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBugStatusesCount(string ticket) {
            object[] results = this.Invoke("GetBugStatusesCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugStatusesCountAsync(string ticket) {
            this.GetBugStatusesCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetBugStatusesCountAsync(string ticket, object userState) {
            if ((this.GetBugStatusesCountOperationCompleted == null)) {
                this.GetBugStatusesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugStatusesCountOperationCompleted);
            }
            this.InvokeAsync("GetBugStatusesCount", new object[] {
                        ticket}, this.GetBugStatusesCountOperationCompleted, userState);
        }
        
        private void OnGetBugStatusesCountOperationCompleted(object arg) {
            if ((this.GetBugStatusesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugStatusesCountCompleted(this, new GetBugStatusesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteBugStatus", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteBugStatus(string ticket, int id) {
            this.Invoke("DeleteBugStatus", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteBugStatusAsync(string ticket, int id) {
            this.DeleteBugStatusAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteBugStatusAsync(string ticket, int id, object userState) {
            if ((this.DeleteBugStatusOperationCompleted == null)) {
                this.DeleteBugStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBugStatusOperationCompleted);
            }
            this.InvokeAsync("DeleteBugStatus", new object[] {
                        ticket,
                        id}, this.DeleteBugStatusOperationCompleted, userState);
        }
        
        private void OnDeleteBugStatusOperationCompleted(object arg) {
            if ((this.DeleteBugStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBugStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateBugType", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateBugType(string ticket, TransitBugType type) {
            object[] results = this.Invoke("CreateOrUpdateBugType", new object[] {
                        ticket,
                        type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugTypeAsync(string ticket, TransitBugType type) {
            this.CreateOrUpdateBugTypeAsync(ticket, type, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugTypeAsync(string ticket, TransitBugType type, object userState) {
            if ((this.CreateOrUpdateBugTypeOperationCompleted == null)) {
                this.CreateOrUpdateBugTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateBugTypeOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateBugType", new object[] {
                        ticket,
                        type}, this.CreateOrUpdateBugTypeOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateBugTypeOperationCompleted(object arg) {
            if ((this.CreateOrUpdateBugTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateBugTypeCompleted(this, new CreateOrUpdateBugTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugTypeById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugType GetBugTypeById(string ticket, int id) {
            object[] results = this.Invoke("GetBugTypeById", new object[] {
                        ticket,
                        id});
            return ((TransitBugType)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugTypeByIdAsync(string ticket, int id) {
            this.GetBugTypeByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetBugTypeByIdAsync(string ticket, int id, object userState) {
            if ((this.GetBugTypeByIdOperationCompleted == null)) {
                this.GetBugTypeByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugTypeByIdOperationCompleted);
            }
            this.InvokeAsync("GetBugTypeById", new object[] {
                        ticket,
                        id}, this.GetBugTypeByIdOperationCompleted, userState);
        }
        
        private void OnGetBugTypeByIdOperationCompleted(object arg) {
            if ((this.GetBugTypeByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugTypeByIdCompleted(this, new GetBugTypeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugTypesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBugTypesCount(string ticket) {
            object[] results = this.Invoke("GetBugTypesCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugTypesCountAsync(string ticket) {
            this.GetBugTypesCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetBugTypesCountAsync(string ticket, object userState) {
            if ((this.GetBugTypesCountOperationCompleted == null)) {
                this.GetBugTypesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugTypesCountOperationCompleted);
            }
            this.InvokeAsync("GetBugTypesCount", new object[] {
                        ticket}, this.GetBugTypesCountOperationCompleted, userState);
        }
        
        private void OnGetBugTypesCountOperationCompleted(object arg) {
            if ((this.GetBugTypesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugTypesCountCompleted(this, new GetBugTypesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugTypes", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugType[] GetBugTypes(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetBugTypes", new object[] {
                        ticket,
                        options});
            return ((TransitBugType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBugTypesAsync(string ticket, ServiceQueryOptions options) {
            this.GetBugTypesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetBugTypesAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetBugTypesOperationCompleted == null)) {
                this.GetBugTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugTypesOperationCompleted);
            }
            this.InvokeAsync("GetBugTypes", new object[] {
                        ticket,
                        options}, this.GetBugTypesOperationCompleted, userState);
        }
        
        private void OnGetBugTypesOperationCompleted(object arg) {
            if ((this.GetBugTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugTypesCompleted(this, new GetBugTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteBugType", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteBugType(string ticket, int id) {
            this.Invoke("DeleteBugType", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteBugTypeAsync(string ticket, int id) {
            this.DeleteBugTypeAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteBugTypeAsync(string ticket, int id, object userState) {
            if ((this.DeleteBugTypeOperationCompleted == null)) {
                this.DeleteBugTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBugTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteBugType", new object[] {
                        ticket,
                        id}, this.DeleteBugTypeOperationCompleted, userState);
        }
        
        private void OnDeleteBugTypeOperationCompleted(object arg) {
            if ((this.DeleteBugTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBugTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateBugProject", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateBugProject(string ticket, TransitBugProject project) {
            object[] results = this.Invoke("CreateOrUpdateBugProject", new object[] {
                        ticket,
                        project});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugProjectAsync(string ticket, TransitBugProject project) {
            this.CreateOrUpdateBugProjectAsync(ticket, project, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugProjectAsync(string ticket, TransitBugProject project, object userState) {
            if ((this.CreateOrUpdateBugProjectOperationCompleted == null)) {
                this.CreateOrUpdateBugProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateBugProjectOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateBugProject", new object[] {
                        ticket,
                        project}, this.CreateOrUpdateBugProjectOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateBugProjectOperationCompleted(object arg) {
            if ((this.CreateOrUpdateBugProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateBugProjectCompleted(this, new CreateOrUpdateBugProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugProjectById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugProject GetBugProjectById(string ticket, int id) {
            object[] results = this.Invoke("GetBugProjectById", new object[] {
                        ticket,
                        id});
            return ((TransitBugProject)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugProjectByIdAsync(string ticket, int id) {
            this.GetBugProjectByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetBugProjectByIdAsync(string ticket, int id, object userState) {
            if ((this.GetBugProjectByIdOperationCompleted == null)) {
                this.GetBugProjectByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugProjectByIdOperationCompleted);
            }
            this.InvokeAsync("GetBugProjectById", new object[] {
                        ticket,
                        id}, this.GetBugProjectByIdOperationCompleted, userState);
        }
        
        private void OnGetBugProjectByIdOperationCompleted(object arg) {
            if ((this.GetBugProjectByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugProjectByIdCompleted(this, new GetBugProjectByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugProjects", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugProject[] GetBugProjects(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetBugProjects", new object[] {
                        ticket,
                        options});
            return ((TransitBugProject[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBugProjectsAsync(string ticket, ServiceQueryOptions options) {
            this.GetBugProjectsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetBugProjectsAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetBugProjectsOperationCompleted == null)) {
                this.GetBugProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugProjectsOperationCompleted);
            }
            this.InvokeAsync("GetBugProjects", new object[] {
                        ticket,
                        options}, this.GetBugProjectsOperationCompleted, userState);
        }
        
        private void OnGetBugProjectsOperationCompleted(object arg) {
            if ((this.GetBugProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugProjectsCompleted(this, new GetBugProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugProjectsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBugProjectsCount(string ticket) {
            object[] results = this.Invoke("GetBugProjectsCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugProjectsCountAsync(string ticket) {
            this.GetBugProjectsCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetBugProjectsCountAsync(string ticket, object userState) {
            if ((this.GetBugProjectsCountOperationCompleted == null)) {
                this.GetBugProjectsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugProjectsCountOperationCompleted);
            }
            this.InvokeAsync("GetBugProjectsCount", new object[] {
                        ticket}, this.GetBugProjectsCountOperationCompleted, userState);
        }
        
        private void OnGetBugProjectsCountOperationCompleted(object arg) {
            if ((this.GetBugProjectsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugProjectsCountCompleted(this, new GetBugProjectsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteBugProject", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteBugProject(string ticket, int id) {
            this.Invoke("DeleteBugProject", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteBugProjectAsync(string ticket, int id) {
            this.DeleteBugProjectAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteBugProjectAsync(string ticket, int id, object userState) {
            if ((this.DeleteBugProjectOperationCompleted == null)) {
                this.DeleteBugProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBugProjectOperationCompleted);
            }
            this.InvokeAsync("DeleteBugProject", new object[] {
                        ticket,
                        id}, this.DeleteBugProjectOperationCompleted, userState);
        }
        
        private void OnDeleteBugProjectOperationCompleted(object arg) {
            if ((this.DeleteBugProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBugProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugsWithOptionsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBugsWithOptionsCount(string ticket, TransitBugQueryOptions qopt) {
            object[] results = this.Invoke("GetBugsWithOptionsCount", new object[] {
                        ticket,
                        qopt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugsWithOptionsCountAsync(string ticket, TransitBugQueryOptions qopt) {
            this.GetBugsWithOptionsCountAsync(ticket, qopt, null);
        }
        
        /// <remarks/>
        public void GetBugsWithOptionsCountAsync(string ticket, TransitBugQueryOptions qopt, object userState) {
            if ((this.GetBugsWithOptionsCountOperationCompleted == null)) {
                this.GetBugsWithOptionsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugsWithOptionsCountOperationCompleted);
            }
            this.InvokeAsync("GetBugsWithOptionsCount", new object[] {
                        ticket,
                        qopt}, this.GetBugsWithOptionsCountOperationCompleted, userState);
        }
        
        private void OnGetBugsWithOptionsCountOperationCompleted(object arg) {
            if ((this.GetBugsWithOptionsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugsWithOptionsCountCompleted(this, new GetBugsWithOptionsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugsWithOptions", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBug[] GetBugsWithOptions(string ticket, TransitBugQueryOptions qopt, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetBugsWithOptions", new object[] {
                        ticket,
                        qopt,
                        options});
            return ((TransitBug[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBugsWithOptionsAsync(string ticket, TransitBugQueryOptions qopt, ServiceQueryOptions options) {
            this.GetBugsWithOptionsAsync(ticket, qopt, options, null);
        }
        
        /// <remarks/>
        public void GetBugsWithOptionsAsync(string ticket, TransitBugQueryOptions qopt, ServiceQueryOptions options, object userState) {
            if ((this.GetBugsWithOptionsOperationCompleted == null)) {
                this.GetBugsWithOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugsWithOptionsOperationCompleted);
            }
            this.InvokeAsync("GetBugsWithOptions", new object[] {
                        ticket,
                        qopt,
                        options}, this.GetBugsWithOptionsOperationCompleted, userState);
        }
        
        private void OnGetBugsWithOptionsOperationCompleted(object arg) {
            if ((this.GetBugsWithOptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugsWithOptionsCompleted(this, new GetBugsWithOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateBug", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateBug(string ticket, TransitBug bug) {
            object[] results = this.Invoke("CreateOrUpdateBug", new object[] {
                        ticket,
                        bug});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugAsync(string ticket, TransitBug bug) {
            this.CreateOrUpdateBugAsync(ticket, bug, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugAsync(string ticket, TransitBug bug, object userState) {
            if ((this.CreateOrUpdateBugOperationCompleted == null)) {
                this.CreateOrUpdateBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateBugOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateBug", new object[] {
                        ticket,
                        bug}, this.CreateOrUpdateBugOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateBugOperationCompleted(object arg) {
            if ((this.CreateOrUpdateBugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateBugCompleted(this, new CreateOrUpdateBugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBug GetBugById(string ticket, int id) {
            object[] results = this.Invoke("GetBugById", new object[] {
                        ticket,
                        id});
            return ((TransitBug)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugByIdAsync(string ticket, int id) {
            this.GetBugByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetBugByIdAsync(string ticket, int id, object userState) {
            if ((this.GetBugByIdOperationCompleted == null)) {
                this.GetBugByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugByIdOperationCompleted);
            }
            this.InvokeAsync("GetBugById", new object[] {
                        ticket,
                        id}, this.GetBugByIdOperationCompleted, userState);
        }
        
        private void OnGetBugByIdOperationCompleted(object arg) {
            if ((this.GetBugByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugByIdCompleted(this, new GetBugByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBugsCount(string ticket, int project_id) {
            object[] results = this.Invoke("GetBugsCount", new object[] {
                        ticket,
                        project_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugsCountAsync(string ticket, int project_id) {
            this.GetBugsCountAsync(ticket, project_id, null);
        }
        
        /// <remarks/>
        public void GetBugsCountAsync(string ticket, int project_id, object userState) {
            if ((this.GetBugsCountOperationCompleted == null)) {
                this.GetBugsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugsCountOperationCompleted);
            }
            this.InvokeAsync("GetBugsCount", new object[] {
                        ticket,
                        project_id}, this.GetBugsCountOperationCompleted, userState);
        }
        
        private void OnGetBugsCountOperationCompleted(object arg) {
            if ((this.GetBugsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugsCountCompleted(this, new GetBugsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugs", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBug[] GetBugs(string ticket, int project_id, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetBugs", new object[] {
                        ticket,
                        project_id,
                        options});
            return ((TransitBug[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBugsAsync(string ticket, int project_id, ServiceQueryOptions options) {
            this.GetBugsAsync(ticket, project_id, options, null);
        }
        
        /// <remarks/>
        public void GetBugsAsync(string ticket, int project_id, ServiceQueryOptions options, object userState) {
            if ((this.GetBugsOperationCompleted == null)) {
                this.GetBugsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugsOperationCompleted);
            }
            this.InvokeAsync("GetBugs", new object[] {
                        ticket,
                        project_id,
                        options}, this.GetBugsOperationCompleted, userState);
        }
        
        private void OnGetBugsOperationCompleted(object arg) {
            if ((this.GetBugsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugsCompleted(this, new GetBugsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteBug", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteBug(string ticket, int id) {
            this.Invoke("DeleteBug", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteBugAsync(string ticket, int id) {
            this.DeleteBugAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteBugAsync(string ticket, int id, object userState) {
            if ((this.DeleteBugOperationCompleted == null)) {
                this.DeleteBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBugOperationCompleted);
            }
            this.InvokeAsync("DeleteBug", new object[] {
                        ticket,
                        id}, this.DeleteBugOperationCompleted, userState);
        }
        
        private void OnDeleteBugOperationCompleted(object arg) {
            if ((this.DeleteBugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBugCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/ResolveBug", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResolveBug(string ticket, int bugid, string resolution, string note) {
            this.Invoke("ResolveBug", new object[] {
                        ticket,
                        bugid,
                        resolution,
                        note});
        }
        
        /// <remarks/>
        public void ResolveBugAsync(string ticket, int bugid, string resolution, string note) {
            this.ResolveBugAsync(ticket, bugid, resolution, note, null);
        }
        
        /// <remarks/>
        public void ResolveBugAsync(string ticket, int bugid, string resolution, string note, object userState) {
            if ((this.ResolveBugOperationCompleted == null)) {
                this.ResolveBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveBugOperationCompleted);
            }
            this.InvokeAsync("ResolveBug", new object[] {
                        ticket,
                        bugid,
                        resolution,
                        note}, this.ResolveBugOperationCompleted, userState);
        }
        
        private void OnResolveBugOperationCompleted(object arg) {
            if ((this.ResolveBugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResolveBugCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CloseBug", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseBug(string ticket, int bugid) {
            this.Invoke("CloseBug", new object[] {
                        ticket,
                        bugid});
        }
        
        /// <remarks/>
        public void CloseBugAsync(string ticket, int bugid) {
            this.CloseBugAsync(ticket, bugid, null);
        }
        
        /// <remarks/>
        public void CloseBugAsync(string ticket, int bugid, object userState) {
            if ((this.CloseBugOperationCompleted == null)) {
                this.CloseBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseBugOperationCompleted);
            }
            this.InvokeAsync("CloseBug", new object[] {
                        ticket,
                        bugid}, this.CloseBugOperationCompleted, userState);
        }
        
        private void OnCloseBugOperationCompleted(object arg) {
            if ((this.CloseBugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseBugCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/ReopenBug", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReopenBug(string ticket, int bugid) {
            this.Invoke("ReopenBug", new object[] {
                        ticket,
                        bugid});
        }
        
        /// <remarks/>
        public void ReopenBugAsync(string ticket, int bugid) {
            this.ReopenBugAsync(ticket, bugid, null);
        }
        
        /// <remarks/>
        public void ReopenBugAsync(string ticket, int bugid, object userState) {
            if ((this.ReopenBugOperationCompleted == null)) {
                this.ReopenBugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReopenBugOperationCompleted);
            }
            this.InvokeAsync("ReopenBug", new object[] {
                        ticket,
                        bugid}, this.ReopenBugOperationCompleted, userState);
        }
        
        private void OnReopenBugOperationCompleted(object arg) {
            if ((this.ReopenBugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReopenBugCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugNotes", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugNote[] GetBugNotes(string ticket, int bug_id, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetBugNotes", new object[] {
                        ticket,
                        bug_id,
                        options});
            return ((TransitBugNote[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBugNotesAsync(string ticket, int bug_id, ServiceQueryOptions options) {
            this.GetBugNotesAsync(ticket, bug_id, options, null);
        }
        
        /// <remarks/>
        public void GetBugNotesAsync(string ticket, int bug_id, ServiceQueryOptions options, object userState) {
            if ((this.GetBugNotesOperationCompleted == null)) {
                this.GetBugNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugNotesOperationCompleted);
            }
            this.InvokeAsync("GetBugNotes", new object[] {
                        ticket,
                        bug_id,
                        options}, this.GetBugNotesOperationCompleted, userState);
        }
        
        private void OnGetBugNotesOperationCompleted(object arg) {
            if ((this.GetBugNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugNotesCompleted(this, new GetBugNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugNotesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBugNotesCount(string ticket, int bug_id) {
            object[] results = this.Invoke("GetBugNotesCount", new object[] {
                        ticket,
                        bug_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugNotesCountAsync(string ticket, int bug_id) {
            this.GetBugNotesCountAsync(ticket, bug_id, null);
        }
        
        /// <remarks/>
        public void GetBugNotesCountAsync(string ticket, int bug_id, object userState) {
            if ((this.GetBugNotesCountOperationCompleted == null)) {
                this.GetBugNotesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugNotesCountOperationCompleted);
            }
            this.InvokeAsync("GetBugNotesCount", new object[] {
                        ticket,
                        bug_id}, this.GetBugNotesCountOperationCompleted, userState);
        }
        
        private void OnGetBugNotesCountOperationCompleted(object arg) {
            if ((this.GetBugNotesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugNotesCountCompleted(this, new GetBugNotesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteBugNote", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteBugNote(string ticket, int id) {
            this.Invoke("DeleteBugNote", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteBugNoteAsync(string ticket, int id) {
            this.DeleteBugNoteAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteBugNoteAsync(string ticket, int id, object userState) {
            if ((this.DeleteBugNoteOperationCompleted == null)) {
                this.DeleteBugNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBugNoteOperationCompleted);
            }
            this.InvokeAsync("DeleteBugNote", new object[] {
                        ticket,
                        id}, this.DeleteBugNoteOperationCompleted, userState);
        }
        
        private void OnDeleteBugNoteOperationCompleted(object arg) {
            if ((this.DeleteBugNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBugNoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateBugNote", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateBugNote(string ticket, TransitBugNote bugnote) {
            object[] results = this.Invoke("CreateOrUpdateBugNote", new object[] {
                        ticket,
                        bugnote});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugNoteAsync(string ticket, TransitBugNote bugnote) {
            this.CreateOrUpdateBugNoteAsync(ticket, bugnote, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugNoteAsync(string ticket, TransitBugNote bugnote, object userState) {
            if ((this.CreateOrUpdateBugNoteOperationCompleted == null)) {
                this.CreateOrUpdateBugNoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateBugNoteOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateBugNote", new object[] {
                        ticket,
                        bugnote}, this.CreateOrUpdateBugNoteOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateBugNoteOperationCompleted(object arg) {
            if ((this.CreateOrUpdateBugNoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateBugNoteCompleted(this, new CreateOrUpdateBugNoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugNoteById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugNote GetBugNoteById(string ticket, int id) {
            object[] results = this.Invoke("GetBugNoteById", new object[] {
                        ticket,
                        id});
            return ((TransitBugNote)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugNoteByIdAsync(string ticket, int id) {
            this.GetBugNoteByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetBugNoteByIdAsync(string ticket, int id, object userState) {
            if ((this.GetBugNoteByIdOperationCompleted == null)) {
                this.GetBugNoteByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugNoteByIdOperationCompleted);
            }
            this.InvokeAsync("GetBugNoteById", new object[] {
                        ticket,
                        id}, this.GetBugNoteByIdOperationCompleted, userState);
        }
        
        private void OnGetBugNoteByIdOperationCompleted(object arg) {
            if ((this.GetBugNoteByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugNoteByIdCompleted(this, new GetBugNoteByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugLinks", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugLink[] GetBugLinks(string ticket, int bug_id, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetBugLinks", new object[] {
                        ticket,
                        bug_id,
                        options});
            return ((TransitBugLink[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBugLinksAsync(string ticket, int bug_id, ServiceQueryOptions options) {
            this.GetBugLinksAsync(ticket, bug_id, options, null);
        }
        
        /// <remarks/>
        public void GetBugLinksAsync(string ticket, int bug_id, ServiceQueryOptions options, object userState) {
            if ((this.GetBugLinksOperationCompleted == null)) {
                this.GetBugLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugLinksOperationCompleted);
            }
            this.InvokeAsync("GetBugLinks", new object[] {
                        ticket,
                        bug_id,
                        options}, this.GetBugLinksOperationCompleted, userState);
        }
        
        private void OnGetBugLinksOperationCompleted(object arg) {
            if ((this.GetBugLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugLinksCompleted(this, new GetBugLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugLinksCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBugLinksCount(string ticket, int bug_id) {
            object[] results = this.Invoke("GetBugLinksCount", new object[] {
                        ticket,
                        bug_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugLinksCountAsync(string ticket, int bug_id) {
            this.GetBugLinksCountAsync(ticket, bug_id, null);
        }
        
        /// <remarks/>
        public void GetBugLinksCountAsync(string ticket, int bug_id, object userState) {
            if ((this.GetBugLinksCountOperationCompleted == null)) {
                this.GetBugLinksCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugLinksCountOperationCompleted);
            }
            this.InvokeAsync("GetBugLinksCount", new object[] {
                        ticket,
                        bug_id}, this.GetBugLinksCountOperationCompleted, userState);
        }
        
        private void OnGetBugLinksCountOperationCompleted(object arg) {
            if ((this.GetBugLinksCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugLinksCountCompleted(this, new GetBugLinksCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteBugLink", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteBugLink(string ticket, int id) {
            this.Invoke("DeleteBugLink", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteBugLinkAsync(string ticket, int id) {
            this.DeleteBugLinkAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteBugLinkAsync(string ticket, int id, object userState) {
            if ((this.DeleteBugLinkOperationCompleted == null)) {
                this.DeleteBugLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBugLinkOperationCompleted);
            }
            this.InvokeAsync("DeleteBugLink", new object[] {
                        ticket,
                        id}, this.DeleteBugLinkOperationCompleted, userState);
        }
        
        private void OnDeleteBugLinkOperationCompleted(object arg) {
            if ((this.DeleteBugLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBugLinkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateBugLink", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateBugLink(string ticket, TransitBugLink buglink) {
            object[] results = this.Invoke("CreateOrUpdateBugLink", new object[] {
                        ticket,
                        buglink});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugLinkAsync(string ticket, TransitBugLink buglink) {
            this.CreateOrUpdateBugLinkAsync(ticket, buglink, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateBugLinkAsync(string ticket, TransitBugLink buglink, object userState) {
            if ((this.CreateOrUpdateBugLinkOperationCompleted == null)) {
                this.CreateOrUpdateBugLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateBugLinkOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateBugLink", new object[] {
                        ticket,
                        buglink}, this.CreateOrUpdateBugLinkOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateBugLinkOperationCompleted(object arg) {
            if ((this.CreateOrUpdateBugLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateBugLinkCompleted(this, new CreateOrUpdateBugLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetBugLinkById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBugLink GetBugLinkById(string ticket, int id) {
            object[] results = this.Invoke("GetBugLinkById", new object[] {
                        ticket,
                        id});
            return ((TransitBugLink)(results[0]));
        }
        
        /// <remarks/>
        public void GetBugLinkByIdAsync(string ticket, int id) {
            this.GetBugLinkByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetBugLinkByIdAsync(string ticket, int id, object userState) {
            if ((this.GetBugLinkByIdOperationCompleted == null)) {
                this.GetBugLinkByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBugLinkByIdOperationCompleted);
            }
            this.InvokeAsync("GetBugLinkById", new object[] {
                        ticket,
                        id}, this.GetBugLinkByIdOperationCompleted, userState);
        }
        
        private void OnGetBugLinkByIdOperationCompleted(object arg) {
            if ((this.GetBugLinkByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBugLinkByIdCompleted(this, new GetBugLinkByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitBugPriority : TransitServiceOfBugPriority {
        
        private string nameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitBugPriority))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfBugPriority {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitBugLink))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfBugLink {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitBugLink : TransitServiceOfBugLink {
        
        private int bugIdField;
        
        private int relatedBugIdField;
        
        /// <remarks/>
        public int BugId {
            get {
                return this.bugIdField;
            }
            set {
                this.bugIdField = value;
            }
        }
        
        /// <remarks/>
        public int RelatedBugId {
            get {
                return this.relatedBugIdField;
            }
            set {
                this.relatedBugIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitBugNote))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfBugNote {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitBugNote : TransitServiceOfBugNote {
        
        private string detailsField;
        
        private int accountIdField;
        
        private string accountNameField;
        
        private int bugIdField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        /// <remarks/>
        public string Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public int BugId {
            get {
                return this.bugIdField;
            }
            set {
                this.bugIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitBug))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfBug {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitBug : TransitServiceOfBug {
        
        private string subjectField;
        
        private string detailsField;
        
        private System.DateTime createdField;
        
        private System.DateTime updatedField;
        
        private string statusField;
        
        private string typeField;
        
        private int accountIdField;
        
        private string accountNameField;
        
        private string priorityField;
        
        private string severityField;
        
        private string resolutionField;
        
        private int projectIdField;
        
        private string projectNameField;
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public string Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        public string Resolution {
            get {
                return this.resolutionField;
            }
            set {
                this.resolutionField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitBugQueryOptions {
        
        private string sortExpressionField;
        
        private TransitSortDirection sortDirectionField;
        
        private int projectIdField;
        
        private bool resolvedField;
        
        private bool closedField;
        
        private bool openField;
        
        private string searchQueryField;
        
        /// <remarks/>
        public string SortExpression {
            get {
                return this.sortExpressionField;
            }
            set {
                this.sortExpressionField = value;
            }
        }
        
        /// <remarks/>
        public TransitSortDirection SortDirection {
            get {
                return this.sortDirectionField;
            }
            set {
                this.sortDirectionField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public bool Resolved {
            get {
                return this.resolvedField;
            }
            set {
                this.resolvedField = value;
            }
        }
        
        /// <remarks/>
        public bool Closed {
            get {
                return this.closedField;
            }
            set {
                this.closedField = value;
            }
        }
        
        /// <remarks/>
        public bool Open {
            get {
                return this.openField;
            }
            set {
                this.openField = value;
            }
        }
        
        /// <remarks/>
        public string SearchQuery {
            get {
                return this.searchQueryField;
            }
            set {
                this.searchQueryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public enum TransitSortDirection {
        
        /// <remarks/>
        Ascending,
        
        /// <remarks/>
        Descending,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitBugProject))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfBugProject {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitBugProject : TransitServiceOfBugProject {
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitBugType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfBugType {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitBugType : TransitServiceOfBugType {
        
        private string nameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitBugStatus))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfBugStatu {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitBugStatus : TransitServiceOfBugStatu {
        
        private string nameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitBugResolution))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfBugResolution {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitBugResolution : TransitServiceOfBugResolution {
        
        private string nameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitBugSeverity))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfBugSeverity {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitBugSeverity : TransitServiceOfBugSeverity {
        
        private string nameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1434")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class ServiceQueryOptions {
        
        private int pageSizeField;
        
        private int pageNumberField;
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int PageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void CreateOrUpdateBugPriorityCompletedEventHandler(object sender, CreateOrUpdateBugPriorityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateBugPriorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateBugPriorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugPriorityByIdCompletedEventHandler(object sender, GetBugPriorityByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugPriorityByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugPriorityByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugPriority Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugPriority)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugPrioritiesCompletedEventHandler(object sender, GetBugPrioritiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugPrioritiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugPrioritiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugPriority[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugPriority[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugPrioritiesCountCompletedEventHandler(object sender, GetBugPrioritiesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugPrioritiesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugPrioritiesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void DeleteBugPriorityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void CreateOrUpdateBugSeverityCompletedEventHandler(object sender, CreateOrUpdateBugSeverityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateBugSeverityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateBugSeverityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugSeverityByIdCompletedEventHandler(object sender, GetBugSeverityByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugSeverityByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugSeverityByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugSeverity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugSeverity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugSeveritiesCompletedEventHandler(object sender, GetBugSeveritiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugSeveritiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugSeveritiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugSeverity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugSeverity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugSeveritiesCountCompletedEventHandler(object sender, GetBugSeveritiesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugSeveritiesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugSeveritiesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void DeleteBugSeverityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void CreateOrUpdateBugResolutionCompletedEventHandler(object sender, CreateOrUpdateBugResolutionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateBugResolutionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateBugResolutionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugResolutionByIdCompletedEventHandler(object sender, GetBugResolutionByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugResolutionByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugResolutionByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugResolution Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugResolution)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugResolutionsCompletedEventHandler(object sender, GetBugResolutionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugResolutionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugResolutionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugResolution[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugResolution[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugResolutionsCountCompletedEventHandler(object sender, GetBugResolutionsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugResolutionsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugResolutionsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void DeleteBugResolutionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void CreateOrUpdateBugStatusCompletedEventHandler(object sender, CreateOrUpdateBugStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateBugStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateBugStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugStatusByIdCompletedEventHandler(object sender, GetBugStatusByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugStatusByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugStatusByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugStatusesCompletedEventHandler(object sender, GetBugStatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugStatusesCountCompletedEventHandler(object sender, GetBugStatusesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugStatusesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugStatusesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void DeleteBugStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void CreateOrUpdateBugTypeCompletedEventHandler(object sender, CreateOrUpdateBugTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateBugTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateBugTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugTypeByIdCompletedEventHandler(object sender, GetBugTypeByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugTypeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugTypeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugTypesCountCompletedEventHandler(object sender, GetBugTypesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugTypesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugTypesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugTypesCompletedEventHandler(object sender, GetBugTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void DeleteBugTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void CreateOrUpdateBugProjectCompletedEventHandler(object sender, CreateOrUpdateBugProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateBugProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateBugProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugProjectByIdCompletedEventHandler(object sender, GetBugProjectByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugProjectByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugProjectByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugProject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugProject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugProjectsCompletedEventHandler(object sender, GetBugProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugProject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugProject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugProjectsCountCompletedEventHandler(object sender, GetBugProjectsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugProjectsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugProjectsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void DeleteBugProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugsWithOptionsCountCompletedEventHandler(object sender, GetBugsWithOptionsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugsWithOptionsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugsWithOptionsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugsWithOptionsCompletedEventHandler(object sender, GetBugsWithOptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugsWithOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugsWithOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBug[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBug[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void CreateOrUpdateBugCompletedEventHandler(object sender, CreateOrUpdateBugCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateBugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateBugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugByIdCompletedEventHandler(object sender, GetBugByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBug Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBug)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugsCountCompletedEventHandler(object sender, GetBugsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugsCompletedEventHandler(object sender, GetBugsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBug[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBug[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void DeleteBugCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void ResolveBugCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void CloseBugCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void ReopenBugCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugNotesCompletedEventHandler(object sender, GetBugNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugNote[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugNote[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugNotesCountCompletedEventHandler(object sender, GetBugNotesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugNotesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugNotesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void DeleteBugNoteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void CreateOrUpdateBugNoteCompletedEventHandler(object sender, CreateOrUpdateBugNoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateBugNoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateBugNoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugNoteByIdCompletedEventHandler(object sender, GetBugNoteByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugNoteByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugNoteByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugNote Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugNote)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugLinksCompletedEventHandler(object sender, GetBugLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugLink[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugLink[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugLinksCountCompletedEventHandler(object sender, GetBugLinksCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugLinksCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugLinksCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void DeleteBugLinkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void CreateOrUpdateBugLinkCompletedEventHandler(object sender, CreateOrUpdateBugLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateBugLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateBugLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    public delegate void GetBugLinkByIdCompletedEventHandler(object sender, GetBugLinkByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1434")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBugLinkByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBugLinkByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBugLink Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBugLink)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591