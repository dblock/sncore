//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace SnCore.Web.Soap.Tests.WebSystemService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebSystemServiceSoap", Namespace="http://www.vestris.com/sncore/ns/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfAttribute))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfConfiguration))]
    public partial class WebSystemService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCopyrightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUptimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationValueWithDefaultOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchedulesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttributeByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttributeIfModifiedSinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttributesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAttributeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebSystemService() {
            this.Url = global::SnCore.Web.Soap.Tests.Properties.Settings.Default.SnCore_Web_Soap_Tests_WebSystemService_WebSystemService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event GetTitleCompletedEventHandler GetTitleCompleted;
        
        /// <remarks/>
        public event GetCopyrightCompletedEventHandler GetCopyrightCompleted;
        
        /// <remarks/>
        public event GetDescriptionCompletedEventHandler GetDescriptionCompleted;
        
        /// <remarks/>
        public event GetUptimeCompletedEventHandler GetUptimeCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateConfigurationCompletedEventHandler CreateOrUpdateConfigurationCompleted;
        
        /// <remarks/>
        public event GetConfigurationByIdCompletedEventHandler GetConfigurationByIdCompleted;
        
        /// <remarks/>
        public event GetConfigurationsCountCompletedEventHandler GetConfigurationsCountCompleted;
        
        /// <remarks/>
        public event GetConfigurationsCompletedEventHandler GetConfigurationsCompleted;
        
        /// <remarks/>
        public event DeleteConfigurationCompletedEventHandler DeleteConfigurationCompleted;
        
        /// <remarks/>
        public event GetConfigurationByNameCompletedEventHandler GetConfigurationByNameCompleted;
        
        /// <remarks/>
        public event GetConfigurationValueCompletedEventHandler GetConfigurationValueCompleted;
        
        /// <remarks/>
        public event GetConfigurationValueWithDefaultCompletedEventHandler GetConfigurationValueWithDefaultCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateScheduleCompletedEventHandler CreateOrUpdateScheduleCompleted;
        
        /// <remarks/>
        public event GetScheduleByIdCompletedEventHandler GetScheduleByIdCompleted;
        
        /// <remarks/>
        public event GetSchedulesCompletedEventHandler GetSchedulesCompleted;
        
        /// <remarks/>
        public event GetSchedulesCountCompletedEventHandler GetSchedulesCountCompleted;
        
        /// <remarks/>
        public event DeleteScheduleCompletedEventHandler DeleteScheduleCompleted;
        
        /// <remarks/>
        public event GetScheduleStringCompletedEventHandler GetScheduleStringCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateAttributeCompletedEventHandler CreateOrUpdateAttributeCompleted;
        
        /// <remarks/>
        public event GetAttributeByIdCompletedEventHandler GetAttributeByIdCompleted;
        
        /// <remarks/>
        public event GetAttributeIfModifiedSinceCompletedEventHandler GetAttributeIfModifiedSinceCompleted;
        
        /// <remarks/>
        public event GetAttributesCountCompletedEventHandler GetAttributesCountCompleted;
        
        /// <remarks/>
        public event GetAttributesCompletedEventHandler GetAttributesCompleted;
        
        /// <remarks/>
        public event DeleteAttributeCompletedEventHandler DeleteAttributeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetVersion", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetTitle", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTitle() {
            object[] results = this.Invoke("GetTitle", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTitleAsync() {
            this.GetTitleAsync(null);
        }
        
        /// <remarks/>
        public void GetTitleAsync(object userState) {
            if ((this.GetTitleOperationCompleted == null)) {
                this.GetTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTitleOperationCompleted);
            }
            this.InvokeAsync("GetTitle", new object[0], this.GetTitleOperationCompleted, userState);
        }
        
        private void OnGetTitleOperationCompleted(object arg) {
            if ((this.GetTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTitleCompleted(this, new GetTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetCopyright", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCopyright() {
            object[] results = this.Invoke("GetCopyright", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCopyrightAsync() {
            this.GetCopyrightAsync(null);
        }
        
        /// <remarks/>
        public void GetCopyrightAsync(object userState) {
            if ((this.GetCopyrightOperationCompleted == null)) {
                this.GetCopyrightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCopyrightOperationCompleted);
            }
            this.InvokeAsync("GetCopyright", new object[0], this.GetCopyrightOperationCompleted, userState);
        }
        
        private void OnGetCopyrightOperationCompleted(object arg) {
            if ((this.GetCopyrightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCopyrightCompleted(this, new GetCopyrightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetDescription", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDescription() {
            object[] results = this.Invoke("GetDescription", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDescriptionAsync() {
            this.GetDescriptionAsync(null);
        }
        
        /// <remarks/>
        public void GetDescriptionAsync(object userState) {
            if ((this.GetDescriptionOperationCompleted == null)) {
                this.GetDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetDescription", new object[0], this.GetDescriptionOperationCompleted, userState);
        }
        
        private void OnGetDescriptionOperationCompleted(object arg) {
            if ((this.GetDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDescriptionCompleted(this, new GetDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetUptime", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetUptime() {
            object[] results = this.Invoke("GetUptime", new object[0]);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetUptimeAsync() {
            this.GetUptimeAsync(null);
        }
        
        /// <remarks/>
        public void GetUptimeAsync(object userState) {
            if ((this.GetUptimeOperationCompleted == null)) {
                this.GetUptimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUptimeOperationCompleted);
            }
            this.InvokeAsync("GetUptime", new object[0], this.GetUptimeOperationCompleted, userState);
        }
        
        private void OnGetUptimeOperationCompleted(object arg) {
            if ((this.GetUptimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUptimeCompleted(this, new GetUptimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateConfiguration", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateConfiguration(string ticket, TransitConfiguration configuration) {
            object[] results = this.Invoke("CreateOrUpdateConfiguration", new object[] {
                        ticket,
                        configuration});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateConfigurationAsync(string ticket, TransitConfiguration configuration) {
            this.CreateOrUpdateConfigurationAsync(ticket, configuration, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateConfigurationAsync(string ticket, TransitConfiguration configuration, object userState) {
            if ((this.CreateOrUpdateConfigurationOperationCompleted == null)) {
                this.CreateOrUpdateConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateConfigurationOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateConfiguration", new object[] {
                        ticket,
                        configuration}, this.CreateOrUpdateConfigurationOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateConfigurationOperationCompleted(object arg) {
            if ((this.CreateOrUpdateConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateConfigurationCompleted(this, new CreateOrUpdateConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetConfigurationById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitConfiguration GetConfigurationById(string ticket, int id) {
            object[] results = this.Invoke("GetConfigurationById", new object[] {
                        ticket,
                        id});
            return ((TransitConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationByIdAsync(string ticket, int id) {
            this.GetConfigurationByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetConfigurationByIdAsync(string ticket, int id, object userState) {
            if ((this.GetConfigurationByIdOperationCompleted == null)) {
                this.GetConfigurationByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationByIdOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationById", new object[] {
                        ticket,
                        id}, this.GetConfigurationByIdOperationCompleted, userState);
        }
        
        private void OnGetConfigurationByIdOperationCompleted(object arg) {
            if ((this.GetConfigurationByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationByIdCompleted(this, new GetConfigurationByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetConfigurationsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetConfigurationsCount(string ticket) {
            object[] results = this.Invoke("GetConfigurationsCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationsCountAsync(string ticket) {
            this.GetConfigurationsCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetConfigurationsCountAsync(string ticket, object userState) {
            if ((this.GetConfigurationsCountOperationCompleted == null)) {
                this.GetConfigurationsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationsCountOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationsCount", new object[] {
                        ticket}, this.GetConfigurationsCountOperationCompleted, userState);
        }
        
        private void OnGetConfigurationsCountOperationCompleted(object arg) {
            if ((this.GetConfigurationsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationsCountCompleted(this, new GetConfigurationsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetConfigurations", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitConfiguration[] GetConfigurations(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetConfigurations", new object[] {
                        ticket,
                        options});
            return ((TransitConfiguration[])(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationsAsync(string ticket, ServiceQueryOptions options) {
            this.GetConfigurationsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetConfigurationsAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetConfigurationsOperationCompleted == null)) {
                this.GetConfigurationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationsOperationCompleted);
            }
            this.InvokeAsync("GetConfigurations", new object[] {
                        ticket,
                        options}, this.GetConfigurationsOperationCompleted, userState);
        }
        
        private void OnGetConfigurationsOperationCompleted(object arg) {
            if ((this.GetConfigurationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationsCompleted(this, new GetConfigurationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteConfiguration", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteConfiguration(string ticket, int id) {
            this.Invoke("DeleteConfiguration", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteConfigurationAsync(string ticket, int id) {
            this.DeleteConfigurationAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteConfigurationAsync(string ticket, int id, object userState) {
            if ((this.DeleteConfigurationOperationCompleted == null)) {
                this.DeleteConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteConfigurationOperationCompleted);
            }
            this.InvokeAsync("DeleteConfiguration", new object[] {
                        ticket,
                        id}, this.DeleteConfigurationOperationCompleted, userState);
        }
        
        private void OnDeleteConfigurationOperationCompleted(object arg) {
            if ((this.DeleteConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetConfigurationByName", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitConfiguration GetConfigurationByName(string ticket, string name) {
            object[] results = this.Invoke("GetConfigurationByName", new object[] {
                        ticket,
                        name});
            return ((TransitConfiguration)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationByNameAsync(string ticket, string name) {
            this.GetConfigurationByNameAsync(ticket, name, null);
        }
        
        /// <remarks/>
        public void GetConfigurationByNameAsync(string ticket, string name, object userState) {
            if ((this.GetConfigurationByNameOperationCompleted == null)) {
                this.GetConfigurationByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationByNameOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationByName", new object[] {
                        ticket,
                        name}, this.GetConfigurationByNameOperationCompleted, userState);
        }
        
        private void OnGetConfigurationByNameOperationCompleted(object arg) {
            if ((this.GetConfigurationByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationByNameCompleted(this, new GetConfigurationByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetConfigurationValue", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConfigurationValue(string ticket, string name) {
            object[] results = this.Invoke("GetConfigurationValue", new object[] {
                        ticket,
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationValueAsync(string ticket, string name) {
            this.GetConfigurationValueAsync(ticket, name, null);
        }
        
        /// <remarks/>
        public void GetConfigurationValueAsync(string ticket, string name, object userState) {
            if ((this.GetConfigurationValueOperationCompleted == null)) {
                this.GetConfigurationValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationValueOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationValue", new object[] {
                        ticket,
                        name}, this.GetConfigurationValueOperationCompleted, userState);
        }
        
        private void OnGetConfigurationValueOperationCompleted(object arg) {
            if ((this.GetConfigurationValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationValueCompleted(this, new GetConfigurationValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetConfigurationValueWithDefault", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConfigurationValueWithDefault(string ticket, string name, string defaultvalue) {
            object[] results = this.Invoke("GetConfigurationValueWithDefault", new object[] {
                        ticket,
                        name,
                        defaultvalue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationValueWithDefaultAsync(string ticket, string name, string defaultvalue) {
            this.GetConfigurationValueWithDefaultAsync(ticket, name, defaultvalue, null);
        }
        
        /// <remarks/>
        public void GetConfigurationValueWithDefaultAsync(string ticket, string name, string defaultvalue, object userState) {
            if ((this.GetConfigurationValueWithDefaultOperationCompleted == null)) {
                this.GetConfigurationValueWithDefaultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationValueWithDefaultOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationValueWithDefault", new object[] {
                        ticket,
                        name,
                        defaultvalue}, this.GetConfigurationValueWithDefaultOperationCompleted, userState);
        }
        
        private void OnGetConfigurationValueWithDefaultOperationCompleted(object arg) {
            if ((this.GetConfigurationValueWithDefaultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationValueWithDefaultCompleted(this, new GetConfigurationValueWithDefaultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateSchedule", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateSchedule(string ticket, TransitSchedule schedule) {
            object[] results = this.Invoke("CreateOrUpdateSchedule", new object[] {
                        ticket,
                        schedule});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateScheduleAsync(string ticket, TransitSchedule schedule) {
            this.CreateOrUpdateScheduleAsync(ticket, schedule, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateScheduleAsync(string ticket, TransitSchedule schedule, object userState) {
            if ((this.CreateOrUpdateScheduleOperationCompleted == null)) {
                this.CreateOrUpdateScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateScheduleOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateSchedule", new object[] {
                        ticket,
                        schedule}, this.CreateOrUpdateScheduleOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateScheduleOperationCompleted(object arg) {
            if ((this.CreateOrUpdateScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateScheduleCompleted(this, new CreateOrUpdateScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetScheduleById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitSchedule GetScheduleById(string ticket, int id) {
            object[] results = this.Invoke("GetScheduleById", new object[] {
                        ticket,
                        id});
            return ((TransitSchedule)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleByIdAsync(string ticket, int id) {
            this.GetScheduleByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetScheduleByIdAsync(string ticket, int id, object userState) {
            if ((this.GetScheduleByIdOperationCompleted == null)) {
                this.GetScheduleByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleByIdOperationCompleted);
            }
            this.InvokeAsync("GetScheduleById", new object[] {
                        ticket,
                        id}, this.GetScheduleByIdOperationCompleted, userState);
        }
        
        private void OnGetScheduleByIdOperationCompleted(object arg) {
            if ((this.GetScheduleByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleByIdCompleted(this, new GetScheduleByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetSchedules", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitSchedule[] GetSchedules(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetSchedules", new object[] {
                        ticket,
                        options});
            return ((TransitSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSchedulesAsync(string ticket, ServiceQueryOptions options) {
            this.GetSchedulesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetSchedulesAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetSchedulesOperationCompleted == null)) {
                this.GetSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchedulesOperationCompleted);
            }
            this.InvokeAsync("GetSchedules", new object[] {
                        ticket,
                        options}, this.GetSchedulesOperationCompleted, userState);
        }
        
        private void OnGetSchedulesOperationCompleted(object arg) {
            if ((this.GetSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchedulesCompleted(this, new GetSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetSchedulesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSchedulesCount(string ticket) {
            object[] results = this.Invoke("GetSchedulesCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSchedulesCountAsync(string ticket) {
            this.GetSchedulesCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetSchedulesCountAsync(string ticket, object userState) {
            if ((this.GetSchedulesCountOperationCompleted == null)) {
                this.GetSchedulesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchedulesCountOperationCompleted);
            }
            this.InvokeAsync("GetSchedulesCount", new object[] {
                        ticket}, this.GetSchedulesCountOperationCompleted, userState);
        }
        
        private void OnGetSchedulesCountOperationCompleted(object arg) {
            if ((this.GetSchedulesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchedulesCountCompleted(this, new GetSchedulesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteSchedule", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSchedule(string ticket, int id) {
            this.Invoke("DeleteSchedule", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(string ticket, int id) {
            this.DeleteScheduleAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(string ticket, int id, object userState) {
            if ((this.DeleteScheduleOperationCompleted == null)) {
                this.DeleteScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScheduleOperationCompleted);
            }
            this.InvokeAsync("DeleteSchedule", new object[] {
                        ticket,
                        id}, this.DeleteScheduleOperationCompleted, userState);
        }
        
        private void OnDeleteScheduleOperationCompleted(object arg) {
            if ((this.DeleteScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetScheduleString", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetScheduleString(string ticket, TransitSchedule schedule, int offset) {
            object[] results = this.Invoke("GetScheduleString", new object[] {
                        ticket,
                        schedule,
                        offset});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleStringAsync(string ticket, TransitSchedule schedule, int offset) {
            this.GetScheduleStringAsync(ticket, schedule, offset, null);
        }
        
        /// <remarks/>
        public void GetScheduleStringAsync(string ticket, TransitSchedule schedule, int offset, object userState) {
            if ((this.GetScheduleStringOperationCompleted == null)) {
                this.GetScheduleStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleStringOperationCompleted);
            }
            this.InvokeAsync("GetScheduleString", new object[] {
                        ticket,
                        schedule,
                        offset}, this.GetScheduleStringOperationCompleted, userState);
        }
        
        private void OnGetScheduleStringOperationCompleted(object arg) {
            if ((this.GetScheduleStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleStringCompleted(this, new GetScheduleStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateAttribute", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateAttribute(string ticket, TransitAttribute attr) {
            object[] results = this.Invoke("CreateOrUpdateAttribute", new object[] {
                        ticket,
                        attr});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateAttributeAsync(string ticket, TransitAttribute attr) {
            this.CreateOrUpdateAttributeAsync(ticket, attr, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateAttributeAsync(string ticket, TransitAttribute attr, object userState) {
            if ((this.CreateOrUpdateAttributeOperationCompleted == null)) {
                this.CreateOrUpdateAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateAttributeOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateAttribute", new object[] {
                        ticket,
                        attr}, this.CreateOrUpdateAttributeOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateAttributeOperationCompleted(object arg) {
            if ((this.CreateOrUpdateAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateAttributeCompleted(this, new CreateOrUpdateAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAttributeById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAttribute GetAttributeById(string ticket, int id) {
            object[] results = this.Invoke("GetAttributeById", new object[] {
                        ticket,
                        id});
            return ((TransitAttribute)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttributeByIdAsync(string ticket, int id) {
            this.GetAttributeByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetAttributeByIdAsync(string ticket, int id, object userState) {
            if ((this.GetAttributeByIdOperationCompleted == null)) {
                this.GetAttributeByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttributeByIdOperationCompleted);
            }
            this.InvokeAsync("GetAttributeById", new object[] {
                        ticket,
                        id}, this.GetAttributeByIdOperationCompleted, userState);
        }
        
        private void OnGetAttributeByIdOperationCompleted(object arg) {
            if ((this.GetAttributeByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttributeByIdCompleted(this, new GetAttributeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAttributeIfModifiedSince", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAttribute GetAttributeIfModifiedSince(string ticket, int id, System.DateTime ifModifiedSince) {
            object[] results = this.Invoke("GetAttributeIfModifiedSince", new object[] {
                        ticket,
                        id,
                        ifModifiedSince});
            return ((TransitAttribute)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttributeIfModifiedSinceAsync(string ticket, int id, System.DateTime ifModifiedSince) {
            this.GetAttributeIfModifiedSinceAsync(ticket, id, ifModifiedSince, null);
        }
        
        /// <remarks/>
        public void GetAttributeIfModifiedSinceAsync(string ticket, int id, System.DateTime ifModifiedSince, object userState) {
            if ((this.GetAttributeIfModifiedSinceOperationCompleted == null)) {
                this.GetAttributeIfModifiedSinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttributeIfModifiedSinceOperationCompleted);
            }
            this.InvokeAsync("GetAttributeIfModifiedSince", new object[] {
                        ticket,
                        id,
                        ifModifiedSince}, this.GetAttributeIfModifiedSinceOperationCompleted, userState);
        }
        
        private void OnGetAttributeIfModifiedSinceOperationCompleted(object arg) {
            if ((this.GetAttributeIfModifiedSinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttributeIfModifiedSinceCompleted(this, new GetAttributeIfModifiedSinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAttributesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAttributesCount(string ticket) {
            object[] results = this.Invoke("GetAttributesCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttributesCountAsync(string ticket) {
            this.GetAttributesCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetAttributesCountAsync(string ticket, object userState) {
            if ((this.GetAttributesCountOperationCompleted == null)) {
                this.GetAttributesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttributesCountOperationCompleted);
            }
            this.InvokeAsync("GetAttributesCount", new object[] {
                        ticket}, this.GetAttributesCountOperationCompleted, userState);
        }
        
        private void OnGetAttributesCountOperationCompleted(object arg) {
            if ((this.GetAttributesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttributesCountCompleted(this, new GetAttributesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAttributes", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAttribute[] GetAttributes(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAttributes", new object[] {
                        ticket,
                        options});
            return ((TransitAttribute[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAttributesAsync(string ticket, ServiceQueryOptions options) {
            this.GetAttributesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetAttributesAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetAttributesOperationCompleted == null)) {
                this.GetAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttributesOperationCompleted);
            }
            this.InvokeAsync("GetAttributes", new object[] {
                        ticket,
                        options}, this.GetAttributesOperationCompleted, userState);
        }
        
        private void OnGetAttributesOperationCompleted(object arg) {
            if ((this.GetAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttributesCompleted(this, new GetAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteAttribute", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAttribute(string ticket, int id) {
            this.Invoke("DeleteAttribute", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteAttributeAsync(string ticket, int id) {
            this.DeleteAttributeAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteAttributeAsync(string ticket, int id, object userState) {
            if ((this.DeleteAttributeOperationCompleted == null)) {
                this.DeleteAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAttributeOperationCompleted);
            }
            this.InvokeAsync("DeleteAttribute", new object[] {
                        ticket,
                        id}, this.DeleteAttributeOperationCompleted, userState);
        }
        
        private void OnDeleteAttributeOperationCompleted(object arg) {
            if ((this.DeleteAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAttributeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitConfiguration : TransitServiceOfConfiguration {
        
        private string nameField;
        
        private string valueField;
        
        private bool passwordField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public bool Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitConfiguration))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfConfiguration {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAttribute))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfAttribute {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAttribute : TransitServiceOfAttribute {
        
        private string nameField;
        
        private string descriptionField;
        
        private string defaultUrlField;
        
        private string defaultValueField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultUrl {
            get {
                return this.defaultUrlField;
            }
            set {
                this.defaultUrlField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitSchedule))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfSchedule {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitSchedule : TransitServiceOfSchedule {
        
        private int accountIdField;
        
        private bool allDayField;
        
        private int dailyEveryNDaysField;
        
        private System.DateTime endDateTimeField;
        
        private bool endlessField;
        
        private int endOccurrencesField;
        
        private int monthlyDayField;
        
        private int monthlyExDayIndexField;
        
        private int monthlyExDayNameField;
        
        private int monthlyExMonthField;
        
        private int monthlyMonthField;
        
        private RecurrencePattern recurrencePatternField;
        
        private System.DateTime startDateTimeField;
        
        private short weeklyDaysOfWeekField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private int weeklyEveryNWeeksField;
        
        private int yearlyDayField;
        
        private int yearlyExDayIndexField;
        
        private int yearlyExDayNameField;
        
        private int yearlyExMonthField;
        
        private int yearlyMonthField;
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public bool AllDay {
            get {
                return this.allDayField;
            }
            set {
                this.allDayField = value;
            }
        }
        
        /// <remarks/>
        public int DailyEveryNDays {
            get {
                return this.dailyEveryNDaysField;
            }
            set {
                this.dailyEveryNDaysField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDateTime {
            get {
                return this.endDateTimeField;
            }
            set {
                this.endDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool Endless {
            get {
                return this.endlessField;
            }
            set {
                this.endlessField = value;
            }
        }
        
        /// <remarks/>
        public int EndOccurrences {
            get {
                return this.endOccurrencesField;
            }
            set {
                this.endOccurrencesField = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyDay {
            get {
                return this.monthlyDayField;
            }
            set {
                this.monthlyDayField = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyExDayIndex {
            get {
                return this.monthlyExDayIndexField;
            }
            set {
                this.monthlyExDayIndexField = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyExDayName {
            get {
                return this.monthlyExDayNameField;
            }
            set {
                this.monthlyExDayNameField = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyExMonth {
            get {
                return this.monthlyExMonthField;
            }
            set {
                this.monthlyExMonthField = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyMonth {
            get {
                return this.monthlyMonthField;
            }
            set {
                this.monthlyMonthField = value;
            }
        }
        
        /// <remarks/>
        public RecurrencePattern RecurrencePattern {
            get {
                return this.recurrencePatternField;
            }
            set {
                this.recurrencePatternField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public short WeeklyDaysOfWeek {
            get {
                return this.weeklyDaysOfWeekField;
            }
            set {
                this.weeklyDaysOfWeekField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public int WeeklyEveryNWeeks {
            get {
                return this.weeklyEveryNWeeksField;
            }
            set {
                this.weeklyEveryNWeeksField = value;
            }
        }
        
        /// <remarks/>
        public int YearlyDay {
            get {
                return this.yearlyDayField;
            }
            set {
                this.yearlyDayField = value;
            }
        }
        
        /// <remarks/>
        public int YearlyExDayIndex {
            get {
                return this.yearlyExDayIndexField;
            }
            set {
                this.yearlyExDayIndexField = value;
            }
        }
        
        /// <remarks/>
        public int YearlyExDayName {
            get {
                return this.yearlyExDayNameField;
            }
            set {
                this.yearlyExDayNameField = value;
            }
        }
        
        /// <remarks/>
        public int YearlyExMonth {
            get {
                return this.yearlyExMonthField;
            }
            set {
                this.yearlyExMonthField = value;
            }
        }
        
        /// <remarks/>
        public int YearlyMonth {
            get {
                return this.yearlyMonthField;
            }
            set {
                this.yearlyMonthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public enum RecurrencePattern {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Daily_EveryNDays,
        
        /// <remarks/>
        Daily_EveryWeekday,
        
        /// <remarks/>
        Weekly,
        
        /// <remarks/>
        Monthly_DayNOfEveryNMonths,
        
        /// <remarks/>
        Monthly_NthWeekDayOfEveryNMonth,
        
        /// <remarks/>
        Yearly_DayNOfMonth,
        
        /// <remarks/>
        Yearly_NthWeekDayOfMonth,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class ServiceQueryOptions {
        
        private int pageSizeField;
        
        private int pageNumberField;
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int PageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetTitleCompletedEventHandler(object sender, GetTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetCopyrightCompletedEventHandler(object sender, GetCopyrightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCopyrightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCopyrightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetDescriptionCompletedEventHandler(object sender, GetDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetUptimeCompletedEventHandler(object sender, GetUptimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUptimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUptimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateConfigurationCompletedEventHandler(object sender, CreateOrUpdateConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetConfigurationByIdCompletedEventHandler(object sender, GetConfigurationByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitConfiguration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitConfiguration)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetConfigurationsCountCompletedEventHandler(object sender, GetConfigurationsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetConfigurationsCompletedEventHandler(object sender, GetConfigurationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitConfiguration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitConfiguration[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetConfigurationByNameCompletedEventHandler(object sender, GetConfigurationByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitConfiguration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitConfiguration)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetConfigurationValueCompletedEventHandler(object sender, GetConfigurationValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetConfigurationValueWithDefaultCompletedEventHandler(object sender, GetConfigurationValueWithDefaultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationValueWithDefaultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationValueWithDefaultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateScheduleCompletedEventHandler(object sender, CreateOrUpdateScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetScheduleByIdCompletedEventHandler(object sender, GetScheduleByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitSchedule Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitSchedule)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetSchedulesCompletedEventHandler(object sender, GetSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetSchedulesCountCompletedEventHandler(object sender, GetSchedulesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchedulesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchedulesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteScheduleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetScheduleStringCompletedEventHandler(object sender, GetScheduleStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateAttributeCompletedEventHandler(object sender, CreateOrUpdateAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAttributeByIdCompletedEventHandler(object sender, GetAttributeByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttributeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttributeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAttribute Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAttribute)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAttributeIfModifiedSinceCompletedEventHandler(object sender, GetAttributeIfModifiedSinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttributeIfModifiedSinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttributeIfModifiedSinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAttribute Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAttribute)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAttributesCountCompletedEventHandler(object sender, GetAttributesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttributesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttributesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAttributesCompletedEventHandler(object sender, GetAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAttribute[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAttribute[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteAttributeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591