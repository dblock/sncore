//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.312.
// 
#pragma warning disable 1591

namespace SnCore.Web.Soap.Tests.WebStatsService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebStatsServiceSoap", Namespace="http://www.vestris.com/sncore/ns/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfAccount))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfRefererAccount))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfRefererHostDup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfCounter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfRefererQuery))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfRefererHost))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TimestampCounterOfInt64))]
    public partial class WebStatsService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TrackSingleRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback TrackMultipleRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefererHostsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefererHostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateRefererHostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefererHostByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRefererHostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefererQueriesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefererQueriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateRefererQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefererQueryByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRefererQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCounterByUriOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountersCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateCounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCounterByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateRefererHostDupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefererHostDupByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefererHostDupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefererHostDupsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRefererHostDupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateRefererAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefererAccountByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefererAccountsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefererAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRefererAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindRefererAccountsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebStatsService() {
            this.Url = global::SnCore.Web.Soap.Tests.Properties.Settings.Default.SnCore_Web_Soap_Tests_WebStatsService_WebStatsService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TrackSingleRequestCompletedEventHandler TrackSingleRequestCompleted;
        
        /// <remarks/>
        public event TrackMultipleRequestsCompletedEventHandler TrackMultipleRequestsCompleted;
        
        /// <remarks/>
        public event GetSummaryCompletedEventHandler GetSummaryCompleted;
        
        /// <remarks/>
        public event GetRefererHostsCountCompletedEventHandler GetRefererHostsCountCompleted;
        
        /// <remarks/>
        public event GetRefererHostsCompletedEventHandler GetRefererHostsCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateRefererHostCompletedEventHandler CreateOrUpdateRefererHostCompleted;
        
        /// <remarks/>
        public event GetRefererHostByIdCompletedEventHandler GetRefererHostByIdCompleted;
        
        /// <remarks/>
        public event DeleteRefererHostCompletedEventHandler DeleteRefererHostCompleted;
        
        /// <remarks/>
        public event GetRefererQueriesCountCompletedEventHandler GetRefererQueriesCountCompleted;
        
        /// <remarks/>
        public event GetRefererQueriesCompletedEventHandler GetRefererQueriesCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateRefererQueryCompletedEventHandler CreateOrUpdateRefererQueryCompleted;
        
        /// <remarks/>
        public event GetRefererQueryByIdCompletedEventHandler GetRefererQueryByIdCompleted;
        
        /// <remarks/>
        public event DeleteRefererQueryCompletedEventHandler DeleteRefererQueryCompleted;
        
        /// <remarks/>
        public event GetCounterByUriCompletedEventHandler GetCounterByUriCompleted;
        
        /// <remarks/>
        public event GetCountersCountCompletedEventHandler GetCountersCountCompleted;
        
        /// <remarks/>
        public event GetCountersCompletedEventHandler GetCountersCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateCounterCompletedEventHandler CreateOrUpdateCounterCompleted;
        
        /// <remarks/>
        public event GetCounterByIdCompletedEventHandler GetCounterByIdCompleted;
        
        /// <remarks/>
        public event DeleteCounterCompletedEventHandler DeleteCounterCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateRefererHostDupCompletedEventHandler CreateOrUpdateRefererHostDupCompleted;
        
        /// <remarks/>
        public event GetRefererHostDupByIdCompletedEventHandler GetRefererHostDupByIdCompleted;
        
        /// <remarks/>
        public event GetRefererHostDupsCompletedEventHandler GetRefererHostDupsCompleted;
        
        /// <remarks/>
        public event GetRefererHostDupsCountCompletedEventHandler GetRefererHostDupsCountCompleted;
        
        /// <remarks/>
        public event DeleteRefererHostDupCompletedEventHandler DeleteRefererHostDupCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateRefererAccountCompletedEventHandler CreateOrUpdateRefererAccountCompleted;
        
        /// <remarks/>
        public event GetRefererAccountByIdCompletedEventHandler GetRefererAccountByIdCompleted;
        
        /// <remarks/>
        public event GetRefererAccountsCountCompletedEventHandler GetRefererAccountsCountCompleted;
        
        /// <remarks/>
        public event GetRefererAccountsCompletedEventHandler GetRefererAccountsCompleted;
        
        /// <remarks/>
        public event DeleteRefererAccountCompletedEventHandler DeleteRefererAccountCompleted;
        
        /// <remarks/>
        public event FindRefererAccountsCompletedEventHandler FindRefererAccountsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/TrackSingleRequest", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TrackSingleRequest(TransitStatsRequest request) {
            this.Invoke("TrackSingleRequest", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void TrackSingleRequestAsync(TransitStatsRequest request) {
            this.TrackSingleRequestAsync(request, null);
        }
        
        /// <remarks/>
        public void TrackSingleRequestAsync(TransitStatsRequest request, object userState) {
            if ((this.TrackSingleRequestOperationCompleted == null)) {
                this.TrackSingleRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTrackSingleRequestOperationCompleted);
            }
            this.InvokeAsync("TrackSingleRequest", new object[] {
                        request}, this.TrackSingleRequestOperationCompleted, userState);
        }
        
        private void OnTrackSingleRequestOperationCompleted(object arg) {
            if ((this.TrackSingleRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TrackSingleRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/TrackMultipleRequests", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TrackMultipleRequests(TransitStatsRequest[] requests) {
            this.Invoke("TrackMultipleRequests", new object[] {
                        requests});
        }
        
        /// <remarks/>
        public void TrackMultipleRequestsAsync(TransitStatsRequest[] requests) {
            this.TrackMultipleRequestsAsync(requests, null);
        }
        
        /// <remarks/>
        public void TrackMultipleRequestsAsync(TransitStatsRequest[] requests, object userState) {
            if ((this.TrackMultipleRequestsOperationCompleted == null)) {
                this.TrackMultipleRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTrackMultipleRequestsOperationCompleted);
            }
            this.InvokeAsync("TrackMultipleRequests", new object[] {
                        requests}, this.TrackMultipleRequestsOperationCompleted, userState);
        }
        
        private void OnTrackMultipleRequestsOperationCompleted(object arg) {
            if ((this.TrackMultipleRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TrackMultipleRequestsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetSummary", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitStatsSummary GetSummary(string ticket) {
            object[] results = this.Invoke("GetSummary", new object[] {
                        ticket});
            return ((TransitStatsSummary)(results[0]));
        }
        
        /// <remarks/>
        public void GetSummaryAsync(string ticket) {
            this.GetSummaryAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetSummaryAsync(string ticket, object userState) {
            if ((this.GetSummaryOperationCompleted == null)) {
                this.GetSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSummaryOperationCompleted);
            }
            this.InvokeAsync("GetSummary", new object[] {
                        ticket}, this.GetSummaryOperationCompleted, userState);
        }
        
        private void OnGetSummaryOperationCompleted(object arg) {
            if ((this.GetSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSummaryCompleted(this, new GetSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetRefererHostsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRefererHostsCount(string ticket, RefererHostQueryOptions qopt) {
            object[] results = this.Invoke("GetRefererHostsCount", new object[] {
                        ticket,
                        qopt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefererHostsCountAsync(string ticket, RefererHostQueryOptions qopt) {
            this.GetRefererHostsCountAsync(ticket, qopt, null);
        }
        
        /// <remarks/>
        public void GetRefererHostsCountAsync(string ticket, RefererHostQueryOptions qopt, object userState) {
            if ((this.GetRefererHostsCountOperationCompleted == null)) {
                this.GetRefererHostsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefererHostsCountOperationCompleted);
            }
            this.InvokeAsync("GetRefererHostsCount", new object[] {
                        ticket,
                        qopt}, this.GetRefererHostsCountOperationCompleted, userState);
        }
        
        private void OnGetRefererHostsCountOperationCompleted(object arg) {
            if ((this.GetRefererHostsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefererHostsCountCompleted(this, new GetRefererHostsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetRefererHosts", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitRefererHost[] GetRefererHosts(string ticket, RefererHostQueryOptions qopt, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetRefererHosts", new object[] {
                        ticket,
                        qopt,
                        options});
            return ((TransitRefererHost[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRefererHostsAsync(string ticket, RefererHostQueryOptions qopt, ServiceQueryOptions options) {
            this.GetRefererHostsAsync(ticket, qopt, options, null);
        }
        
        /// <remarks/>
        public void GetRefererHostsAsync(string ticket, RefererHostQueryOptions qopt, ServiceQueryOptions options, object userState) {
            if ((this.GetRefererHostsOperationCompleted == null)) {
                this.GetRefererHostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefererHostsOperationCompleted);
            }
            this.InvokeAsync("GetRefererHosts", new object[] {
                        ticket,
                        qopt,
                        options}, this.GetRefererHostsOperationCompleted, userState);
        }
        
        private void OnGetRefererHostsOperationCompleted(object arg) {
            if ((this.GetRefererHostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefererHostsCompleted(this, new GetRefererHostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateRefererHost", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateRefererHost(string ticket, TransitRefererHost refererhost) {
            object[] results = this.Invoke("CreateOrUpdateRefererHost", new object[] {
                        ticket,
                        refererhost});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateRefererHostAsync(string ticket, TransitRefererHost refererhost) {
            this.CreateOrUpdateRefererHostAsync(ticket, refererhost, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateRefererHostAsync(string ticket, TransitRefererHost refererhost, object userState) {
            if ((this.CreateOrUpdateRefererHostOperationCompleted == null)) {
                this.CreateOrUpdateRefererHostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateRefererHostOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateRefererHost", new object[] {
                        ticket,
                        refererhost}, this.CreateOrUpdateRefererHostOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateRefererHostOperationCompleted(object arg) {
            if ((this.CreateOrUpdateRefererHostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateRefererHostCompleted(this, new CreateOrUpdateRefererHostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetRefererHostById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitRefererHost GetRefererHostById(string ticket, int id) {
            object[] results = this.Invoke("GetRefererHostById", new object[] {
                        ticket,
                        id});
            return ((TransitRefererHost)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefererHostByIdAsync(string ticket, int id) {
            this.GetRefererHostByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetRefererHostByIdAsync(string ticket, int id, object userState) {
            if ((this.GetRefererHostByIdOperationCompleted == null)) {
                this.GetRefererHostByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefererHostByIdOperationCompleted);
            }
            this.InvokeAsync("GetRefererHostById", new object[] {
                        ticket,
                        id}, this.GetRefererHostByIdOperationCompleted, userState);
        }
        
        private void OnGetRefererHostByIdOperationCompleted(object arg) {
            if ((this.GetRefererHostByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefererHostByIdCompleted(this, new GetRefererHostByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteRefererHost", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRefererHost(string ticket, int id) {
            this.Invoke("DeleteRefererHost", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteRefererHostAsync(string ticket, int id) {
            this.DeleteRefererHostAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteRefererHostAsync(string ticket, int id, object userState) {
            if ((this.DeleteRefererHostOperationCompleted == null)) {
                this.DeleteRefererHostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRefererHostOperationCompleted);
            }
            this.InvokeAsync("DeleteRefererHost", new object[] {
                        ticket,
                        id}, this.DeleteRefererHostOperationCompleted, userState);
        }
        
        private void OnDeleteRefererHostOperationCompleted(object arg) {
            if ((this.DeleteRefererHostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRefererHostCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetRefererQueriesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRefererQueriesCount(string ticket) {
            object[] results = this.Invoke("GetRefererQueriesCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefererQueriesCountAsync(string ticket) {
            this.GetRefererQueriesCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetRefererQueriesCountAsync(string ticket, object userState) {
            if ((this.GetRefererQueriesCountOperationCompleted == null)) {
                this.GetRefererQueriesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefererQueriesCountOperationCompleted);
            }
            this.InvokeAsync("GetRefererQueriesCount", new object[] {
                        ticket}, this.GetRefererQueriesCountOperationCompleted, userState);
        }
        
        private void OnGetRefererQueriesCountOperationCompleted(object arg) {
            if ((this.GetRefererQueriesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefererQueriesCountCompleted(this, new GetRefererQueriesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetRefererQueries", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitRefererQuery[] GetRefererQueries(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetRefererQueries", new object[] {
                        ticket,
                        options});
            return ((TransitRefererQuery[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRefererQueriesAsync(string ticket, ServiceQueryOptions options) {
            this.GetRefererQueriesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetRefererQueriesAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetRefererQueriesOperationCompleted == null)) {
                this.GetRefererQueriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefererQueriesOperationCompleted);
            }
            this.InvokeAsync("GetRefererQueries", new object[] {
                        ticket,
                        options}, this.GetRefererQueriesOperationCompleted, userState);
        }
        
        private void OnGetRefererQueriesOperationCompleted(object arg) {
            if ((this.GetRefererQueriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefererQueriesCompleted(this, new GetRefererQueriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateRefererQuery", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateRefererQuery(string ticket, TransitRefererQuery refererquery) {
            object[] results = this.Invoke("CreateOrUpdateRefererQuery", new object[] {
                        ticket,
                        refererquery});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateRefererQueryAsync(string ticket, TransitRefererQuery refererquery) {
            this.CreateOrUpdateRefererQueryAsync(ticket, refererquery, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateRefererQueryAsync(string ticket, TransitRefererQuery refererquery, object userState) {
            if ((this.CreateOrUpdateRefererQueryOperationCompleted == null)) {
                this.CreateOrUpdateRefererQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateRefererQueryOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateRefererQuery", new object[] {
                        ticket,
                        refererquery}, this.CreateOrUpdateRefererQueryOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateRefererQueryOperationCompleted(object arg) {
            if ((this.CreateOrUpdateRefererQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateRefererQueryCompleted(this, new CreateOrUpdateRefererQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetRefererQueryById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitRefererQuery GetRefererQueryById(string ticket, int id) {
            object[] results = this.Invoke("GetRefererQueryById", new object[] {
                        ticket,
                        id});
            return ((TransitRefererQuery)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefererQueryByIdAsync(string ticket, int id) {
            this.GetRefererQueryByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetRefererQueryByIdAsync(string ticket, int id, object userState) {
            if ((this.GetRefererQueryByIdOperationCompleted == null)) {
                this.GetRefererQueryByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefererQueryByIdOperationCompleted);
            }
            this.InvokeAsync("GetRefererQueryById", new object[] {
                        ticket,
                        id}, this.GetRefererQueryByIdOperationCompleted, userState);
        }
        
        private void OnGetRefererQueryByIdOperationCompleted(object arg) {
            if ((this.GetRefererQueryByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefererQueryByIdCompleted(this, new GetRefererQueryByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteRefererQuery", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRefererQuery(string ticket, int id) {
            this.Invoke("DeleteRefererQuery", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteRefererQueryAsync(string ticket, int id) {
            this.DeleteRefererQueryAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteRefererQueryAsync(string ticket, int id, object userState) {
            if ((this.DeleteRefererQueryOperationCompleted == null)) {
                this.DeleteRefererQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRefererQueryOperationCompleted);
            }
            this.InvokeAsync("DeleteRefererQuery", new object[] {
                        ticket,
                        id}, this.DeleteRefererQueryOperationCompleted, userState);
        }
        
        private void OnDeleteRefererQueryOperationCompleted(object arg) {
            if ((this.DeleteRefererQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRefererQueryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetCounterByUri", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitCounter GetCounterByUri(string ticket, string uri) {
            object[] results = this.Invoke("GetCounterByUri", new object[] {
                        ticket,
                        uri});
            return ((TransitCounter)(results[0]));
        }
        
        /// <remarks/>
        public void GetCounterByUriAsync(string ticket, string uri) {
            this.GetCounterByUriAsync(ticket, uri, null);
        }
        
        /// <remarks/>
        public void GetCounterByUriAsync(string ticket, string uri, object userState) {
            if ((this.GetCounterByUriOperationCompleted == null)) {
                this.GetCounterByUriOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCounterByUriOperationCompleted);
            }
            this.InvokeAsync("GetCounterByUri", new object[] {
                        ticket,
                        uri}, this.GetCounterByUriOperationCompleted, userState);
        }
        
        private void OnGetCounterByUriOperationCompleted(object arg) {
            if ((this.GetCounterByUriCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCounterByUriCompleted(this, new GetCounterByUriCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetCountersCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCountersCount(string ticket) {
            object[] results = this.Invoke("GetCountersCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountersCountAsync(string ticket) {
            this.GetCountersCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetCountersCountAsync(string ticket, object userState) {
            if ((this.GetCountersCountOperationCompleted == null)) {
                this.GetCountersCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountersCountOperationCompleted);
            }
            this.InvokeAsync("GetCountersCount", new object[] {
                        ticket}, this.GetCountersCountOperationCompleted, userState);
        }
        
        private void OnGetCountersCountOperationCompleted(object arg) {
            if ((this.GetCountersCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountersCountCompleted(this, new GetCountersCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetCounters", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitCounter[] GetCounters(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetCounters", new object[] {
                        ticket,
                        options});
            return ((TransitCounter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCountersAsync(string ticket, ServiceQueryOptions options) {
            this.GetCountersAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetCountersAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetCountersOperationCompleted == null)) {
                this.GetCountersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountersOperationCompleted);
            }
            this.InvokeAsync("GetCounters", new object[] {
                        ticket,
                        options}, this.GetCountersOperationCompleted, userState);
        }
        
        private void OnGetCountersOperationCompleted(object arg) {
            if ((this.GetCountersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountersCompleted(this, new GetCountersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateCounter", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateCounter(string ticket, TransitCounter counter) {
            object[] results = this.Invoke("CreateOrUpdateCounter", new object[] {
                        ticket,
                        counter});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateCounterAsync(string ticket, TransitCounter counter) {
            this.CreateOrUpdateCounterAsync(ticket, counter, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateCounterAsync(string ticket, TransitCounter counter, object userState) {
            if ((this.CreateOrUpdateCounterOperationCompleted == null)) {
                this.CreateOrUpdateCounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateCounterOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateCounter", new object[] {
                        ticket,
                        counter}, this.CreateOrUpdateCounterOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateCounterOperationCompleted(object arg) {
            if ((this.CreateOrUpdateCounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateCounterCompleted(this, new CreateOrUpdateCounterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetCounterById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitCounter GetCounterById(string ticket, int id) {
            object[] results = this.Invoke("GetCounterById", new object[] {
                        ticket,
                        id});
            return ((TransitCounter)(results[0]));
        }
        
        /// <remarks/>
        public void GetCounterByIdAsync(string ticket, int id) {
            this.GetCounterByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetCounterByIdAsync(string ticket, int id, object userState) {
            if ((this.GetCounterByIdOperationCompleted == null)) {
                this.GetCounterByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCounterByIdOperationCompleted);
            }
            this.InvokeAsync("GetCounterById", new object[] {
                        ticket,
                        id}, this.GetCounterByIdOperationCompleted, userState);
        }
        
        private void OnGetCounterByIdOperationCompleted(object arg) {
            if ((this.GetCounterByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCounterByIdCompleted(this, new GetCounterByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteCounter", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCounter(string ticket, int id) {
            this.Invoke("DeleteCounter", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteCounterAsync(string ticket, int id) {
            this.DeleteCounterAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteCounterAsync(string ticket, int id, object userState) {
            if ((this.DeleteCounterOperationCompleted == null)) {
                this.DeleteCounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCounterOperationCompleted);
            }
            this.InvokeAsync("DeleteCounter", new object[] {
                        ticket,
                        id}, this.DeleteCounterOperationCompleted, userState);
        }
        
        private void OnDeleteCounterOperationCompleted(object arg) {
            if ((this.DeleteCounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCounterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateRefererHostDup", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateRefererHostDup(string ticket, TransitRefererHostDup refererhostdup) {
            object[] results = this.Invoke("CreateOrUpdateRefererHostDup", new object[] {
                        ticket,
                        refererhostdup});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateRefererHostDupAsync(string ticket, TransitRefererHostDup refererhostdup) {
            this.CreateOrUpdateRefererHostDupAsync(ticket, refererhostdup, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateRefererHostDupAsync(string ticket, TransitRefererHostDup refererhostdup, object userState) {
            if ((this.CreateOrUpdateRefererHostDupOperationCompleted == null)) {
                this.CreateOrUpdateRefererHostDupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateRefererHostDupOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateRefererHostDup", new object[] {
                        ticket,
                        refererhostdup}, this.CreateOrUpdateRefererHostDupOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateRefererHostDupOperationCompleted(object arg) {
            if ((this.CreateOrUpdateRefererHostDupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateRefererHostDupCompleted(this, new CreateOrUpdateRefererHostDupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetRefererHostDupById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitRefererHostDup GetRefererHostDupById(string ticket, int id) {
            object[] results = this.Invoke("GetRefererHostDupById", new object[] {
                        ticket,
                        id});
            return ((TransitRefererHostDup)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefererHostDupByIdAsync(string ticket, int id) {
            this.GetRefererHostDupByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetRefererHostDupByIdAsync(string ticket, int id, object userState) {
            if ((this.GetRefererHostDupByIdOperationCompleted == null)) {
                this.GetRefererHostDupByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefererHostDupByIdOperationCompleted);
            }
            this.InvokeAsync("GetRefererHostDupById", new object[] {
                        ticket,
                        id}, this.GetRefererHostDupByIdOperationCompleted, userState);
        }
        
        private void OnGetRefererHostDupByIdOperationCompleted(object arg) {
            if ((this.GetRefererHostDupByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefererHostDupByIdCompleted(this, new GetRefererHostDupByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetRefererHostDups", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitRefererHostDup[] GetRefererHostDups(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetRefererHostDups", new object[] {
                        ticket,
                        options});
            return ((TransitRefererHostDup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRefererHostDupsAsync(string ticket, ServiceQueryOptions options) {
            this.GetRefererHostDupsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetRefererHostDupsAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetRefererHostDupsOperationCompleted == null)) {
                this.GetRefererHostDupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefererHostDupsOperationCompleted);
            }
            this.InvokeAsync("GetRefererHostDups", new object[] {
                        ticket,
                        options}, this.GetRefererHostDupsOperationCompleted, userState);
        }
        
        private void OnGetRefererHostDupsOperationCompleted(object arg) {
            if ((this.GetRefererHostDupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefererHostDupsCompleted(this, new GetRefererHostDupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetRefererHostDupsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRefererHostDupsCount(string ticket) {
            object[] results = this.Invoke("GetRefererHostDupsCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefererHostDupsCountAsync(string ticket) {
            this.GetRefererHostDupsCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetRefererHostDupsCountAsync(string ticket, object userState) {
            if ((this.GetRefererHostDupsCountOperationCompleted == null)) {
                this.GetRefererHostDupsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefererHostDupsCountOperationCompleted);
            }
            this.InvokeAsync("GetRefererHostDupsCount", new object[] {
                        ticket}, this.GetRefererHostDupsCountOperationCompleted, userState);
        }
        
        private void OnGetRefererHostDupsCountOperationCompleted(object arg) {
            if ((this.GetRefererHostDupsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefererHostDupsCountCompleted(this, new GetRefererHostDupsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteRefererHostDup", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRefererHostDup(string ticket, int id) {
            this.Invoke("DeleteRefererHostDup", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteRefererHostDupAsync(string ticket, int id) {
            this.DeleteRefererHostDupAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteRefererHostDupAsync(string ticket, int id, object userState) {
            if ((this.DeleteRefererHostDupOperationCompleted == null)) {
                this.DeleteRefererHostDupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRefererHostDupOperationCompleted);
            }
            this.InvokeAsync("DeleteRefererHostDup", new object[] {
                        ticket,
                        id}, this.DeleteRefererHostDupOperationCompleted, userState);
        }
        
        private void OnDeleteRefererHostDupOperationCompleted(object arg) {
            if ((this.DeleteRefererHostDupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRefererHostDupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateRefererAccount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateRefererAccount(string ticket, TransitRefererAccount refererhostaccount) {
            object[] results = this.Invoke("CreateOrUpdateRefererAccount", new object[] {
                        ticket,
                        refererhostaccount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateRefererAccountAsync(string ticket, TransitRefererAccount refererhostaccount) {
            this.CreateOrUpdateRefererAccountAsync(ticket, refererhostaccount, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateRefererAccountAsync(string ticket, TransitRefererAccount refererhostaccount, object userState) {
            if ((this.CreateOrUpdateRefererAccountOperationCompleted == null)) {
                this.CreateOrUpdateRefererAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateRefererAccountOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateRefererAccount", new object[] {
                        ticket,
                        refererhostaccount}, this.CreateOrUpdateRefererAccountOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateRefererAccountOperationCompleted(object arg) {
            if ((this.CreateOrUpdateRefererAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateRefererAccountCompleted(this, new CreateOrUpdateRefererAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetRefererAccountById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitRefererAccount GetRefererAccountById(string ticket, int id) {
            object[] results = this.Invoke("GetRefererAccountById", new object[] {
                        ticket,
                        id});
            return ((TransitRefererAccount)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefererAccountByIdAsync(string ticket, int id) {
            this.GetRefererAccountByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetRefererAccountByIdAsync(string ticket, int id, object userState) {
            if ((this.GetRefererAccountByIdOperationCompleted == null)) {
                this.GetRefererAccountByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefererAccountByIdOperationCompleted);
            }
            this.InvokeAsync("GetRefererAccountById", new object[] {
                        ticket,
                        id}, this.GetRefererAccountByIdOperationCompleted, userState);
        }
        
        private void OnGetRefererAccountByIdOperationCompleted(object arg) {
            if ((this.GetRefererAccountByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefererAccountByIdCompleted(this, new GetRefererAccountByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetRefererAccountsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRefererAccountsCount(string ticket) {
            object[] results = this.Invoke("GetRefererAccountsCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefererAccountsCountAsync(string ticket) {
            this.GetRefererAccountsCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetRefererAccountsCountAsync(string ticket, object userState) {
            if ((this.GetRefererAccountsCountOperationCompleted == null)) {
                this.GetRefererAccountsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefererAccountsCountOperationCompleted);
            }
            this.InvokeAsync("GetRefererAccountsCount", new object[] {
                        ticket}, this.GetRefererAccountsCountOperationCompleted, userState);
        }
        
        private void OnGetRefererAccountsCountOperationCompleted(object arg) {
            if ((this.GetRefererAccountsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefererAccountsCountCompleted(this, new GetRefererAccountsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetRefererAccounts", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitRefererAccount[] GetRefererAccounts(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetRefererAccounts", new object[] {
                        ticket,
                        options});
            return ((TransitRefererAccount[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRefererAccountsAsync(string ticket, ServiceQueryOptions options) {
            this.GetRefererAccountsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetRefererAccountsAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetRefererAccountsOperationCompleted == null)) {
                this.GetRefererAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefererAccountsOperationCompleted);
            }
            this.InvokeAsync("GetRefererAccounts", new object[] {
                        ticket,
                        options}, this.GetRefererAccountsOperationCompleted, userState);
        }
        
        private void OnGetRefererAccountsOperationCompleted(object arg) {
            if ((this.GetRefererAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefererAccountsCompleted(this, new GetRefererAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteRefererAccount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRefererAccount(string ticket, int id) {
            this.Invoke("DeleteRefererAccount", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteRefererAccountAsync(string ticket, int id) {
            this.DeleteRefererAccountAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteRefererAccountAsync(string ticket, int id, object userState) {
            if ((this.DeleteRefererAccountOperationCompleted == null)) {
                this.DeleteRefererAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRefererAccountOperationCompleted);
            }
            this.InvokeAsync("DeleteRefererAccount", new object[] {
                        ticket,
                        id}, this.DeleteRefererAccountOperationCompleted, userState);
        }
        
        private void OnDeleteRefererAccountOperationCompleted(object arg) {
            if ((this.DeleteRefererAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRefererAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/FindRefererAccounts", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccount[] FindRefererAccounts(string ticket, string uri, ServiceQueryOptions options) {
            object[] results = this.Invoke("FindRefererAccounts", new object[] {
                        ticket,
                        uri,
                        options});
            return ((TransitAccount[])(results[0]));
        }
        
        /// <remarks/>
        public void FindRefererAccountsAsync(string ticket, string uri, ServiceQueryOptions options) {
            this.FindRefererAccountsAsync(ticket, uri, options, null);
        }
        
        /// <remarks/>
        public void FindRefererAccountsAsync(string ticket, string uri, ServiceQueryOptions options, object userState) {
            if ((this.FindRefererAccountsOperationCompleted == null)) {
                this.FindRefererAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindRefererAccountsOperationCompleted);
            }
            this.InvokeAsync("FindRefererAccounts", new object[] {
                        ticket,
                        uri,
                        options}, this.FindRefererAccountsOperationCompleted, userState);
        }
        
        private void OnFindRefererAccountsOperationCompleted(object arg) {
            if ((this.FindRefererAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindRefererAccountsCompleted(this, new FindRefererAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitStatsRequest {
        
        private bool incrementUniqueMonthlyUserField;
        
        private bool incrementNewUserField;
        
        private bool incrementReturningUserField;
        
        private System.DateTime timestampField;
        
        private string requestUriField;
        
        private string refererUriField;
        
        private string refererQueryField;
        
        /// <remarks/>
        public bool IncrementUniqueMonthlyUser {
            get {
                return this.incrementUniqueMonthlyUserField;
            }
            set {
                this.incrementUniqueMonthlyUserField = value;
            }
        }
        
        /// <remarks/>
        public bool IncrementNewUser {
            get {
                return this.incrementNewUserField;
            }
            set {
                this.incrementNewUserField = value;
            }
        }
        
        /// <remarks/>
        public bool IncrementReturningUser {
            get {
                return this.incrementReturningUserField;
            }
            set {
                this.incrementReturningUserField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public string RequestUri {
            get {
                return this.requestUriField;
            }
            set {
                this.requestUriField = value;
            }
        }
        
        /// <remarks/>
        public string RefererUri {
            get {
                return this.refererUriField;
            }
            set {
                this.refererUriField = value;
            }
        }
        
        /// <remarks/>
        public string RefererQuery {
            get {
                return this.refererQueryField;
            }
            set {
                this.refererQueryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccount))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfAccount {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccount : TransitServiceOfAccount {
        
        private bool isPasswordExpiredField;
        
        private System.DateTime createdField;
        
        private bool isAdministratorField;
        
        private string nameField;
        
        private System.DateTime birthdayField;
        
        private System.DateTime lastLoginField;
        
        private int pictureIdField;
        
        private string stateField;
        
        private string countryField;
        
        private string cityField;
        
        private int timeZoneField;
        
        private string signatureField;
        
        private string passwordField;
        
        /// <remarks/>
        public bool IsPasswordExpired {
            get {
                return this.isPasswordExpiredField;
            }
            set {
                this.isPasswordExpiredField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAdministrator {
            get {
                return this.isAdministratorField;
            }
            set {
                this.isAdministratorField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastLogin {
            get {
                return this.lastLoginField;
            }
            set {
                this.lastLoginField = value;
            }
        }
        
        /// <remarks/>
        public int PictureId {
            get {
                return this.pictureIdField;
            }
            set {
                this.pictureIdField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public int TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public string Signature {
            get {
                return this.signatureField;
            }
            set {
                this.signatureField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitRefererAccount))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfRefererAccount {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitRefererAccount : TransitServiceOfRefererAccount {
        
        private int accountPictureIdField;
        
        private string accountNameField;
        
        private int accountIdField;
        
        private string refererHostLastRefererUriField;
        
        private string refererHostNameField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private long refererHostTotalField;
        
        /// <remarks/>
        public int AccountPictureId {
            get {
                return this.accountPictureIdField;
            }
            set {
                this.accountPictureIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string RefererHostLastRefererUri {
            get {
                return this.refererHostLastRefererUriField;
            }
            set {
                this.refererHostLastRefererUriField = value;
            }
        }
        
        /// <remarks/>
        public string RefererHostName {
            get {
                return this.refererHostNameField;
            }
            set {
                this.refererHostNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public long RefererHostTotal {
            get {
                return this.refererHostTotalField;
            }
            set {
                this.refererHostTotalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitRefererHostDup))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfRefererHostDup {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitRefererHostDup : TransitServiceOfRefererHostDup {
        
        private string hostField;
        
        private string refererHostField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        /// <remarks/>
        public string Host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        public string RefererHost {
            get {
                return this.refererHostField;
            }
            set {
                this.refererHostField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitCounter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfCounter {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitCounter : TransitServiceOfCounter {
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private long totalField;
        
        private string uriField;
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public long Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public string Uri {
            get {
                return this.uriField;
            }
            set {
                this.uriField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitRefererQuery))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfRefererQuery {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitRefererQuery : TransitServiceOfRefererQuery {
        
        private string keywordsField;
        
        private System.DateTime createdField;
        
        private System.DateTime updatedField;
        
        private int totalField;
        
        /// <remarks/>
        public string Keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
            }
        }
        
        /// <remarks/>
        public int Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitRefererHost))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfRefererHost {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitRefererHost : TransitServiceOfRefererHost {
        
        private string accountNameField;
        
        private int accountIdField;
        
        private string hostField;
        
        private string lastRefererUriField;
        
        private string lastRequestUriField;
        
        private System.DateTime createdField;
        
        private System.DateTime updatedField;
        
        private long totalField;
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string Host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks/>
        public string LastRefererUri {
            get {
                return this.lastRefererUriField;
            }
            set {
                this.lastRefererUriField = value;
            }
        }
        
        /// <remarks/>
        public string LastRequestUri {
            get {
                return this.lastRequestUriField;
            }
            set {
                this.lastRequestUriField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
            }
        }
        
        /// <remarks/>
        public long Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class ServiceQueryOptions {
        
        private int pageSizeField;
        
        private int pageNumberField;
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int PageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class RefererHostQueryOptions {
        
        private bool newOnlyField;
        
        /// <remarks/>
        public bool NewOnly {
            get {
                return this.newOnlyField;
            }
            set {
                this.newOnlyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitSummarizedCounter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TimestampCounterOfInt64 {
        
        private long totalField;
        
        private System.DateTime timestampField;
        
        /// <remarks/>
        public long Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitSummarizedCounter : TimestampCounterOfInt64 {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.312")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitStatsSummary {
        
        private TransitSummarizedCounter[] hourlyField;
        
        private TransitSummarizedCounter[] returningDailyField;
        
        private TransitSummarizedCounter[] newDailyField;
        
        private TransitSummarizedCounter[] dailyField;
        
        private TransitSummarizedCounter[] weeklyField;
        
        private TransitSummarizedCounter[] monthlyField;
        
        private TransitSummarizedCounter[] uniqueMonthlyField;
        
        private TransitSummarizedCounter[] yearlyField;
        
        private TransitSummarizedCounter[] accountDailyField;
        
        private TransitSummarizedCounter[] accountWeeklyField;
        
        private TransitSummarizedCounter[] accountMonthlyField;
        
        private TransitSummarizedCounter[] accountYearlyField;
        
        private long totalHitsField;
        
        /// <remarks/>
        public TransitSummarizedCounter[] Hourly {
            get {
                return this.hourlyField;
            }
            set {
                this.hourlyField = value;
            }
        }
        
        /// <remarks/>
        public TransitSummarizedCounter[] ReturningDaily {
            get {
                return this.returningDailyField;
            }
            set {
                this.returningDailyField = value;
            }
        }
        
        /// <remarks/>
        public TransitSummarizedCounter[] NewDaily {
            get {
                return this.newDailyField;
            }
            set {
                this.newDailyField = value;
            }
        }
        
        /// <remarks/>
        public TransitSummarizedCounter[] Daily {
            get {
                return this.dailyField;
            }
            set {
                this.dailyField = value;
            }
        }
        
        /// <remarks/>
        public TransitSummarizedCounter[] Weekly {
            get {
                return this.weeklyField;
            }
            set {
                this.weeklyField = value;
            }
        }
        
        /// <remarks/>
        public TransitSummarizedCounter[] Monthly {
            get {
                return this.monthlyField;
            }
            set {
                this.monthlyField = value;
            }
        }
        
        /// <remarks/>
        public TransitSummarizedCounter[] UniqueMonthly {
            get {
                return this.uniqueMonthlyField;
            }
            set {
                this.uniqueMonthlyField = value;
            }
        }
        
        /// <remarks/>
        public TransitSummarizedCounter[] Yearly {
            get {
                return this.yearlyField;
            }
            set {
                this.yearlyField = value;
            }
        }
        
        /// <remarks/>
        public TransitSummarizedCounter[] AccountDaily {
            get {
                return this.accountDailyField;
            }
            set {
                this.accountDailyField = value;
            }
        }
        
        /// <remarks/>
        public TransitSummarizedCounter[] AccountWeekly {
            get {
                return this.accountWeeklyField;
            }
            set {
                this.accountWeeklyField = value;
            }
        }
        
        /// <remarks/>
        public TransitSummarizedCounter[] AccountMonthly {
            get {
                return this.accountMonthlyField;
            }
            set {
                this.accountMonthlyField = value;
            }
        }
        
        /// <remarks/>
        public TransitSummarizedCounter[] AccountYearly {
            get {
                return this.accountYearlyField;
            }
            set {
                this.accountYearlyField = value;
            }
        }
        
        /// <remarks/>
        public long TotalHits {
            get {
                return this.totalHitsField;
            }
            set {
                this.totalHitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void TrackSingleRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void TrackMultipleRequestsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetSummaryCompletedEventHandler(object sender, GetSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitStatsSummary Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitStatsSummary)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetRefererHostsCountCompletedEventHandler(object sender, GetRefererHostsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefererHostsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefererHostsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetRefererHostsCompletedEventHandler(object sender, GetRefererHostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefererHostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefererHostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitRefererHost[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitRefererHost[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void CreateOrUpdateRefererHostCompletedEventHandler(object sender, CreateOrUpdateRefererHostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateRefererHostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateRefererHostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetRefererHostByIdCompletedEventHandler(object sender, GetRefererHostByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefererHostByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefererHostByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitRefererHost Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitRefererHost)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void DeleteRefererHostCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetRefererQueriesCountCompletedEventHandler(object sender, GetRefererQueriesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefererQueriesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefererQueriesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetRefererQueriesCompletedEventHandler(object sender, GetRefererQueriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefererQueriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefererQueriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitRefererQuery[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitRefererQuery[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void CreateOrUpdateRefererQueryCompletedEventHandler(object sender, CreateOrUpdateRefererQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateRefererQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateRefererQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetRefererQueryByIdCompletedEventHandler(object sender, GetRefererQueryByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefererQueryByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefererQueryByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitRefererQuery Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitRefererQuery)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void DeleteRefererQueryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetCounterByUriCompletedEventHandler(object sender, GetCounterByUriCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCounterByUriCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCounterByUriCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitCounter Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitCounter)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetCountersCountCompletedEventHandler(object sender, GetCountersCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountersCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountersCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetCountersCompletedEventHandler(object sender, GetCountersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitCounter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitCounter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void CreateOrUpdateCounterCompletedEventHandler(object sender, CreateOrUpdateCounterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateCounterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateCounterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetCounterByIdCompletedEventHandler(object sender, GetCounterByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCounterByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCounterByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitCounter Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitCounter)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void DeleteCounterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void CreateOrUpdateRefererHostDupCompletedEventHandler(object sender, CreateOrUpdateRefererHostDupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateRefererHostDupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateRefererHostDupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetRefererHostDupByIdCompletedEventHandler(object sender, GetRefererHostDupByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefererHostDupByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefererHostDupByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitRefererHostDup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitRefererHostDup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetRefererHostDupsCompletedEventHandler(object sender, GetRefererHostDupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefererHostDupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefererHostDupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitRefererHostDup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitRefererHostDup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetRefererHostDupsCountCompletedEventHandler(object sender, GetRefererHostDupsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefererHostDupsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefererHostDupsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void DeleteRefererHostDupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void CreateOrUpdateRefererAccountCompletedEventHandler(object sender, CreateOrUpdateRefererAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateRefererAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateRefererAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetRefererAccountByIdCompletedEventHandler(object sender, GetRefererAccountByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefererAccountByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefererAccountByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitRefererAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitRefererAccount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetRefererAccountsCountCompletedEventHandler(object sender, GetRefererAccountsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefererAccountsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefererAccountsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void GetRefererAccountsCompletedEventHandler(object sender, GetRefererAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefererAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefererAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitRefererAccount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitRefererAccount[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void DeleteRefererAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    public delegate void FindRefererAccountsCompletedEventHandler(object sender, FindRefererAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindRefererAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindRefererAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccount[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591