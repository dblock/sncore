//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace SnCore.Web.Soap.Tests.WebEventService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebEventServiceSoap", Namespace="http://www.vestris.com/sncore/ns/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfScheduleInstance))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfCounter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfAccountEventPicture))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfAccountEventType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfAccountEvent))]
    public partial class WebEventService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAccountEventsCountByAccountIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountEventsByAccountIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountEventByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountEventVCalendarByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateAccountEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountEventsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateAccountEventTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountEventTypeByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountEventTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountEventTypesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountEventTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateAccountEventPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountEventPictureByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountEventPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountEventPicturesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountEventPicturesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountEventPictureIfModifiedSinceByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountEventInstancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountEventInstancesCountOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebEventService() {
            this.Url = global::SnCore.Web.Soap.Tests.Properties.Settings.Default.SnCore_Web_Soap_Tests_WebEventService_WebEventService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAccountEventsCountByAccountIdCompletedEventHandler GetAccountEventsCountByAccountIdCompleted;
        
        /// <remarks/>
        public event GetAccountEventsByAccountIdCompletedEventHandler GetAccountEventsByAccountIdCompleted;
        
        /// <remarks/>
        public event GetAccountEventByIdCompletedEventHandler GetAccountEventByIdCompleted;
        
        /// <remarks/>
        public event GetAccountEventVCalendarByIdCompletedEventHandler GetAccountEventVCalendarByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateAccountEventCompletedEventHandler CreateOrUpdateAccountEventCompleted;
        
        /// <remarks/>
        public event DeleteAccountEventCompletedEventHandler DeleteAccountEventCompleted;
        
        /// <remarks/>
        public event GetAccountEventsCountCompletedEventHandler GetAccountEventsCountCompleted;
        
        /// <remarks/>
        public event GetAccountEventsCompletedEventHandler GetAccountEventsCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateAccountEventTypeCompletedEventHandler CreateOrUpdateAccountEventTypeCompleted;
        
        /// <remarks/>
        public event GetAccountEventTypeByIdCompletedEventHandler GetAccountEventTypeByIdCompleted;
        
        /// <remarks/>
        public event GetAccountEventTypesCompletedEventHandler GetAccountEventTypesCompleted;
        
        /// <remarks/>
        public event GetAccountEventTypesCountCompletedEventHandler GetAccountEventTypesCountCompleted;
        
        /// <remarks/>
        public event DeleteAccountEventTypeCompletedEventHandler DeleteAccountEventTypeCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateAccountEventPictureCompletedEventHandler CreateOrUpdateAccountEventPictureCompleted;
        
        /// <remarks/>
        public event GetAccountEventPictureByIdCompletedEventHandler GetAccountEventPictureByIdCompleted;
        
        /// <remarks/>
        public event DeleteAccountEventPictureCompletedEventHandler DeleteAccountEventPictureCompleted;
        
        /// <remarks/>
        public event GetAccountEventPicturesCountCompletedEventHandler GetAccountEventPicturesCountCompleted;
        
        /// <remarks/>
        public event GetAccountEventPicturesCompletedEventHandler GetAccountEventPicturesCompleted;
        
        /// <remarks/>
        public event GetAccountEventPictureIfModifiedSinceByIdCompletedEventHandler GetAccountEventPictureIfModifiedSinceByIdCompleted;
        
        /// <remarks/>
        public event GetAccountEventInstancesCompletedEventHandler GetAccountEventInstancesCompleted;
        
        /// <remarks/>
        public event GetAccountEventInstancesCountCompletedEventHandler GetAccountEventInstancesCountCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEventsCountByAccountId", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountEventsCountByAccountId(string ticket, int id) {
            object[] results = this.Invoke("GetAccountEventsCountByAccountId", new object[] {
                        ticket,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventsCountByAccountIdAsync(string ticket, int id) {
            this.GetAccountEventsCountByAccountIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetAccountEventsCountByAccountIdAsync(string ticket, int id, object userState) {
            if ((this.GetAccountEventsCountByAccountIdOperationCompleted == null)) {
                this.GetAccountEventsCountByAccountIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventsCountByAccountIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountEventsCountByAccountId", new object[] {
                        ticket,
                        id}, this.GetAccountEventsCountByAccountIdOperationCompleted, userState);
        }
        
        private void OnGetAccountEventsCountByAccountIdOperationCompleted(object arg) {
            if ((this.GetAccountEventsCountByAccountIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventsCountByAccountIdCompleted(this, new GetAccountEventsCountByAccountIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEventsByAccountId", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountEvent[] GetAccountEventsByAccountId(string ticket, int id, int utcoffset, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountEventsByAccountId", new object[] {
                        ticket,
                        id,
                        utcoffset,
                        options});
            return ((TransitAccountEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventsByAccountIdAsync(string ticket, int id, int utcoffset, ServiceQueryOptions options) {
            this.GetAccountEventsByAccountIdAsync(ticket, id, utcoffset, options, null);
        }
        
        /// <remarks/>
        public void GetAccountEventsByAccountIdAsync(string ticket, int id, int utcoffset, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountEventsByAccountIdOperationCompleted == null)) {
                this.GetAccountEventsByAccountIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventsByAccountIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountEventsByAccountId", new object[] {
                        ticket,
                        id,
                        utcoffset,
                        options}, this.GetAccountEventsByAccountIdOperationCompleted, userState);
        }
        
        private void OnGetAccountEventsByAccountIdOperationCompleted(object arg) {
            if ((this.GetAccountEventsByAccountIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventsByAccountIdCompleted(this, new GetAccountEventsByAccountIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEventById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountEvent GetAccountEventById(string ticket, int id, int utcoffset) {
            object[] results = this.Invoke("GetAccountEventById", new object[] {
                        ticket,
                        id,
                        utcoffset});
            return ((TransitAccountEvent)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventByIdAsync(string ticket, int id, int utcoffset) {
            this.GetAccountEventByIdAsync(ticket, id, utcoffset, null);
        }
        
        /// <remarks/>
        public void GetAccountEventByIdAsync(string ticket, int id, int utcoffset, object userState) {
            if ((this.GetAccountEventByIdOperationCompleted == null)) {
                this.GetAccountEventByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountEventById", new object[] {
                        ticket,
                        id,
                        utcoffset}, this.GetAccountEventByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountEventByIdOperationCompleted(object arg) {
            if ((this.GetAccountEventByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventByIdCompleted(this, new GetAccountEventByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEventVCalendarById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountEventVCalendarById(string ticket, int id) {
            object[] results = this.Invoke("GetAccountEventVCalendarById", new object[] {
                        ticket,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventVCalendarByIdAsync(string ticket, int id) {
            this.GetAccountEventVCalendarByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetAccountEventVCalendarByIdAsync(string ticket, int id, object userState) {
            if ((this.GetAccountEventVCalendarByIdOperationCompleted == null)) {
                this.GetAccountEventVCalendarByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventVCalendarByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountEventVCalendarById", new object[] {
                        ticket,
                        id}, this.GetAccountEventVCalendarByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountEventVCalendarByIdOperationCompleted(object arg) {
            if ((this.GetAccountEventVCalendarByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventVCalendarByIdCompleted(this, new GetAccountEventVCalendarByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateAccountEvent", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateAccountEvent(string ticket, TransitAccountEvent evt) {
            object[] results = this.Invoke("CreateOrUpdateAccountEvent", new object[] {
                        ticket,
                        evt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountEventAsync(string ticket, TransitAccountEvent evt) {
            this.CreateOrUpdateAccountEventAsync(ticket, evt, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountEventAsync(string ticket, TransitAccountEvent evt, object userState) {
            if ((this.CreateOrUpdateAccountEventOperationCompleted == null)) {
                this.CreateOrUpdateAccountEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateAccountEventOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateAccountEvent", new object[] {
                        ticket,
                        evt}, this.CreateOrUpdateAccountEventOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateAccountEventOperationCompleted(object arg) {
            if ((this.CreateOrUpdateAccountEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateAccountEventCompleted(this, new CreateOrUpdateAccountEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteAccountEvent", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountEvent(string ticket, int id) {
            this.Invoke("DeleteAccountEvent", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteAccountEventAsync(string ticket, int id) {
            this.DeleteAccountEventAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteAccountEventAsync(string ticket, int id, object userState) {
            if ((this.DeleteAccountEventOperationCompleted == null)) {
                this.DeleteAccountEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountEventOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountEvent", new object[] {
                        ticket,
                        id}, this.DeleteAccountEventOperationCompleted, userState);
        }
        
        private void OnDeleteAccountEventOperationCompleted(object arg) {
            if ((this.DeleteAccountEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEventsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountEventsCount(string ticket, TransitAccountEventQueryOptions qopt) {
            object[] results = this.Invoke("GetAccountEventsCount", new object[] {
                        ticket,
                        qopt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventsCountAsync(string ticket, TransitAccountEventQueryOptions qopt) {
            this.GetAccountEventsCountAsync(ticket, qopt, null);
        }
        
        /// <remarks/>
        public void GetAccountEventsCountAsync(string ticket, TransitAccountEventQueryOptions qopt, object userState) {
            if ((this.GetAccountEventsCountOperationCompleted == null)) {
                this.GetAccountEventsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventsCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountEventsCount", new object[] {
                        ticket,
                        qopt}, this.GetAccountEventsCountOperationCompleted, userState);
        }
        
        private void OnGetAccountEventsCountOperationCompleted(object arg) {
            if ((this.GetAccountEventsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventsCountCompleted(this, new GetAccountEventsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEvents", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountEvent[] GetAccountEvents(string ticket, int utcoffset, TransitAccountEventQueryOptions qopt, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountEvents", new object[] {
                        ticket,
                        utcoffset,
                        qopt,
                        options});
            return ((TransitAccountEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventsAsync(string ticket, int utcoffset, TransitAccountEventQueryOptions qopt, ServiceQueryOptions options) {
            this.GetAccountEventsAsync(ticket, utcoffset, qopt, options, null);
        }
        
        /// <remarks/>
        public void GetAccountEventsAsync(string ticket, int utcoffset, TransitAccountEventQueryOptions qopt, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountEventsOperationCompleted == null)) {
                this.GetAccountEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventsOperationCompleted);
            }
            this.InvokeAsync("GetAccountEvents", new object[] {
                        ticket,
                        utcoffset,
                        qopt,
                        options}, this.GetAccountEventsOperationCompleted, userState);
        }
        
        private void OnGetAccountEventsOperationCompleted(object arg) {
            if ((this.GetAccountEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventsCompleted(this, new GetAccountEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateAccountEventType", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateAccountEventType(string ticket, TransitAccountEventType eventtype) {
            object[] results = this.Invoke("CreateOrUpdateAccountEventType", new object[] {
                        ticket,
                        eventtype});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountEventTypeAsync(string ticket, TransitAccountEventType eventtype) {
            this.CreateOrUpdateAccountEventTypeAsync(ticket, eventtype, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountEventTypeAsync(string ticket, TransitAccountEventType eventtype, object userState) {
            if ((this.CreateOrUpdateAccountEventTypeOperationCompleted == null)) {
                this.CreateOrUpdateAccountEventTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateAccountEventTypeOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateAccountEventType", new object[] {
                        ticket,
                        eventtype}, this.CreateOrUpdateAccountEventTypeOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateAccountEventTypeOperationCompleted(object arg) {
            if ((this.CreateOrUpdateAccountEventTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateAccountEventTypeCompleted(this, new CreateOrUpdateAccountEventTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEventTypeById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountEventType GetAccountEventTypeById(string ticket, int id) {
            object[] results = this.Invoke("GetAccountEventTypeById", new object[] {
                        ticket,
                        id});
            return ((TransitAccountEventType)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventTypeByIdAsync(string ticket, int id) {
            this.GetAccountEventTypeByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetAccountEventTypeByIdAsync(string ticket, int id, object userState) {
            if ((this.GetAccountEventTypeByIdOperationCompleted == null)) {
                this.GetAccountEventTypeByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventTypeByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountEventTypeById", new object[] {
                        ticket,
                        id}, this.GetAccountEventTypeByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountEventTypeByIdOperationCompleted(object arg) {
            if ((this.GetAccountEventTypeByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventTypeByIdCompleted(this, new GetAccountEventTypeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEventTypes", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountEventType[] GetAccountEventTypes(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountEventTypes", new object[] {
                        ticket,
                        options});
            return ((TransitAccountEventType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventTypesAsync(string ticket, ServiceQueryOptions options) {
            this.GetAccountEventTypesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetAccountEventTypesAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountEventTypesOperationCompleted == null)) {
                this.GetAccountEventTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventTypesOperationCompleted);
            }
            this.InvokeAsync("GetAccountEventTypes", new object[] {
                        ticket,
                        options}, this.GetAccountEventTypesOperationCompleted, userState);
        }
        
        private void OnGetAccountEventTypesOperationCompleted(object arg) {
            if ((this.GetAccountEventTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventTypesCompleted(this, new GetAccountEventTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEventTypesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountEventTypesCount(string ticket) {
            object[] results = this.Invoke("GetAccountEventTypesCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventTypesCountAsync(string ticket) {
            this.GetAccountEventTypesCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetAccountEventTypesCountAsync(string ticket, object userState) {
            if ((this.GetAccountEventTypesCountOperationCompleted == null)) {
                this.GetAccountEventTypesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventTypesCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountEventTypesCount", new object[] {
                        ticket}, this.GetAccountEventTypesCountOperationCompleted, userState);
        }
        
        private void OnGetAccountEventTypesCountOperationCompleted(object arg) {
            if ((this.GetAccountEventTypesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventTypesCountCompleted(this, new GetAccountEventTypesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteAccountEventType", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountEventType(string ticket, int id) {
            this.Invoke("DeleteAccountEventType", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteAccountEventTypeAsync(string ticket, int id) {
            this.DeleteAccountEventTypeAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteAccountEventTypeAsync(string ticket, int id, object userState) {
            if ((this.DeleteAccountEventTypeOperationCompleted == null)) {
                this.DeleteAccountEventTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountEventTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountEventType", new object[] {
                        ticket,
                        id}, this.DeleteAccountEventTypeOperationCompleted, userState);
        }
        
        private void OnDeleteAccountEventTypeOperationCompleted(object arg) {
            if ((this.DeleteAccountEventTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountEventTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateAccountEventPicture", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateAccountEventPicture(string ticket, TransitAccountEventPicture eventpicture) {
            object[] results = this.Invoke("CreateOrUpdateAccountEventPicture", new object[] {
                        ticket,
                        eventpicture});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountEventPictureAsync(string ticket, TransitAccountEventPicture eventpicture) {
            this.CreateOrUpdateAccountEventPictureAsync(ticket, eventpicture, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountEventPictureAsync(string ticket, TransitAccountEventPicture eventpicture, object userState) {
            if ((this.CreateOrUpdateAccountEventPictureOperationCompleted == null)) {
                this.CreateOrUpdateAccountEventPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateAccountEventPictureOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateAccountEventPicture", new object[] {
                        ticket,
                        eventpicture}, this.CreateOrUpdateAccountEventPictureOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateAccountEventPictureOperationCompleted(object arg) {
            if ((this.CreateOrUpdateAccountEventPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateAccountEventPictureCompleted(this, new CreateOrUpdateAccountEventPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEventPictureById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountEventPicture GetAccountEventPictureById(string ticket, int id) {
            object[] results = this.Invoke("GetAccountEventPictureById", new object[] {
                        ticket,
                        id});
            return ((TransitAccountEventPicture)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventPictureByIdAsync(string ticket, int id) {
            this.GetAccountEventPictureByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetAccountEventPictureByIdAsync(string ticket, int id, object userState) {
            if ((this.GetAccountEventPictureByIdOperationCompleted == null)) {
                this.GetAccountEventPictureByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventPictureByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountEventPictureById", new object[] {
                        ticket,
                        id}, this.GetAccountEventPictureByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountEventPictureByIdOperationCompleted(object arg) {
            if ((this.GetAccountEventPictureByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventPictureByIdCompleted(this, new GetAccountEventPictureByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteAccountEventPicture", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountEventPicture(string ticket, int id) {
            this.Invoke("DeleteAccountEventPicture", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteAccountEventPictureAsync(string ticket, int id) {
            this.DeleteAccountEventPictureAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteAccountEventPictureAsync(string ticket, int id, object userState) {
            if ((this.DeleteAccountEventPictureOperationCompleted == null)) {
                this.DeleteAccountEventPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountEventPictureOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountEventPicture", new object[] {
                        ticket,
                        id}, this.DeleteAccountEventPictureOperationCompleted, userState);
        }
        
        private void OnDeleteAccountEventPictureOperationCompleted(object arg) {
            if ((this.DeleteAccountEventPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountEventPictureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEventPicturesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountEventPicturesCount(string ticket, int id) {
            object[] results = this.Invoke("GetAccountEventPicturesCount", new object[] {
                        ticket,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventPicturesCountAsync(string ticket, int id) {
            this.GetAccountEventPicturesCountAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetAccountEventPicturesCountAsync(string ticket, int id, object userState) {
            if ((this.GetAccountEventPicturesCountOperationCompleted == null)) {
                this.GetAccountEventPicturesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventPicturesCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountEventPicturesCount", new object[] {
                        ticket,
                        id}, this.GetAccountEventPicturesCountOperationCompleted, userState);
        }
        
        private void OnGetAccountEventPicturesCountOperationCompleted(object arg) {
            if ((this.GetAccountEventPicturesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventPicturesCountCompleted(this, new GetAccountEventPicturesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEventPictures", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountEventPicture[] GetAccountEventPictures(string ticket, int id, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountEventPictures", new object[] {
                        ticket,
                        id,
                        options});
            return ((TransitAccountEventPicture[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventPicturesAsync(string ticket, int id, ServiceQueryOptions options) {
            this.GetAccountEventPicturesAsync(ticket, id, options, null);
        }
        
        /// <remarks/>
        public void GetAccountEventPicturesAsync(string ticket, int id, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountEventPicturesOperationCompleted == null)) {
                this.GetAccountEventPicturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventPicturesOperationCompleted);
            }
            this.InvokeAsync("GetAccountEventPictures", new object[] {
                        ticket,
                        id,
                        options}, this.GetAccountEventPicturesOperationCompleted, userState);
        }
        
        private void OnGetAccountEventPicturesOperationCompleted(object arg) {
            if ((this.GetAccountEventPicturesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventPicturesCompleted(this, new GetAccountEventPicturesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEventPictureIfModifiedSinceById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountEventPicture GetAccountEventPictureIfModifiedSinceById(string ticket, int id, System.DateTime ifModifiedSince) {
            object[] results = this.Invoke("GetAccountEventPictureIfModifiedSinceById", new object[] {
                        ticket,
                        id,
                        ifModifiedSince});
            return ((TransitAccountEventPicture)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventPictureIfModifiedSinceByIdAsync(string ticket, int id, System.DateTime ifModifiedSince) {
            this.GetAccountEventPictureIfModifiedSinceByIdAsync(ticket, id, ifModifiedSince, null);
        }
        
        /// <remarks/>
        public void GetAccountEventPictureIfModifiedSinceByIdAsync(string ticket, int id, System.DateTime ifModifiedSince, object userState) {
            if ((this.GetAccountEventPictureIfModifiedSinceByIdOperationCompleted == null)) {
                this.GetAccountEventPictureIfModifiedSinceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventPictureIfModifiedSinceByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountEventPictureIfModifiedSinceById", new object[] {
                        ticket,
                        id,
                        ifModifiedSince}, this.GetAccountEventPictureIfModifiedSinceByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountEventPictureIfModifiedSinceByIdOperationCompleted(object arg) {
            if ((this.GetAccountEventPictureIfModifiedSinceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventPictureIfModifiedSinceByIdCompleted(this, new GetAccountEventPictureIfModifiedSinceByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEventInstances", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountEventInstance[] GetAccountEventInstances(string ticket, TransitAccountEventInstanceQueryOptions qopt, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountEventInstances", new object[] {
                        ticket,
                        qopt,
                        options});
            return ((TransitAccountEventInstance[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventInstancesAsync(string ticket, TransitAccountEventInstanceQueryOptions qopt, ServiceQueryOptions options) {
            this.GetAccountEventInstancesAsync(ticket, qopt, options, null);
        }
        
        /// <remarks/>
        public void GetAccountEventInstancesAsync(string ticket, TransitAccountEventInstanceQueryOptions qopt, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountEventInstancesOperationCompleted == null)) {
                this.GetAccountEventInstancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventInstancesOperationCompleted);
            }
            this.InvokeAsync("GetAccountEventInstances", new object[] {
                        ticket,
                        qopt,
                        options}, this.GetAccountEventInstancesOperationCompleted, userState);
        }
        
        private void OnGetAccountEventInstancesOperationCompleted(object arg) {
            if ((this.GetAccountEventInstancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventInstancesCompleted(this, new GetAccountEventInstancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountEventInstancesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountEventInstancesCount(string ticket, TransitAccountEventInstanceQueryOptions qopt) {
            object[] results = this.Invoke("GetAccountEventInstancesCount", new object[] {
                        ticket,
                        qopt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountEventInstancesCountAsync(string ticket, TransitAccountEventInstanceQueryOptions qopt) {
            this.GetAccountEventInstancesCountAsync(ticket, qopt, null);
        }
        
        /// <remarks/>
        public void GetAccountEventInstancesCountAsync(string ticket, TransitAccountEventInstanceQueryOptions qopt, object userState) {
            if ((this.GetAccountEventInstancesCountOperationCompleted == null)) {
                this.GetAccountEventInstancesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountEventInstancesCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountEventInstancesCount", new object[] {
                        ticket,
                        qopt}, this.GetAccountEventInstancesCountOperationCompleted, userState);
        }
        
        private void OnGetAccountEventInstancesCountOperationCompleted(object arg) {
            if ((this.GetAccountEventInstancesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountEventInstancesCountCompleted(this, new GetAccountEventInstancesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class ServiceQueryOptions {
        
        private int pageSizeField;
        
        private int pageNumberField;
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int PageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountEventInstance))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfScheduleInstance {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountEventInstance : TransitServiceOfScheduleInstance {
        
        private int accountEventIdField;
        
        private int pictureIdField;
        
        private int placeIdField;
        
        private string placeNameField;
        
        private string placeNeighborhoodField;
        
        private string placeCityField;
        
        private string placeStateField;
        
        private string placeCountryField;
        
        private string accountEventTypeField;
        
        private string descriptionField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private int accountIdField;
        
        private string accountNameField;
        
        private string nameField;
        
        private int scheduleIdField;
        
        private string costField;
        
        private string websiteField;
        
        private string emailField;
        
        private string phoneField;
        
        private System.DateTime startDateTimeField;
        
        private System.DateTime endDateTimeField;
        
        private int instanceField;
        
        /// <remarks/>
        public int AccountEventId {
            get {
                return this.accountEventIdField;
            }
            set {
                this.accountEventIdField = value;
            }
        }
        
        /// <remarks/>
        public int PictureId {
            get {
                return this.pictureIdField;
            }
            set {
                this.pictureIdField = value;
            }
        }
        
        /// <remarks/>
        public int PlaceId {
            get {
                return this.placeIdField;
            }
            set {
                this.placeIdField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceName {
            get {
                return this.placeNameField;
            }
            set {
                this.placeNameField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceNeighborhood {
            get {
                return this.placeNeighborhoodField;
            }
            set {
                this.placeNeighborhoodField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceCity {
            get {
                return this.placeCityField;
            }
            set {
                this.placeCityField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceState {
            get {
                return this.placeStateField;
            }
            set {
                this.placeStateField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceCountry {
            get {
                return this.placeCountryField;
            }
            set {
                this.placeCountryField = value;
            }
        }
        
        /// <remarks/>
        public string AccountEventType {
            get {
                return this.accountEventTypeField;
            }
            set {
                this.accountEventTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ScheduleId {
            get {
                return this.scheduleIdField;
            }
            set {
                this.scheduleIdField = value;
            }
        }
        
        /// <remarks/>
        public string Cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
        
        /// <remarks/>
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDateTime {
            get {
                return this.endDateTimeField;
            }
            set {
                this.endDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public int Instance {
            get {
                return this.instanceField;
            }
            set {
                this.instanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountEventInstanceQueryOptions {
        
        private string sortOrderField;
        
        private bool sortAscendingField;
        
        private string countryField;
        
        private string stateField;
        
        private string cityField;
        
        private string neighborhoodField;
        
        private string nameField;
        
        private string typeField;
        
        private System.DateTime startDateTimeField;
        
        private System.DateTime endDateTimeField;
        
        /// <remarks/>
        public string SortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        public bool SortAscending {
            get {
                return this.sortAscendingField;
            }
            set {
                this.sortAscendingField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Neighborhood {
            get {
                return this.neighborhoodField;
            }
            set {
                this.neighborhoodField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDateTime {
            get {
                return this.endDateTimeField;
            }
            set {
                this.endDateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitCounter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfCounter {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitCounter : TransitServiceOfCounter {
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private long totalField;
        
        private string uriField;
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public long Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public string Uri {
            get {
                return this.uriField;
            }
            set {
                this.uriField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitArrayElementServiceOfAccountEventPicture))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountEventPicture))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfAccountEventPicture {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountEventPicture))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitArrayElementServiceOfAccountEventPicture : TransitServiceOfAccountEventPicture {
        
        private int countField;
        
        private int nextIndexField;
        
        private int prevIndexField;
        
        private int indexField;
        
        private int nextIdField;
        
        private int prevIdField;
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        public int NextIndex {
            get {
                return this.nextIndexField;
            }
            set {
                this.nextIndexField = value;
            }
        }
        
        /// <remarks/>
        public int PrevIndex {
            get {
                return this.prevIndexField;
            }
            set {
                this.prevIndexField = value;
            }
        }
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public int NextId {
            get {
                return this.nextIdField;
            }
            set {
                this.nextIdField = value;
            }
        }
        
        /// <remarks/>
        public int PrevId {
            get {
                return this.prevIdField;
            }
            set {
                this.prevIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountEventPicture : TransitArrayElementServiceOfAccountEventPicture {
        
        private byte[] pictureField;
        
        private byte[] thumbnailField;
        
        private int commentCountField;
        
        private int accountEventIdField;
        
        private bool hasPictureField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private TransitCounter counterField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Picture {
            get {
                return this.pictureField;
            }
            set {
                this.pictureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Thumbnail {
            get {
                return this.thumbnailField;
            }
            set {
                this.thumbnailField = value;
            }
        }
        
        /// <remarks/>
        public int CommentCount {
            get {
                return this.commentCountField;
            }
            set {
                this.commentCountField = value;
            }
        }
        
        /// <remarks/>
        public int AccountEventId {
            get {
                return this.accountEventIdField;
            }
            set {
                this.accountEventIdField = value;
            }
        }
        
        /// <remarks/>
        public bool HasPicture {
            get {
                return this.hasPictureField;
            }
            set {
                this.hasPictureField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public TransitCounter Counter {
            get {
                return this.counterField;
            }
            set {
                this.counterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountEventType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfAccountEventType {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountEventType : TransitServiceOfAccountEventType {
        
        private string nameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountEventQueryOptions {
        
        private string sortOrderField;
        
        private bool sortAscendingField;
        
        private string countryField;
        
        private string stateField;
        
        private string cityField;
        
        private string nameField;
        
        private string neighborhoodField;
        
        private string typeField;
        
        private System.DateTime startDateTimeField;
        
        private System.DateTime endDateTimeField;
        
        /// <remarks/>
        public string SortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        public bool SortAscending {
            get {
                return this.sortAscendingField;
            }
            set {
                this.sortAscendingField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Neighborhood {
            get {
                return this.neighborhoodField;
            }
            set {
                this.neighborhoodField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDateTime {
            get {
                return this.endDateTimeField;
            }
            set {
                this.endDateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountEvent))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfAccountEvent {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountEvent : TransitServiceOfAccountEvent {
        
        private int pictureIdField;
        
        private int placeIdField;
        
        private string placeNameField;
        
        private string placeNeighborhoodField;
        
        private string placeCityField;
        
        private string placeStateField;
        
        private string placeCountryField;
        
        private string accountEventTypeField;
        
        private string descriptionField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private int accountIdField;
        
        private string accountNameField;
        
        private string nameField;
        
        private int scheduleIdField;
        
        private bool publishField;
        
        private string costField;
        
        private string websiteField;
        
        private string emailField;
        
        private string phoneField;
        
        private string scheduleField;
        
        private bool allDayField;
        
        private int dailyEveryNDaysField;
        
        private System.DateTime endDateTimeField;
        
        private bool endlessField;
        
        private int endOccurrencesField;
        
        private int monthlyDayField;
        
        private int monthlyExDayIndexField;
        
        private int monthlyExDayNameField;
        
        private int monthlyExMonthField;
        
        private int monthlyMonthField;
        
        private RecurrencePattern recurrencePatternField;
        
        private System.DateTime startDateTimeField;
        
        private short weeklyDaysOfWeekField;
        
        private int weeklyEveryNWeeksField;
        
        private int yearlyDayField;
        
        private int yearlyExDayIndexField;
        
        private int yearlyExDayNameField;
        
        private int yearlyExMonthField;
        
        private int yearlyMonthField;
        
        /// <remarks/>
        public int PictureId {
            get {
                return this.pictureIdField;
            }
            set {
                this.pictureIdField = value;
            }
        }
        
        /// <remarks/>
        public int PlaceId {
            get {
                return this.placeIdField;
            }
            set {
                this.placeIdField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceName {
            get {
                return this.placeNameField;
            }
            set {
                this.placeNameField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceNeighborhood {
            get {
                return this.placeNeighborhoodField;
            }
            set {
                this.placeNeighborhoodField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceCity {
            get {
                return this.placeCityField;
            }
            set {
                this.placeCityField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceState {
            get {
                return this.placeStateField;
            }
            set {
                this.placeStateField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceCountry {
            get {
                return this.placeCountryField;
            }
            set {
                this.placeCountryField = value;
            }
        }
        
        /// <remarks/>
        public string AccountEventType {
            get {
                return this.accountEventTypeField;
            }
            set {
                this.accountEventTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ScheduleId {
            get {
                return this.scheduleIdField;
            }
            set {
                this.scheduleIdField = value;
            }
        }
        
        /// <remarks/>
        public bool Publish {
            get {
                return this.publishField;
            }
            set {
                this.publishField = value;
            }
        }
        
        /// <remarks/>
        public string Cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
        
        /// <remarks/>
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Schedule {
            get {
                return this.scheduleField;
            }
            set {
                this.scheduleField = value;
            }
        }
        
        /// <remarks/>
        public bool AllDay {
            get {
                return this.allDayField;
            }
            set {
                this.allDayField = value;
            }
        }
        
        /// <remarks/>
        public int DailyEveryNDays {
            get {
                return this.dailyEveryNDaysField;
            }
            set {
                this.dailyEveryNDaysField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDateTime {
            get {
                return this.endDateTimeField;
            }
            set {
                this.endDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool Endless {
            get {
                return this.endlessField;
            }
            set {
                this.endlessField = value;
            }
        }
        
        /// <remarks/>
        public int EndOccurrences {
            get {
                return this.endOccurrencesField;
            }
            set {
                this.endOccurrencesField = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyDay {
            get {
                return this.monthlyDayField;
            }
            set {
                this.monthlyDayField = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyExDayIndex {
            get {
                return this.monthlyExDayIndexField;
            }
            set {
                this.monthlyExDayIndexField = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyExDayName {
            get {
                return this.monthlyExDayNameField;
            }
            set {
                this.monthlyExDayNameField = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyExMonth {
            get {
                return this.monthlyExMonthField;
            }
            set {
                this.monthlyExMonthField = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyMonth {
            get {
                return this.monthlyMonthField;
            }
            set {
                this.monthlyMonthField = value;
            }
        }
        
        /// <remarks/>
        public RecurrencePattern RecurrencePattern {
            get {
                return this.recurrencePatternField;
            }
            set {
                this.recurrencePatternField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public short WeeklyDaysOfWeek {
            get {
                return this.weeklyDaysOfWeekField;
            }
            set {
                this.weeklyDaysOfWeekField = value;
            }
        }
        
        /// <remarks/>
        public int WeeklyEveryNWeeks {
            get {
                return this.weeklyEveryNWeeksField;
            }
            set {
                this.weeklyEveryNWeeksField = value;
            }
        }
        
        /// <remarks/>
        public int YearlyDay {
            get {
                return this.yearlyDayField;
            }
            set {
                this.yearlyDayField = value;
            }
        }
        
        /// <remarks/>
        public int YearlyExDayIndex {
            get {
                return this.yearlyExDayIndexField;
            }
            set {
                this.yearlyExDayIndexField = value;
            }
        }
        
        /// <remarks/>
        public int YearlyExDayName {
            get {
                return this.yearlyExDayNameField;
            }
            set {
                this.yearlyExDayNameField = value;
            }
        }
        
        /// <remarks/>
        public int YearlyExMonth {
            get {
                return this.yearlyExMonthField;
            }
            set {
                this.yearlyExMonthField = value;
            }
        }
        
        /// <remarks/>
        public int YearlyMonth {
            get {
                return this.yearlyMonthField;
            }
            set {
                this.yearlyMonthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public enum RecurrencePattern {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Daily_EveryNDays,
        
        /// <remarks/>
        Daily_EveryWeekday,
        
        /// <remarks/>
        Weekly,
        
        /// <remarks/>
        Monthly_DayNOfEveryNMonths,
        
        /// <remarks/>
        Monthly_NthWeekDayOfEveryNMonth,
        
        /// <remarks/>
        Yearly_DayNOfMonth,
        
        /// <remarks/>
        Yearly_NthWeekDayOfMonth,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventsCountByAccountIdCompletedEventHandler(object sender, GetAccountEventsCountByAccountIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventsCountByAccountIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventsCountByAccountIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventsByAccountIdCompletedEventHandler(object sender, GetAccountEventsByAccountIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventsByAccountIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventsByAccountIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventByIdCompletedEventHandler(object sender, GetAccountEventByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountEvent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountEvent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventVCalendarByIdCompletedEventHandler(object sender, GetAccountEventVCalendarByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventVCalendarByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventVCalendarByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateAccountEventCompletedEventHandler(object sender, CreateOrUpdateAccountEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateAccountEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateAccountEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteAccountEventCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventsCountCompletedEventHandler(object sender, GetAccountEventsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventsCompletedEventHandler(object sender, GetAccountEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateAccountEventTypeCompletedEventHandler(object sender, CreateOrUpdateAccountEventTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateAccountEventTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateAccountEventTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventTypeByIdCompletedEventHandler(object sender, GetAccountEventTypeByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventTypeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventTypeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountEventType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountEventType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventTypesCompletedEventHandler(object sender, GetAccountEventTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountEventType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountEventType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventTypesCountCompletedEventHandler(object sender, GetAccountEventTypesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventTypesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventTypesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteAccountEventTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateAccountEventPictureCompletedEventHandler(object sender, CreateOrUpdateAccountEventPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateAccountEventPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateAccountEventPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventPictureByIdCompletedEventHandler(object sender, GetAccountEventPictureByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventPictureByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventPictureByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountEventPicture Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountEventPicture)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteAccountEventPictureCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventPicturesCountCompletedEventHandler(object sender, GetAccountEventPicturesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventPicturesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventPicturesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventPicturesCompletedEventHandler(object sender, GetAccountEventPicturesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventPicturesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventPicturesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountEventPicture[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountEventPicture[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventPictureIfModifiedSinceByIdCompletedEventHandler(object sender, GetAccountEventPictureIfModifiedSinceByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventPictureIfModifiedSinceByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventPictureIfModifiedSinceByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountEventPicture Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountEventPicture)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventInstancesCompletedEventHandler(object sender, GetAccountEventInstancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventInstancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventInstancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountEventInstance[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountEventInstance[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountEventInstancesCountCompletedEventHandler(object sender, GetAccountEventInstancesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountEventInstancesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountEventInstancesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591