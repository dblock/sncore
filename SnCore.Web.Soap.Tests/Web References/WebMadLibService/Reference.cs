//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4952.
// 
#pragma warning disable 1591

namespace SnCore.Web.Soap.Tests.WebMadLibService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebMadLibServiceSoap", Namespace="http://www.vestris.com/sncore/ns/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfMadLibInstance))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfMadLib))]
    public partial class WebMadLibService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetMadLibsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMadLibsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateMadLibOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMadLibOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMadLibByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMadLibInstancesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMadLibInstancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateMadLibInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMadLibInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMadLibInstanceByIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebMadLibService() {
            this.Url = global::SnCore.Web.Soap.Tests.Properties.Settings.Default.SnCore_Web_Soap_Tests_WebMadLibService_WebMadLibService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetMadLibsCountCompletedEventHandler GetMadLibsCountCompleted;
        
        /// <remarks/>
        public event GetMadLibsCompletedEventHandler GetMadLibsCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateMadLibCompletedEventHandler CreateOrUpdateMadLibCompleted;
        
        /// <remarks/>
        public event DeleteMadLibCompletedEventHandler DeleteMadLibCompleted;
        
        /// <remarks/>
        public event GetMadLibByIdCompletedEventHandler GetMadLibByIdCompleted;
        
        /// <remarks/>
        public event GetMadLibInstancesCountCompletedEventHandler GetMadLibInstancesCountCompleted;
        
        /// <remarks/>
        public event GetMadLibInstancesCompletedEventHandler GetMadLibInstancesCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateMadLibInstanceCompletedEventHandler CreateOrUpdateMadLibInstanceCompleted;
        
        /// <remarks/>
        public event DeleteMadLibInstanceCompletedEventHandler DeleteMadLibInstanceCompleted;
        
        /// <remarks/>
        public event GetMadLibInstanceByIdCompletedEventHandler GetMadLibInstanceByIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetMadLibsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMadLibsCount(string ticket, int id) {
            object[] results = this.Invoke("GetMadLibsCount", new object[] {
                        ticket,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMadLibsCountAsync(string ticket, int id) {
            this.GetMadLibsCountAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetMadLibsCountAsync(string ticket, int id, object userState) {
            if ((this.GetMadLibsCountOperationCompleted == null)) {
                this.GetMadLibsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMadLibsCountOperationCompleted);
            }
            this.InvokeAsync("GetMadLibsCount", new object[] {
                        ticket,
                        id}, this.GetMadLibsCountOperationCompleted, userState);
        }
        
        private void OnGetMadLibsCountOperationCompleted(object arg) {
            if ((this.GetMadLibsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMadLibsCountCompleted(this, new GetMadLibsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetMadLibs", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitMadLib[] GetMadLibs(string ticket, int id, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetMadLibs", new object[] {
                        ticket,
                        id,
                        options});
            return ((TransitMadLib[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMadLibsAsync(string ticket, int id, ServiceQueryOptions options) {
            this.GetMadLibsAsync(ticket, id, options, null);
        }
        
        /// <remarks/>
        public void GetMadLibsAsync(string ticket, int id, ServiceQueryOptions options, object userState) {
            if ((this.GetMadLibsOperationCompleted == null)) {
                this.GetMadLibsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMadLibsOperationCompleted);
            }
            this.InvokeAsync("GetMadLibs", new object[] {
                        ticket,
                        id,
                        options}, this.GetMadLibsOperationCompleted, userState);
        }
        
        private void OnGetMadLibsOperationCompleted(object arg) {
            if ((this.GetMadLibsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMadLibsCompleted(this, new GetMadLibsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateMadLib", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateMadLib(string ticket, TransitMadLib madlib) {
            object[] results = this.Invoke("CreateOrUpdateMadLib", new object[] {
                        ticket,
                        madlib});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateMadLibAsync(string ticket, TransitMadLib madlib) {
            this.CreateOrUpdateMadLibAsync(ticket, madlib, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateMadLibAsync(string ticket, TransitMadLib madlib, object userState) {
            if ((this.CreateOrUpdateMadLibOperationCompleted == null)) {
                this.CreateOrUpdateMadLibOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateMadLibOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateMadLib", new object[] {
                        ticket,
                        madlib}, this.CreateOrUpdateMadLibOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateMadLibOperationCompleted(object arg) {
            if ((this.CreateOrUpdateMadLibCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateMadLibCompleted(this, new CreateOrUpdateMadLibCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteMadLib", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteMadLib(string ticket, int id) {
            this.Invoke("DeleteMadLib", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteMadLibAsync(string ticket, int id) {
            this.DeleteMadLibAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteMadLibAsync(string ticket, int id, object userState) {
            if ((this.DeleteMadLibOperationCompleted == null)) {
                this.DeleteMadLibOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMadLibOperationCompleted);
            }
            this.InvokeAsync("DeleteMadLib", new object[] {
                        ticket,
                        id}, this.DeleteMadLibOperationCompleted, userState);
        }
        
        private void OnDeleteMadLibOperationCompleted(object arg) {
            if ((this.DeleteMadLibCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMadLibCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetMadLibById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitMadLib GetMadLibById(string ticket, int id) {
            object[] results = this.Invoke("GetMadLibById", new object[] {
                        ticket,
                        id});
            return ((TransitMadLib)(results[0]));
        }
        
        /// <remarks/>
        public void GetMadLibByIdAsync(string ticket, int id) {
            this.GetMadLibByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetMadLibByIdAsync(string ticket, int id, object userState) {
            if ((this.GetMadLibByIdOperationCompleted == null)) {
                this.GetMadLibByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMadLibByIdOperationCompleted);
            }
            this.InvokeAsync("GetMadLibById", new object[] {
                        ticket,
                        id}, this.GetMadLibByIdOperationCompleted, userState);
        }
        
        private void OnGetMadLibByIdOperationCompleted(object arg) {
            if ((this.GetMadLibByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMadLibByIdCompleted(this, new GetMadLibByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetMadLibInstancesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMadLibInstancesCount(string ticket, string table, int id) {
            object[] results = this.Invoke("GetMadLibInstancesCount", new object[] {
                        ticket,
                        table,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMadLibInstancesCountAsync(string ticket, string table, int id) {
            this.GetMadLibInstancesCountAsync(ticket, table, id, null);
        }
        
        /// <remarks/>
        public void GetMadLibInstancesCountAsync(string ticket, string table, int id, object userState) {
            if ((this.GetMadLibInstancesCountOperationCompleted == null)) {
                this.GetMadLibInstancesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMadLibInstancesCountOperationCompleted);
            }
            this.InvokeAsync("GetMadLibInstancesCount", new object[] {
                        ticket,
                        table,
                        id}, this.GetMadLibInstancesCountOperationCompleted, userState);
        }
        
        private void OnGetMadLibInstancesCountOperationCompleted(object arg) {
            if ((this.GetMadLibInstancesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMadLibInstancesCountCompleted(this, new GetMadLibInstancesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetMadLibInstances", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitMadLibInstance[] GetMadLibInstances(string ticket, string table, int id, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetMadLibInstances", new object[] {
                        ticket,
                        table,
                        id,
                        options});
            return ((TransitMadLibInstance[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMadLibInstancesAsync(string ticket, string table, int id, ServiceQueryOptions options) {
            this.GetMadLibInstancesAsync(ticket, table, id, options, null);
        }
        
        /// <remarks/>
        public void GetMadLibInstancesAsync(string ticket, string table, int id, ServiceQueryOptions options, object userState) {
            if ((this.GetMadLibInstancesOperationCompleted == null)) {
                this.GetMadLibInstancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMadLibInstancesOperationCompleted);
            }
            this.InvokeAsync("GetMadLibInstances", new object[] {
                        ticket,
                        table,
                        id,
                        options}, this.GetMadLibInstancesOperationCompleted, userState);
        }
        
        private void OnGetMadLibInstancesOperationCompleted(object arg) {
            if ((this.GetMadLibInstancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMadLibInstancesCompleted(this, new GetMadLibInstancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateMadLibInstance", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateMadLibInstance(string ticket, TransitMadLibInstance madlibinstance) {
            object[] results = this.Invoke("CreateOrUpdateMadLibInstance", new object[] {
                        ticket,
                        madlibinstance});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateMadLibInstanceAsync(string ticket, TransitMadLibInstance madlibinstance) {
            this.CreateOrUpdateMadLibInstanceAsync(ticket, madlibinstance, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateMadLibInstanceAsync(string ticket, TransitMadLibInstance madlibinstance, object userState) {
            if ((this.CreateOrUpdateMadLibInstanceOperationCompleted == null)) {
                this.CreateOrUpdateMadLibInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateMadLibInstanceOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateMadLibInstance", new object[] {
                        ticket,
                        madlibinstance}, this.CreateOrUpdateMadLibInstanceOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateMadLibInstanceOperationCompleted(object arg) {
            if ((this.CreateOrUpdateMadLibInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateMadLibInstanceCompleted(this, new CreateOrUpdateMadLibInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteMadLibInstance", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteMadLibInstance(string ticket, int id) {
            this.Invoke("DeleteMadLibInstance", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteMadLibInstanceAsync(string ticket, int id) {
            this.DeleteMadLibInstanceAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteMadLibInstanceAsync(string ticket, int id, object userState) {
            if ((this.DeleteMadLibInstanceOperationCompleted == null)) {
                this.DeleteMadLibInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMadLibInstanceOperationCompleted);
            }
            this.InvokeAsync("DeleteMadLibInstance", new object[] {
                        ticket,
                        id}, this.DeleteMadLibInstanceOperationCompleted, userState);
        }
        
        private void OnDeleteMadLibInstanceOperationCompleted(object arg) {
            if ((this.DeleteMadLibInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMadLibInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetMadLibInstanceById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitMadLibInstance GetMadLibInstanceById(string ticket, int id) {
            object[] results = this.Invoke("GetMadLibInstanceById", new object[] {
                        ticket,
                        id});
            return ((TransitMadLibInstance)(results[0]));
        }
        
        /// <remarks/>
        public void GetMadLibInstanceByIdAsync(string ticket, int id) {
            this.GetMadLibInstanceByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetMadLibInstanceByIdAsync(string ticket, int id, object userState) {
            if ((this.GetMadLibInstanceByIdOperationCompleted == null)) {
                this.GetMadLibInstanceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMadLibInstanceByIdOperationCompleted);
            }
            this.InvokeAsync("GetMadLibInstanceById", new object[] {
                        ticket,
                        id}, this.GetMadLibInstanceByIdOperationCompleted, userState);
        }
        
        private void OnGetMadLibInstanceByIdOperationCompleted(object arg) {
            if ((this.GetMadLibInstanceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMadLibInstanceByIdCompleted(this, new GetMadLibInstanceByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class ServiceQueryOptions {
        
        private int pageSizeField;
        
        private int pageNumberField;
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int PageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitMadLibInstance))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfMadLibInstance {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitMadLibInstance : TransitServiceOfMadLibInstance {
        
        private string textField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private string objectNameField;
        
        private int objectIdField;
        
        private int accountIdField;
        
        private int objectAccountIdField;
        
        private string objectUriField;
        
        private string accountNameField;
        
        private int accountPictureIdField;
        
        private int madLibIdField;
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        public int ObjectId {
            get {
                return this.objectIdField;
            }
            set {
                this.objectIdField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public int ObjectAccountId {
            get {
                return this.objectAccountIdField;
            }
            set {
                this.objectAccountIdField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectUri {
            get {
                return this.objectUriField;
            }
            set {
                this.objectUriField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public int AccountPictureId {
            get {
                return this.accountPictureIdField;
            }
            set {
                this.accountPictureIdField = value;
            }
        }
        
        /// <remarks/>
        public int MadLibId {
            get {
                return this.madLibIdField;
            }
            set {
                this.madLibIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitMadLib))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfMadLib {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitMadLib : TransitServiceOfMadLib {
        
        private string nameField;
        
        private string templateField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private int accountIdField;
        
        private string accountNameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Template {
            get {
                return this.templateField;
            }
            set {
                this.templateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetMadLibsCountCompletedEventHandler(object sender, GetMadLibsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMadLibsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMadLibsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetMadLibsCompletedEventHandler(object sender, GetMadLibsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMadLibsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMadLibsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitMadLib[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitMadLib[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateOrUpdateMadLibCompletedEventHandler(object sender, CreateOrUpdateMadLibCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateMadLibCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateMadLibCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteMadLibCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetMadLibByIdCompletedEventHandler(object sender, GetMadLibByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMadLibByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMadLibByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitMadLib Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitMadLib)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetMadLibInstancesCountCompletedEventHandler(object sender, GetMadLibInstancesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMadLibInstancesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMadLibInstancesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetMadLibInstancesCompletedEventHandler(object sender, GetMadLibInstancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMadLibInstancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMadLibInstancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitMadLibInstance[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitMadLibInstance[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateOrUpdateMadLibInstanceCompletedEventHandler(object sender, CreateOrUpdateMadLibInstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateMadLibInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateMadLibInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteMadLibInstanceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetMadLibInstanceByIdCompletedEventHandler(object sender, GetMadLibInstanceByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMadLibInstanceByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMadLibInstanceByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitMadLibInstance Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitMadLibInstance)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591