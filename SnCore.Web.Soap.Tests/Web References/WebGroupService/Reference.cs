//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4927.
// 
#pragma warning disable 1591

namespace SnCore.Web.Soap.Tests.WebGroupService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebGroupServiceSoap", Namespace="http://www.vestris.com/sncore/ns/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfAccountGroupAccountRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfAccountGroupAccountInvitation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfAccountGroupPlace))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfCounter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfAccountGroupPicture))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfAccountGroupAccount))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitServiceOfAccountGroup))]
    public partial class WebGroupService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateOrUpdateAccountGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicAccountGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicAccountGroupsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateAccountGroupAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountsByAccountIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountsByAccountIdCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicAccountGroupAccountsByAccountIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublicAccountGroupAccountsByAccountIdCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountGroupAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountByAccountGroupIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateAccountGroupPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupPictureByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupPicturesOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveAccountGroupPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupPicturesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountGroupPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupPictureIfModifiedSinceByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateAccountGroupPlaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupPlaceByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupPlacesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupPlacesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountGroupPlaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateAccountGroupAccountInvitationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountInvitationByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountInvitationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountInvitationsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountInvitationsByAccountIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountInvitationsByAccountIdCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountGroupAccountInvitationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptAccountGroupAccountInvitationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectAccountGroupAccountInvitationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateAccountGroupAccountRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountRequestByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountRequestsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountRequestsByAccountIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountGroupAccountRequestsByAccountIdCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountGroupAccountRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptAccountGroupAccountRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectAccountGroupAccountRequestOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebGroupService() {
            this.Url = global::SnCore.Web.Soap.Tests.Properties.Settings.Default.SnCore_Web_Soap_Tests_WebGroupService_WebGroupService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateOrUpdateAccountGroupCompletedEventHandler CreateOrUpdateAccountGroupCompleted;
        
        /// <remarks/>
        public event GetAccountGroupByIdCompletedEventHandler GetAccountGroupByIdCompleted;
        
        /// <remarks/>
        public event GetAccountGroupsCompletedEventHandler GetAccountGroupsCompleted;
        
        /// <remarks/>
        public event GetAccountGroupsCountCompletedEventHandler GetAccountGroupsCountCompleted;
        
        /// <remarks/>
        public event GetPublicAccountGroupsCompletedEventHandler GetPublicAccountGroupsCompleted;
        
        /// <remarks/>
        public event GetPublicAccountGroupsCountCompletedEventHandler GetPublicAccountGroupsCountCompleted;
        
        /// <remarks/>
        public event DeleteAccountGroupCompletedEventHandler DeleteAccountGroupCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateAccountGroupAccountCompletedEventHandler CreateOrUpdateAccountGroupAccountCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountByIdCompletedEventHandler GetAccountGroupAccountByIdCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountsCompletedEventHandler GetAccountGroupAccountsCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountsCountCompletedEventHandler GetAccountGroupAccountsCountCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountsByAccountIdCompletedEventHandler GetAccountGroupAccountsByAccountIdCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountsByAccountIdCountCompletedEventHandler GetAccountGroupAccountsByAccountIdCountCompleted;
        
        /// <remarks/>
        public event GetPublicAccountGroupAccountsByAccountIdCompletedEventHandler GetPublicAccountGroupAccountsByAccountIdCompleted;
        
        /// <remarks/>
        public event GetPublicAccountGroupAccountsByAccountIdCountCompletedEventHandler GetPublicAccountGroupAccountsByAccountIdCountCompleted;
        
        /// <remarks/>
        public event DeleteAccountGroupAccountCompletedEventHandler DeleteAccountGroupAccountCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountByAccountGroupIdCompletedEventHandler GetAccountGroupAccountByAccountGroupIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateAccountGroupPictureCompletedEventHandler CreateOrUpdateAccountGroupPictureCompleted;
        
        /// <remarks/>
        public event GetAccountGroupPictureByIdCompletedEventHandler GetAccountGroupPictureByIdCompleted;
        
        /// <remarks/>
        public event GetAccountGroupPicturesCompletedEventHandler GetAccountGroupPicturesCompleted;
        
        /// <remarks/>
        public event MoveAccountGroupPictureCompletedEventHandler MoveAccountGroupPictureCompleted;
        
        /// <remarks/>
        public event GetAccountGroupPicturesCountCompletedEventHandler GetAccountGroupPicturesCountCompleted;
        
        /// <remarks/>
        public event DeleteAccountGroupPictureCompletedEventHandler DeleteAccountGroupPictureCompleted;
        
        /// <remarks/>
        public event GetAccountGroupPictureIfModifiedSinceByIdCompletedEventHandler GetAccountGroupPictureIfModifiedSinceByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateAccountGroupPlaceCompletedEventHandler CreateOrUpdateAccountGroupPlaceCompleted;
        
        /// <remarks/>
        public event GetAccountGroupPlaceByIdCompletedEventHandler GetAccountGroupPlaceByIdCompleted;
        
        /// <remarks/>
        public event GetAccountGroupPlacesCompletedEventHandler GetAccountGroupPlacesCompleted;
        
        /// <remarks/>
        public event GetAccountGroupPlacesCountCompletedEventHandler GetAccountGroupPlacesCountCompleted;
        
        /// <remarks/>
        public event DeleteAccountGroupPlaceCompletedEventHandler DeleteAccountGroupPlaceCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateAccountGroupAccountInvitationCompletedEventHandler CreateOrUpdateAccountGroupAccountInvitationCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountInvitationByIdCompletedEventHandler GetAccountGroupAccountInvitationByIdCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountInvitationsCompletedEventHandler GetAccountGroupAccountInvitationsCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountInvitationsCountCompletedEventHandler GetAccountGroupAccountInvitationsCountCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountInvitationsByAccountIdCompletedEventHandler GetAccountGroupAccountInvitationsByAccountIdCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountInvitationsByAccountIdCountCompletedEventHandler GetAccountGroupAccountInvitationsByAccountIdCountCompleted;
        
        /// <remarks/>
        public event DeleteAccountGroupAccountInvitationCompletedEventHandler DeleteAccountGroupAccountInvitationCompleted;
        
        /// <remarks/>
        public event AcceptAccountGroupAccountInvitationCompletedEventHandler AcceptAccountGroupAccountInvitationCompleted;
        
        /// <remarks/>
        public event RejectAccountGroupAccountInvitationCompletedEventHandler RejectAccountGroupAccountInvitationCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateAccountGroupAccountRequestCompletedEventHandler CreateOrUpdateAccountGroupAccountRequestCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountRequestByIdCompletedEventHandler GetAccountGroupAccountRequestByIdCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountRequestsCompletedEventHandler GetAccountGroupAccountRequestsCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountRequestsCountCompletedEventHandler GetAccountGroupAccountRequestsCountCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountRequestsByAccountIdCompletedEventHandler GetAccountGroupAccountRequestsByAccountIdCompleted;
        
        /// <remarks/>
        public event GetAccountGroupAccountRequestsByAccountIdCountCompletedEventHandler GetAccountGroupAccountRequestsByAccountIdCountCompleted;
        
        /// <remarks/>
        public event DeleteAccountGroupAccountRequestCompletedEventHandler DeleteAccountGroupAccountRequestCompleted;
        
        /// <remarks/>
        public event AcceptAccountGroupAccountRequestCompletedEventHandler AcceptAccountGroupAccountRequestCompleted;
        
        /// <remarks/>
        public event RejectAccountGroupAccountRequestCompletedEventHandler RejectAccountGroupAccountRequestCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateAccountGroup", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateAccountGroup(string ticket, TransitAccountGroup t_instance) {
            object[] results = this.Invoke("CreateOrUpdateAccountGroup", new object[] {
                        ticket,
                        t_instance});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountGroupAsync(string ticket, TransitAccountGroup t_instance) {
            this.CreateOrUpdateAccountGroupAsync(ticket, t_instance, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountGroupAsync(string ticket, TransitAccountGroup t_instance, object userState) {
            if ((this.CreateOrUpdateAccountGroupOperationCompleted == null)) {
                this.CreateOrUpdateAccountGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateAccountGroupOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateAccountGroup", new object[] {
                        ticket,
                        t_instance}, this.CreateOrUpdateAccountGroupOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateAccountGroupOperationCompleted(object arg) {
            if ((this.CreateOrUpdateAccountGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateAccountGroupCompleted(this, new CreateOrUpdateAccountGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroup GetAccountGroupById(string ticket, int id) {
            object[] results = this.Invoke("GetAccountGroupById", new object[] {
                        ticket,
                        id});
            return ((TransitAccountGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupByIdAsync(string ticket, int id) {
            this.GetAccountGroupByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupByIdAsync(string ticket, int id, object userState) {
            if ((this.GetAccountGroupByIdOperationCompleted == null)) {
                this.GetAccountGroupByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupById", new object[] {
                        ticket,
                        id}, this.GetAccountGroupByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupByIdOperationCompleted(object arg) {
            if ((this.GetAccountGroupByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupByIdCompleted(this, new GetAccountGroupByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroups", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroup[] GetAccountGroups(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountGroups", new object[] {
                        ticket,
                        options});
            return ((TransitAccountGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupsAsync(string ticket, ServiceQueryOptions options) {
            this.GetAccountGroupsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupsAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountGroupsOperationCompleted == null)) {
                this.GetAccountGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupsOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroups", new object[] {
                        ticket,
                        options}, this.GetAccountGroupsOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupsOperationCompleted(object arg) {
            if ((this.GetAccountGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupsCompleted(this, new GetAccountGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountGroupsCount(string ticket) {
            object[] results = this.Invoke("GetAccountGroupsCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupsCountAsync(string ticket) {
            this.GetAccountGroupsCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupsCountAsync(string ticket, object userState) {
            if ((this.GetAccountGroupsCountOperationCompleted == null)) {
                this.GetAccountGroupsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupsCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupsCount", new object[] {
                        ticket}, this.GetAccountGroupsCountOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupsCountOperationCompleted(object arg) {
            if ((this.GetAccountGroupsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupsCountCompleted(this, new GetAccountGroupsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPublicAccountGroups", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroup[] GetPublicAccountGroups(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetPublicAccountGroups", new object[] {
                        ticket,
                        options});
            return ((TransitAccountGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicAccountGroupsAsync(string ticket, ServiceQueryOptions options) {
            this.GetPublicAccountGroupsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPublicAccountGroupsAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetPublicAccountGroupsOperationCompleted == null)) {
                this.GetPublicAccountGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicAccountGroupsOperationCompleted);
            }
            this.InvokeAsync("GetPublicAccountGroups", new object[] {
                        ticket,
                        options}, this.GetPublicAccountGroupsOperationCompleted, userState);
        }
        
        private void OnGetPublicAccountGroupsOperationCompleted(object arg) {
            if ((this.GetPublicAccountGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicAccountGroupsCompleted(this, new GetPublicAccountGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPublicAccountGroupsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPublicAccountGroupsCount(string ticket) {
            object[] results = this.Invoke("GetPublicAccountGroupsCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicAccountGroupsCountAsync(string ticket) {
            this.GetPublicAccountGroupsCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetPublicAccountGroupsCountAsync(string ticket, object userState) {
            if ((this.GetPublicAccountGroupsCountOperationCompleted == null)) {
                this.GetPublicAccountGroupsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicAccountGroupsCountOperationCompleted);
            }
            this.InvokeAsync("GetPublicAccountGroupsCount", new object[] {
                        ticket}, this.GetPublicAccountGroupsCountOperationCompleted, userState);
        }
        
        private void OnGetPublicAccountGroupsCountOperationCompleted(object arg) {
            if ((this.GetPublicAccountGroupsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicAccountGroupsCountCompleted(this, new GetPublicAccountGroupsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteAccountGroup", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountGroup(string ticket, int id) {
            this.Invoke("DeleteAccountGroup", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteAccountGroupAsync(string ticket, int id) {
            this.DeleteAccountGroupAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteAccountGroupAsync(string ticket, int id, object userState) {
            if ((this.DeleteAccountGroupOperationCompleted == null)) {
                this.DeleteAccountGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountGroup", new object[] {
                        ticket,
                        id}, this.DeleteAccountGroupOperationCompleted, userState);
        }
        
        private void OnDeleteAccountGroupOperationCompleted(object arg) {
            if ((this.DeleteAccountGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateAccountGroupAccount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateAccountGroupAccount(string ticket, TransitAccountGroupAccount t_instance) {
            object[] results = this.Invoke("CreateOrUpdateAccountGroupAccount", new object[] {
                        ticket,
                        t_instance});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountGroupAccountAsync(string ticket, TransitAccountGroupAccount t_instance) {
            this.CreateOrUpdateAccountGroupAccountAsync(ticket, t_instance, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountGroupAccountAsync(string ticket, TransitAccountGroupAccount t_instance, object userState) {
            if ((this.CreateOrUpdateAccountGroupAccountOperationCompleted == null)) {
                this.CreateOrUpdateAccountGroupAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateAccountGroupAccountOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateAccountGroupAccount", new object[] {
                        ticket,
                        t_instance}, this.CreateOrUpdateAccountGroupAccountOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateAccountGroupAccountOperationCompleted(object arg) {
            if ((this.CreateOrUpdateAccountGroupAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateAccountGroupAccountCompleted(this, new CreateOrUpdateAccountGroupAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupAccount GetAccountGroupAccountById(string ticket, int id) {
            object[] results = this.Invoke("GetAccountGroupAccountById", new object[] {
                        ticket,
                        id});
            return ((TransitAccountGroupAccount)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountByIdAsync(string ticket, int id) {
            this.GetAccountGroupAccountByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountByIdAsync(string ticket, int id, object userState) {
            if ((this.GetAccountGroupAccountByIdOperationCompleted == null)) {
                this.GetAccountGroupAccountByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountById", new object[] {
                        ticket,
                        id}, this.GetAccountGroupAccountByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountByIdOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountByIdCompleted(this, new GetAccountGroupAccountByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccounts", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupAccount[] GetAccountGroupAccounts(string ticket, int groupid, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountGroupAccounts", new object[] {
                        ticket,
                        groupid,
                        options});
            return ((TransitAccountGroupAccount[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountsAsync(string ticket, int groupid, ServiceQueryOptions options) {
            this.GetAccountGroupAccountsAsync(ticket, groupid, options, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountsAsync(string ticket, int groupid, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountGroupAccountsOperationCompleted == null)) {
                this.GetAccountGroupAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountsOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccounts", new object[] {
                        ticket,
                        groupid,
                        options}, this.GetAccountGroupAccountsOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountsOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountsCompleted(this, new GetAccountGroupAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountGroupAccountsCount(string ticket, int groupid) {
            object[] results = this.Invoke("GetAccountGroupAccountsCount", new object[] {
                        ticket,
                        groupid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountsCountAsync(string ticket, int groupid) {
            this.GetAccountGroupAccountsCountAsync(ticket, groupid, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountsCountAsync(string ticket, int groupid, object userState) {
            if ((this.GetAccountGroupAccountsCountOperationCompleted == null)) {
                this.GetAccountGroupAccountsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountsCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountsCount", new object[] {
                        ticket,
                        groupid}, this.GetAccountGroupAccountsCountOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountsCountOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountsCountCompleted(this, new GetAccountGroupAccountsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountsByAccountId", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupAccount[] GetAccountGroupAccountsByAccountId(string ticket, int accountid, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountGroupAccountsByAccountId", new object[] {
                        ticket,
                        accountid,
                        options});
            return ((TransitAccountGroupAccount[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountsByAccountIdAsync(string ticket, int accountid, ServiceQueryOptions options) {
            this.GetAccountGroupAccountsByAccountIdAsync(ticket, accountid, options, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountsByAccountIdAsync(string ticket, int accountid, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountGroupAccountsByAccountIdOperationCompleted == null)) {
                this.GetAccountGroupAccountsByAccountIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountsByAccountIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountsByAccountId", new object[] {
                        ticket,
                        accountid,
                        options}, this.GetAccountGroupAccountsByAccountIdOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountsByAccountIdOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountsByAccountIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountsByAccountIdCompleted(this, new GetAccountGroupAccountsByAccountIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountsByAccountIdCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountGroupAccountsByAccountIdCount(string ticket, int accountid) {
            object[] results = this.Invoke("GetAccountGroupAccountsByAccountIdCount", new object[] {
                        ticket,
                        accountid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountsByAccountIdCountAsync(string ticket, int accountid) {
            this.GetAccountGroupAccountsByAccountIdCountAsync(ticket, accountid, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountsByAccountIdCountAsync(string ticket, int accountid, object userState) {
            if ((this.GetAccountGroupAccountsByAccountIdCountOperationCompleted == null)) {
                this.GetAccountGroupAccountsByAccountIdCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountsByAccountIdCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountsByAccountIdCount", new object[] {
                        ticket,
                        accountid}, this.GetAccountGroupAccountsByAccountIdCountOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountsByAccountIdCountOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountsByAccountIdCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountsByAccountIdCountCompleted(this, new GetAccountGroupAccountsByAccountIdCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPublicAccountGroupAccountsByAccountId", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupAccount[] GetPublicAccountGroupAccountsByAccountId(string ticket, int accountid, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetPublicAccountGroupAccountsByAccountId", new object[] {
                        ticket,
                        accountid,
                        options});
            return ((TransitAccountGroupAccount[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicAccountGroupAccountsByAccountIdAsync(string ticket, int accountid, ServiceQueryOptions options) {
            this.GetPublicAccountGroupAccountsByAccountIdAsync(ticket, accountid, options, null);
        }
        
        /// <remarks/>
        public void GetPublicAccountGroupAccountsByAccountIdAsync(string ticket, int accountid, ServiceQueryOptions options, object userState) {
            if ((this.GetPublicAccountGroupAccountsByAccountIdOperationCompleted == null)) {
                this.GetPublicAccountGroupAccountsByAccountIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicAccountGroupAccountsByAccountIdOperationCompleted);
            }
            this.InvokeAsync("GetPublicAccountGroupAccountsByAccountId", new object[] {
                        ticket,
                        accountid,
                        options}, this.GetPublicAccountGroupAccountsByAccountIdOperationCompleted, userState);
        }
        
        private void OnGetPublicAccountGroupAccountsByAccountIdOperationCompleted(object arg) {
            if ((this.GetPublicAccountGroupAccountsByAccountIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicAccountGroupAccountsByAccountIdCompleted(this, new GetPublicAccountGroupAccountsByAccountIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPublicAccountGroupAccountsByAccountIdCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPublicAccountGroupAccountsByAccountIdCount(string ticket, int accountid) {
            object[] results = this.Invoke("GetPublicAccountGroupAccountsByAccountIdCount", new object[] {
                        ticket,
                        accountid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPublicAccountGroupAccountsByAccountIdCountAsync(string ticket, int accountid) {
            this.GetPublicAccountGroupAccountsByAccountIdCountAsync(ticket, accountid, null);
        }
        
        /// <remarks/>
        public void GetPublicAccountGroupAccountsByAccountIdCountAsync(string ticket, int accountid, object userState) {
            if ((this.GetPublicAccountGroupAccountsByAccountIdCountOperationCompleted == null)) {
                this.GetPublicAccountGroupAccountsByAccountIdCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicAccountGroupAccountsByAccountIdCountOperationCompleted);
            }
            this.InvokeAsync("GetPublicAccountGroupAccountsByAccountIdCount", new object[] {
                        ticket,
                        accountid}, this.GetPublicAccountGroupAccountsByAccountIdCountOperationCompleted, userState);
        }
        
        private void OnGetPublicAccountGroupAccountsByAccountIdCountOperationCompleted(object arg) {
            if ((this.GetPublicAccountGroupAccountsByAccountIdCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublicAccountGroupAccountsByAccountIdCountCompleted(this, new GetPublicAccountGroupAccountsByAccountIdCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteAccountGroupAccount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountGroupAccount(string ticket, int id) {
            this.Invoke("DeleteAccountGroupAccount", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteAccountGroupAccountAsync(string ticket, int id) {
            this.DeleteAccountGroupAccountAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteAccountGroupAccountAsync(string ticket, int id, object userState) {
            if ((this.DeleteAccountGroupAccountOperationCompleted == null)) {
                this.DeleteAccountGroupAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountGroupAccountOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountGroupAccount", new object[] {
                        ticket,
                        id}, this.DeleteAccountGroupAccountOperationCompleted, userState);
        }
        
        private void OnDeleteAccountGroupAccountOperationCompleted(object arg) {
            if ((this.DeleteAccountGroupAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountGroupAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountByAccountGroupId", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupAccount GetAccountGroupAccountByAccountGroupId(string ticket, int accountid, int groupid) {
            object[] results = this.Invoke("GetAccountGroupAccountByAccountGroupId", new object[] {
                        ticket,
                        accountid,
                        groupid});
            return ((TransitAccountGroupAccount)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountByAccountGroupIdAsync(string ticket, int accountid, int groupid) {
            this.GetAccountGroupAccountByAccountGroupIdAsync(ticket, accountid, groupid, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountByAccountGroupIdAsync(string ticket, int accountid, int groupid, object userState) {
            if ((this.GetAccountGroupAccountByAccountGroupIdOperationCompleted == null)) {
                this.GetAccountGroupAccountByAccountGroupIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountByAccountGroupIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountByAccountGroupId", new object[] {
                        ticket,
                        accountid,
                        groupid}, this.GetAccountGroupAccountByAccountGroupIdOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountByAccountGroupIdOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountByAccountGroupIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountByAccountGroupIdCompleted(this, new GetAccountGroupAccountByAccountGroupIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateAccountGroupPicture", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateAccountGroupPicture(string ticket, TransitAccountGroupPicture t_instance) {
            object[] results = this.Invoke("CreateOrUpdateAccountGroupPicture", new object[] {
                        ticket,
                        t_instance});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountGroupPictureAsync(string ticket, TransitAccountGroupPicture t_instance) {
            this.CreateOrUpdateAccountGroupPictureAsync(ticket, t_instance, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountGroupPictureAsync(string ticket, TransitAccountGroupPicture t_instance, object userState) {
            if ((this.CreateOrUpdateAccountGroupPictureOperationCompleted == null)) {
                this.CreateOrUpdateAccountGroupPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateAccountGroupPictureOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateAccountGroupPicture", new object[] {
                        ticket,
                        t_instance}, this.CreateOrUpdateAccountGroupPictureOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateAccountGroupPictureOperationCompleted(object arg) {
            if ((this.CreateOrUpdateAccountGroupPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateAccountGroupPictureCompleted(this, new CreateOrUpdateAccountGroupPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupPictureById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupPicture GetAccountGroupPictureById(string ticket, int id) {
            object[] results = this.Invoke("GetAccountGroupPictureById", new object[] {
                        ticket,
                        id});
            return ((TransitAccountGroupPicture)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupPictureByIdAsync(string ticket, int id) {
            this.GetAccountGroupPictureByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupPictureByIdAsync(string ticket, int id, object userState) {
            if ((this.GetAccountGroupPictureByIdOperationCompleted == null)) {
                this.GetAccountGroupPictureByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupPictureByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupPictureById", new object[] {
                        ticket,
                        id}, this.GetAccountGroupPictureByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupPictureByIdOperationCompleted(object arg) {
            if ((this.GetAccountGroupPictureByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupPictureByIdCompleted(this, new GetAccountGroupPictureByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupPictures", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupPicture[] GetAccountGroupPictures(string ticket, int groupid, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountGroupPictures", new object[] {
                        ticket,
                        groupid,
                        options});
            return ((TransitAccountGroupPicture[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupPicturesAsync(string ticket, int groupid, ServiceQueryOptions options) {
            this.GetAccountGroupPicturesAsync(ticket, groupid, options, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupPicturesAsync(string ticket, int groupid, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountGroupPicturesOperationCompleted == null)) {
                this.GetAccountGroupPicturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupPicturesOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupPictures", new object[] {
                        ticket,
                        groupid,
                        options}, this.GetAccountGroupPicturesOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupPicturesOperationCompleted(object arg) {
            if ((this.GetAccountGroupPicturesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupPicturesCompleted(this, new GetAccountGroupPicturesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/MoveAccountGroupPicture", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveAccountGroupPicture(string ticket, int id, int disp) {
            this.Invoke("MoveAccountGroupPicture", new object[] {
                        ticket,
                        id,
                        disp});
        }
        
        /// <remarks/>
        public void MoveAccountGroupPictureAsync(string ticket, int id, int disp) {
            this.MoveAccountGroupPictureAsync(ticket, id, disp, null);
        }
        
        /// <remarks/>
        public void MoveAccountGroupPictureAsync(string ticket, int id, int disp, object userState) {
            if ((this.MoveAccountGroupPictureOperationCompleted == null)) {
                this.MoveAccountGroupPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveAccountGroupPictureOperationCompleted);
            }
            this.InvokeAsync("MoveAccountGroupPicture", new object[] {
                        ticket,
                        id,
                        disp}, this.MoveAccountGroupPictureOperationCompleted, userState);
        }
        
        private void OnMoveAccountGroupPictureOperationCompleted(object arg) {
            if ((this.MoveAccountGroupPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveAccountGroupPictureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupPicturesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountGroupPicturesCount(string ticket, int groupid) {
            object[] results = this.Invoke("GetAccountGroupPicturesCount", new object[] {
                        ticket,
                        groupid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupPicturesCountAsync(string ticket, int groupid) {
            this.GetAccountGroupPicturesCountAsync(ticket, groupid, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupPicturesCountAsync(string ticket, int groupid, object userState) {
            if ((this.GetAccountGroupPicturesCountOperationCompleted == null)) {
                this.GetAccountGroupPicturesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupPicturesCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupPicturesCount", new object[] {
                        ticket,
                        groupid}, this.GetAccountGroupPicturesCountOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupPicturesCountOperationCompleted(object arg) {
            if ((this.GetAccountGroupPicturesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupPicturesCountCompleted(this, new GetAccountGroupPicturesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteAccountGroupPicture", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountGroupPicture(string ticket, int id) {
            this.Invoke("DeleteAccountGroupPicture", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteAccountGroupPictureAsync(string ticket, int id) {
            this.DeleteAccountGroupPictureAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteAccountGroupPictureAsync(string ticket, int id, object userState) {
            if ((this.DeleteAccountGroupPictureOperationCompleted == null)) {
                this.DeleteAccountGroupPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountGroupPictureOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountGroupPicture", new object[] {
                        ticket,
                        id}, this.DeleteAccountGroupPictureOperationCompleted, userState);
        }
        
        private void OnDeleteAccountGroupPictureOperationCompleted(object arg) {
            if ((this.DeleteAccountGroupPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountGroupPictureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupPictureIfModifiedSinceById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupPicture GetAccountGroupPictureIfModifiedSinceById(string ticket, int id, System.DateTime ifModifiedSince) {
            object[] results = this.Invoke("GetAccountGroupPictureIfModifiedSinceById", new object[] {
                        ticket,
                        id,
                        ifModifiedSince});
            return ((TransitAccountGroupPicture)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupPictureIfModifiedSinceByIdAsync(string ticket, int id, System.DateTime ifModifiedSince) {
            this.GetAccountGroupPictureIfModifiedSinceByIdAsync(ticket, id, ifModifiedSince, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupPictureIfModifiedSinceByIdAsync(string ticket, int id, System.DateTime ifModifiedSince, object userState) {
            if ((this.GetAccountGroupPictureIfModifiedSinceByIdOperationCompleted == null)) {
                this.GetAccountGroupPictureIfModifiedSinceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupPictureIfModifiedSinceByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupPictureIfModifiedSinceById", new object[] {
                        ticket,
                        id,
                        ifModifiedSince}, this.GetAccountGroupPictureIfModifiedSinceByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupPictureIfModifiedSinceByIdOperationCompleted(object arg) {
            if ((this.GetAccountGroupPictureIfModifiedSinceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupPictureIfModifiedSinceByIdCompleted(this, new GetAccountGroupPictureIfModifiedSinceByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateAccountGroupPlace", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateAccountGroupPlace(string ticket, TransitAccountGroupPlace t_instance) {
            object[] results = this.Invoke("CreateOrUpdateAccountGroupPlace", new object[] {
                        ticket,
                        t_instance});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountGroupPlaceAsync(string ticket, TransitAccountGroupPlace t_instance) {
            this.CreateOrUpdateAccountGroupPlaceAsync(ticket, t_instance, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountGroupPlaceAsync(string ticket, TransitAccountGroupPlace t_instance, object userState) {
            if ((this.CreateOrUpdateAccountGroupPlaceOperationCompleted == null)) {
                this.CreateOrUpdateAccountGroupPlaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateAccountGroupPlaceOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateAccountGroupPlace", new object[] {
                        ticket,
                        t_instance}, this.CreateOrUpdateAccountGroupPlaceOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateAccountGroupPlaceOperationCompleted(object arg) {
            if ((this.CreateOrUpdateAccountGroupPlaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateAccountGroupPlaceCompleted(this, new CreateOrUpdateAccountGroupPlaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupPlaceById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupPlace GetAccountGroupPlaceById(string ticket, int id) {
            object[] results = this.Invoke("GetAccountGroupPlaceById", new object[] {
                        ticket,
                        id});
            return ((TransitAccountGroupPlace)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupPlaceByIdAsync(string ticket, int id) {
            this.GetAccountGroupPlaceByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupPlaceByIdAsync(string ticket, int id, object userState) {
            if ((this.GetAccountGroupPlaceByIdOperationCompleted == null)) {
                this.GetAccountGroupPlaceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupPlaceByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupPlaceById", new object[] {
                        ticket,
                        id}, this.GetAccountGroupPlaceByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupPlaceByIdOperationCompleted(object arg) {
            if ((this.GetAccountGroupPlaceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupPlaceByIdCompleted(this, new GetAccountGroupPlaceByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupPlaces", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupPlace[] GetAccountGroupPlaces(string ticket, int groupid, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountGroupPlaces", new object[] {
                        ticket,
                        groupid,
                        options});
            return ((TransitAccountGroupPlace[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupPlacesAsync(string ticket, int groupid, ServiceQueryOptions options) {
            this.GetAccountGroupPlacesAsync(ticket, groupid, options, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupPlacesAsync(string ticket, int groupid, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountGroupPlacesOperationCompleted == null)) {
                this.GetAccountGroupPlacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupPlacesOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupPlaces", new object[] {
                        ticket,
                        groupid,
                        options}, this.GetAccountGroupPlacesOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupPlacesOperationCompleted(object arg) {
            if ((this.GetAccountGroupPlacesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupPlacesCompleted(this, new GetAccountGroupPlacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupPlacesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountGroupPlacesCount(string ticket, int groupid) {
            object[] results = this.Invoke("GetAccountGroupPlacesCount", new object[] {
                        ticket,
                        groupid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupPlacesCountAsync(string ticket, int groupid) {
            this.GetAccountGroupPlacesCountAsync(ticket, groupid, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupPlacesCountAsync(string ticket, int groupid, object userState) {
            if ((this.GetAccountGroupPlacesCountOperationCompleted == null)) {
                this.GetAccountGroupPlacesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupPlacesCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupPlacesCount", new object[] {
                        ticket,
                        groupid}, this.GetAccountGroupPlacesCountOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupPlacesCountOperationCompleted(object arg) {
            if ((this.GetAccountGroupPlacesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupPlacesCountCompleted(this, new GetAccountGroupPlacesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteAccountGroupPlace", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountGroupPlace(string ticket, int id) {
            this.Invoke("DeleteAccountGroupPlace", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteAccountGroupPlaceAsync(string ticket, int id) {
            this.DeleteAccountGroupPlaceAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteAccountGroupPlaceAsync(string ticket, int id, object userState) {
            if ((this.DeleteAccountGroupPlaceOperationCompleted == null)) {
                this.DeleteAccountGroupPlaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountGroupPlaceOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountGroupPlace", new object[] {
                        ticket,
                        id}, this.DeleteAccountGroupPlaceOperationCompleted, userState);
        }
        
        private void OnDeleteAccountGroupPlaceOperationCompleted(object arg) {
            if ((this.DeleteAccountGroupPlaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountGroupPlaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateAccountGroupAccountInvitation", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateAccountGroupAccountInvitation(string ticket, TransitAccountGroupAccountInvitation t_instance) {
            object[] results = this.Invoke("CreateOrUpdateAccountGroupAccountInvitation", new object[] {
                        ticket,
                        t_instance});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountGroupAccountInvitationAsync(string ticket, TransitAccountGroupAccountInvitation t_instance) {
            this.CreateOrUpdateAccountGroupAccountInvitationAsync(ticket, t_instance, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountGroupAccountInvitationAsync(string ticket, TransitAccountGroupAccountInvitation t_instance, object userState) {
            if ((this.CreateOrUpdateAccountGroupAccountInvitationOperationCompleted == null)) {
                this.CreateOrUpdateAccountGroupAccountInvitationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateAccountGroupAccountInvitationOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateAccountGroupAccountInvitation", new object[] {
                        ticket,
                        t_instance}, this.CreateOrUpdateAccountGroupAccountInvitationOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateAccountGroupAccountInvitationOperationCompleted(object arg) {
            if ((this.CreateOrUpdateAccountGroupAccountInvitationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateAccountGroupAccountInvitationCompleted(this, new CreateOrUpdateAccountGroupAccountInvitationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountInvitationById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupAccountInvitation GetAccountGroupAccountInvitationById(string ticket, int id) {
            object[] results = this.Invoke("GetAccountGroupAccountInvitationById", new object[] {
                        ticket,
                        id});
            return ((TransitAccountGroupAccountInvitation)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountInvitationByIdAsync(string ticket, int id) {
            this.GetAccountGroupAccountInvitationByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountInvitationByIdAsync(string ticket, int id, object userState) {
            if ((this.GetAccountGroupAccountInvitationByIdOperationCompleted == null)) {
                this.GetAccountGroupAccountInvitationByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountInvitationByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountInvitationById", new object[] {
                        ticket,
                        id}, this.GetAccountGroupAccountInvitationByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountInvitationByIdOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountInvitationByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountInvitationByIdCompleted(this, new GetAccountGroupAccountInvitationByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountInvitations", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupAccountInvitation[] GetAccountGroupAccountInvitations(string ticket, int groupid, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountGroupAccountInvitations", new object[] {
                        ticket,
                        groupid,
                        options});
            return ((TransitAccountGroupAccountInvitation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountInvitationsAsync(string ticket, int groupid, ServiceQueryOptions options) {
            this.GetAccountGroupAccountInvitationsAsync(ticket, groupid, options, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountInvitationsAsync(string ticket, int groupid, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountGroupAccountInvitationsOperationCompleted == null)) {
                this.GetAccountGroupAccountInvitationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountInvitationsOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountInvitations", new object[] {
                        ticket,
                        groupid,
                        options}, this.GetAccountGroupAccountInvitationsOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountInvitationsOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountInvitationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountInvitationsCompleted(this, new GetAccountGroupAccountInvitationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountInvitationsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountGroupAccountInvitationsCount(string ticket, int groupid) {
            object[] results = this.Invoke("GetAccountGroupAccountInvitationsCount", new object[] {
                        ticket,
                        groupid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountInvitationsCountAsync(string ticket, int groupid) {
            this.GetAccountGroupAccountInvitationsCountAsync(ticket, groupid, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountInvitationsCountAsync(string ticket, int groupid, object userState) {
            if ((this.GetAccountGroupAccountInvitationsCountOperationCompleted == null)) {
                this.GetAccountGroupAccountInvitationsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountInvitationsCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountInvitationsCount", new object[] {
                        ticket,
                        groupid}, this.GetAccountGroupAccountInvitationsCountOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountInvitationsCountOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountInvitationsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountInvitationsCountCompleted(this, new GetAccountGroupAccountInvitationsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountInvitationsByAccountId", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupAccountInvitation[] GetAccountGroupAccountInvitationsByAccountId(string ticket, int accountid, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountGroupAccountInvitationsByAccountId", new object[] {
                        ticket,
                        accountid,
                        options});
            return ((TransitAccountGroupAccountInvitation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountInvitationsByAccountIdAsync(string ticket, int accountid, ServiceQueryOptions options) {
            this.GetAccountGroupAccountInvitationsByAccountIdAsync(ticket, accountid, options, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountInvitationsByAccountIdAsync(string ticket, int accountid, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountGroupAccountInvitationsByAccountIdOperationCompleted == null)) {
                this.GetAccountGroupAccountInvitationsByAccountIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountInvitationsByAccountIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountInvitationsByAccountId", new object[] {
                        ticket,
                        accountid,
                        options}, this.GetAccountGroupAccountInvitationsByAccountIdOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountInvitationsByAccountIdOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountInvitationsByAccountIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountInvitationsByAccountIdCompleted(this, new GetAccountGroupAccountInvitationsByAccountIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountInvitationsByAccountIdCoun" +
            "t", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountGroupAccountInvitationsByAccountIdCount(string ticket, int accountid) {
            object[] results = this.Invoke("GetAccountGroupAccountInvitationsByAccountIdCount", new object[] {
                        ticket,
                        accountid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountInvitationsByAccountIdCountAsync(string ticket, int accountid) {
            this.GetAccountGroupAccountInvitationsByAccountIdCountAsync(ticket, accountid, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountInvitationsByAccountIdCountAsync(string ticket, int accountid, object userState) {
            if ((this.GetAccountGroupAccountInvitationsByAccountIdCountOperationCompleted == null)) {
                this.GetAccountGroupAccountInvitationsByAccountIdCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountInvitationsByAccountIdCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountInvitationsByAccountIdCount", new object[] {
                        ticket,
                        accountid}, this.GetAccountGroupAccountInvitationsByAccountIdCountOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountInvitationsByAccountIdCountOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountInvitationsByAccountIdCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountInvitationsByAccountIdCountCompleted(this, new GetAccountGroupAccountInvitationsByAccountIdCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteAccountGroupAccountInvitation", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountGroupAccountInvitation(string ticket, int id) {
            this.Invoke("DeleteAccountGroupAccountInvitation", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteAccountGroupAccountInvitationAsync(string ticket, int id) {
            this.DeleteAccountGroupAccountInvitationAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteAccountGroupAccountInvitationAsync(string ticket, int id, object userState) {
            if ((this.DeleteAccountGroupAccountInvitationOperationCompleted == null)) {
                this.DeleteAccountGroupAccountInvitationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountGroupAccountInvitationOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountGroupAccountInvitation", new object[] {
                        ticket,
                        id}, this.DeleteAccountGroupAccountInvitationOperationCompleted, userState);
        }
        
        private void OnDeleteAccountGroupAccountInvitationOperationCompleted(object arg) {
            if ((this.DeleteAccountGroupAccountInvitationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountGroupAccountInvitationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/AcceptAccountGroupAccountInvitation", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AcceptAccountGroupAccountInvitation(string ticket, int id, string message) {
            this.Invoke("AcceptAccountGroupAccountInvitation", new object[] {
                        ticket,
                        id,
                        message});
        }
        
        /// <remarks/>
        public void AcceptAccountGroupAccountInvitationAsync(string ticket, int id, string message) {
            this.AcceptAccountGroupAccountInvitationAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void AcceptAccountGroupAccountInvitationAsync(string ticket, int id, string message, object userState) {
            if ((this.AcceptAccountGroupAccountInvitationOperationCompleted == null)) {
                this.AcceptAccountGroupAccountInvitationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptAccountGroupAccountInvitationOperationCompleted);
            }
            this.InvokeAsync("AcceptAccountGroupAccountInvitation", new object[] {
                        ticket,
                        id,
                        message}, this.AcceptAccountGroupAccountInvitationOperationCompleted, userState);
        }
        
        private void OnAcceptAccountGroupAccountInvitationOperationCompleted(object arg) {
            if ((this.AcceptAccountGroupAccountInvitationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptAccountGroupAccountInvitationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/RejectAccountGroupAccountInvitation", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RejectAccountGroupAccountInvitation(string ticket, int id, string message) {
            this.Invoke("RejectAccountGroupAccountInvitation", new object[] {
                        ticket,
                        id,
                        message});
        }
        
        /// <remarks/>
        public void RejectAccountGroupAccountInvitationAsync(string ticket, int id, string message) {
            this.RejectAccountGroupAccountInvitationAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void RejectAccountGroupAccountInvitationAsync(string ticket, int id, string message, object userState) {
            if ((this.RejectAccountGroupAccountInvitationOperationCompleted == null)) {
                this.RejectAccountGroupAccountInvitationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectAccountGroupAccountInvitationOperationCompleted);
            }
            this.InvokeAsync("RejectAccountGroupAccountInvitation", new object[] {
                        ticket,
                        id,
                        message}, this.RejectAccountGroupAccountInvitationOperationCompleted, userState);
        }
        
        private void OnRejectAccountGroupAccountInvitationOperationCompleted(object arg) {
            if ((this.RejectAccountGroupAccountInvitationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectAccountGroupAccountInvitationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateAccountGroupAccountRequest", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateAccountGroupAccountRequest(string ticket, TransitAccountGroupAccountRequest t_instance) {
            object[] results = this.Invoke("CreateOrUpdateAccountGroupAccountRequest", new object[] {
                        ticket,
                        t_instance});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountGroupAccountRequestAsync(string ticket, TransitAccountGroupAccountRequest t_instance) {
            this.CreateOrUpdateAccountGroupAccountRequestAsync(ticket, t_instance, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountGroupAccountRequestAsync(string ticket, TransitAccountGroupAccountRequest t_instance, object userState) {
            if ((this.CreateOrUpdateAccountGroupAccountRequestOperationCompleted == null)) {
                this.CreateOrUpdateAccountGroupAccountRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateAccountGroupAccountRequestOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateAccountGroupAccountRequest", new object[] {
                        ticket,
                        t_instance}, this.CreateOrUpdateAccountGroupAccountRequestOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateAccountGroupAccountRequestOperationCompleted(object arg) {
            if ((this.CreateOrUpdateAccountGroupAccountRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateAccountGroupAccountRequestCompleted(this, new CreateOrUpdateAccountGroupAccountRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountRequestById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupAccountRequest GetAccountGroupAccountRequestById(string ticket, int id) {
            object[] results = this.Invoke("GetAccountGroupAccountRequestById", new object[] {
                        ticket,
                        id});
            return ((TransitAccountGroupAccountRequest)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountRequestByIdAsync(string ticket, int id) {
            this.GetAccountGroupAccountRequestByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountRequestByIdAsync(string ticket, int id, object userState) {
            if ((this.GetAccountGroupAccountRequestByIdOperationCompleted == null)) {
                this.GetAccountGroupAccountRequestByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountRequestByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountRequestById", new object[] {
                        ticket,
                        id}, this.GetAccountGroupAccountRequestByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountRequestByIdOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountRequestByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountRequestByIdCompleted(this, new GetAccountGroupAccountRequestByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountRequests", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupAccountRequest[] GetAccountGroupAccountRequests(string ticket, int groupid, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountGroupAccountRequests", new object[] {
                        ticket,
                        groupid,
                        options});
            return ((TransitAccountGroupAccountRequest[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountRequestsAsync(string ticket, int groupid, ServiceQueryOptions options) {
            this.GetAccountGroupAccountRequestsAsync(ticket, groupid, options, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountRequestsAsync(string ticket, int groupid, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountGroupAccountRequestsOperationCompleted == null)) {
                this.GetAccountGroupAccountRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountRequestsOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountRequests", new object[] {
                        ticket,
                        groupid,
                        options}, this.GetAccountGroupAccountRequestsOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountRequestsOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountRequestsCompleted(this, new GetAccountGroupAccountRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountRequestsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountGroupAccountRequestsCount(string ticket, int groupid) {
            object[] results = this.Invoke("GetAccountGroupAccountRequestsCount", new object[] {
                        ticket,
                        groupid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountRequestsCountAsync(string ticket, int groupid) {
            this.GetAccountGroupAccountRequestsCountAsync(ticket, groupid, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountRequestsCountAsync(string ticket, int groupid, object userState) {
            if ((this.GetAccountGroupAccountRequestsCountOperationCompleted == null)) {
                this.GetAccountGroupAccountRequestsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountRequestsCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountRequestsCount", new object[] {
                        ticket,
                        groupid}, this.GetAccountGroupAccountRequestsCountOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountRequestsCountOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountRequestsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountRequestsCountCompleted(this, new GetAccountGroupAccountRequestsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountRequestsByAccountId", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountGroupAccountRequest[] GetAccountGroupAccountRequestsByAccountId(string ticket, int accountid, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountGroupAccountRequestsByAccountId", new object[] {
                        ticket,
                        accountid,
                        options});
            return ((TransitAccountGroupAccountRequest[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountRequestsByAccountIdAsync(string ticket, int accountid, ServiceQueryOptions options) {
            this.GetAccountGroupAccountRequestsByAccountIdAsync(ticket, accountid, options, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountRequestsByAccountIdAsync(string ticket, int accountid, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountGroupAccountRequestsByAccountIdOperationCompleted == null)) {
                this.GetAccountGroupAccountRequestsByAccountIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountRequestsByAccountIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountRequestsByAccountId", new object[] {
                        ticket,
                        accountid,
                        options}, this.GetAccountGroupAccountRequestsByAccountIdOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountRequestsByAccountIdOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountRequestsByAccountIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountRequestsByAccountIdCompleted(this, new GetAccountGroupAccountRequestsByAccountIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountGroupAccountRequestsByAccountIdCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountGroupAccountRequestsByAccountIdCount(string ticket, int accountid) {
            object[] results = this.Invoke("GetAccountGroupAccountRequestsByAccountIdCount", new object[] {
                        ticket,
                        accountid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountRequestsByAccountIdCountAsync(string ticket, int accountid) {
            this.GetAccountGroupAccountRequestsByAccountIdCountAsync(ticket, accountid, null);
        }
        
        /// <remarks/>
        public void GetAccountGroupAccountRequestsByAccountIdCountAsync(string ticket, int accountid, object userState) {
            if ((this.GetAccountGroupAccountRequestsByAccountIdCountOperationCompleted == null)) {
                this.GetAccountGroupAccountRequestsByAccountIdCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupAccountRequestsByAccountIdCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountGroupAccountRequestsByAccountIdCount", new object[] {
                        ticket,
                        accountid}, this.GetAccountGroupAccountRequestsByAccountIdCountOperationCompleted, userState);
        }
        
        private void OnGetAccountGroupAccountRequestsByAccountIdCountOperationCompleted(object arg) {
            if ((this.GetAccountGroupAccountRequestsByAccountIdCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountGroupAccountRequestsByAccountIdCountCompleted(this, new GetAccountGroupAccountRequestsByAccountIdCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteAccountGroupAccountRequest", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountGroupAccountRequest(string ticket, int id) {
            this.Invoke("DeleteAccountGroupAccountRequest", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteAccountGroupAccountRequestAsync(string ticket, int id) {
            this.DeleteAccountGroupAccountRequestAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteAccountGroupAccountRequestAsync(string ticket, int id, object userState) {
            if ((this.DeleteAccountGroupAccountRequestOperationCompleted == null)) {
                this.DeleteAccountGroupAccountRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountGroupAccountRequestOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountGroupAccountRequest", new object[] {
                        ticket,
                        id}, this.DeleteAccountGroupAccountRequestOperationCompleted, userState);
        }
        
        private void OnDeleteAccountGroupAccountRequestOperationCompleted(object arg) {
            if ((this.DeleteAccountGroupAccountRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountGroupAccountRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/AcceptAccountGroupAccountRequest", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AcceptAccountGroupAccountRequest(string ticket, int id, string message) {
            this.Invoke("AcceptAccountGroupAccountRequest", new object[] {
                        ticket,
                        id,
                        message});
        }
        
        /// <remarks/>
        public void AcceptAccountGroupAccountRequestAsync(string ticket, int id, string message) {
            this.AcceptAccountGroupAccountRequestAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void AcceptAccountGroupAccountRequestAsync(string ticket, int id, string message, object userState) {
            if ((this.AcceptAccountGroupAccountRequestOperationCompleted == null)) {
                this.AcceptAccountGroupAccountRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptAccountGroupAccountRequestOperationCompleted);
            }
            this.InvokeAsync("AcceptAccountGroupAccountRequest", new object[] {
                        ticket,
                        id,
                        message}, this.AcceptAccountGroupAccountRequestOperationCompleted, userState);
        }
        
        private void OnAcceptAccountGroupAccountRequestOperationCompleted(object arg) {
            if ((this.AcceptAccountGroupAccountRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptAccountGroupAccountRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/RejectAccountGroupAccountRequest", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RejectAccountGroupAccountRequest(string ticket, int id, string message) {
            this.Invoke("RejectAccountGroupAccountRequest", new object[] {
                        ticket,
                        id,
                        message});
        }
        
        /// <remarks/>
        public void RejectAccountGroupAccountRequestAsync(string ticket, int id, string message) {
            this.RejectAccountGroupAccountRequestAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void RejectAccountGroupAccountRequestAsync(string ticket, int id, string message, object userState) {
            if ((this.RejectAccountGroupAccountRequestOperationCompleted == null)) {
                this.RejectAccountGroupAccountRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectAccountGroupAccountRequestOperationCompleted);
            }
            this.InvokeAsync("RejectAccountGroupAccountRequest", new object[] {
                        ticket,
                        id,
                        message}, this.RejectAccountGroupAccountRequestOperationCompleted, userState);
        }
        
        private void OnRejectAccountGroupAccountRequestOperationCompleted(object arg) {
            if ((this.RejectAccountGroupAccountRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectAccountGroupAccountRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountGroup : TransitServiceOfAccountGroup {
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private bool isPrivateField;
        
        private int pictureIdField;
        
        private int accountBlogIdField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrivate {
            get {
                return this.isPrivateField;
            }
            set {
                this.isPrivateField = value;
            }
        }
        
        /// <remarks/>
        public int PictureId {
            get {
                return this.pictureIdField;
            }
            set {
                this.pictureIdField = value;
            }
        }
        
        /// <remarks/>
        public int AccountBlogId {
            get {
                return this.accountBlogIdField;
            }
            set {
                this.accountBlogIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountGroup))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfAccountGroup {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountGroupAccountRequest))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfAccountGroupAccountRequest {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountGroupAccountRequest : TransitServiceOfAccountGroupAccountRequest {
        
        private int accountIdField;
        
        private int accountPictureIdField;
        
        private string accountNameField;
        
        private int accountGroupIdField;
        
        private string accountGroupNameField;
        
        private System.DateTime submittedField;
        
        private string messageField;
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public int AccountPictureId {
            get {
                return this.accountPictureIdField;
            }
            set {
                this.accountPictureIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public int AccountGroupId {
            get {
                return this.accountGroupIdField;
            }
            set {
                this.accountGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountGroupName {
            get {
                return this.accountGroupNameField;
            }
            set {
                this.accountGroupNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Submitted {
            get {
                return this.submittedField;
            }
            set {
                this.submittedField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountGroupAccountInvitation))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfAccountGroupAccountInvitation {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountGroupAccountInvitation : TransitServiceOfAccountGroupAccountInvitation {
        
        private int accountIdField;
        
        private int accountPictureIdField;
        
        private string accountNameField;
        
        private int requesterIdField;
        
        private bool requesterIsAdministratorField;
        
        private int requesterPictureIdField;
        
        private string requesterNameField;
        
        private int accountGroupIdField;
        
        private int accountGroupPictureIdField;
        
        private bool accountGroupIsPrivateField;
        
        private string accountGroupNameField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private string messageField;
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public int AccountPictureId {
            get {
                return this.accountPictureIdField;
            }
            set {
                this.accountPictureIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public int RequesterId {
            get {
                return this.requesterIdField;
            }
            set {
                this.requesterIdField = value;
            }
        }
        
        /// <remarks/>
        public bool RequesterIsAdministrator {
            get {
                return this.requesterIsAdministratorField;
            }
            set {
                this.requesterIsAdministratorField = value;
            }
        }
        
        /// <remarks/>
        public int RequesterPictureId {
            get {
                return this.requesterPictureIdField;
            }
            set {
                this.requesterPictureIdField = value;
            }
        }
        
        /// <remarks/>
        public string RequesterName {
            get {
                return this.requesterNameField;
            }
            set {
                this.requesterNameField = value;
            }
        }
        
        /// <remarks/>
        public int AccountGroupId {
            get {
                return this.accountGroupIdField;
            }
            set {
                this.accountGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public int AccountGroupPictureId {
            get {
                return this.accountGroupPictureIdField;
            }
            set {
                this.accountGroupPictureIdField = value;
            }
        }
        
        /// <remarks/>
        public bool AccountGroupIsPrivate {
            get {
                return this.accountGroupIsPrivateField;
            }
            set {
                this.accountGroupIsPrivateField = value;
            }
        }
        
        /// <remarks/>
        public string AccountGroupName {
            get {
                return this.accountGroupNameField;
            }
            set {
                this.accountGroupNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountGroupPlace))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfAccountGroupPlace {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountGroupPlace : TransitServiceOfAccountGroupPlace {
        
        private System.DateTime createdField;
        
        private int accountGroupIdField;
        
        private int placeIdField;
        
        private string accountGroupNameField;
        
        private int accountGroupPictureIdField;
        
        private string placeNameField;
        
        private int placePictureIdField;
        
        private string placeCityField;
        
        private string placeCountryField;
        
        private string placeStateField;
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public int AccountGroupId {
            get {
                return this.accountGroupIdField;
            }
            set {
                this.accountGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public int PlaceId {
            get {
                return this.placeIdField;
            }
            set {
                this.placeIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountGroupName {
            get {
                return this.accountGroupNameField;
            }
            set {
                this.accountGroupNameField = value;
            }
        }
        
        /// <remarks/>
        public int AccountGroupPictureId {
            get {
                return this.accountGroupPictureIdField;
            }
            set {
                this.accountGroupPictureIdField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceName {
            get {
                return this.placeNameField;
            }
            set {
                this.placeNameField = value;
            }
        }
        
        /// <remarks/>
        public int PlacePictureId {
            get {
                return this.placePictureIdField;
            }
            set {
                this.placePictureIdField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceCity {
            get {
                return this.placeCityField;
            }
            set {
                this.placeCityField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceCountry {
            get {
                return this.placeCountryField;
            }
            set {
                this.placeCountryField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceState {
            get {
                return this.placeStateField;
            }
            set {
                this.placeStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitCounter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfCounter {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitCounter : TransitServiceOfCounter {
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private long totalField;
        
        private string uriField;
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public long Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public string Uri {
            get {
                return this.uriField;
            }
            set {
                this.uriField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitArrayElementServiceOfAccountGroupPicture))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountGroupPicture))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfAccountGroupPicture {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountGroupPicture))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitArrayElementServiceOfAccountGroupPicture : TransitServiceOfAccountGroupPicture {
        
        private int countField;
        
        private int nextIndexField;
        
        private int prevIndexField;
        
        private int indexField;
        
        private int nextIdField;
        
        private int prevIdField;
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        public int NextIndex {
            get {
                return this.nextIndexField;
            }
            set {
                this.nextIndexField = value;
            }
        }
        
        /// <remarks/>
        public int PrevIndex {
            get {
                return this.prevIndexField;
            }
            set {
                this.prevIndexField = value;
            }
        }
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public int NextId {
            get {
                return this.nextIdField;
            }
            set {
                this.nextIdField = value;
            }
        }
        
        /// <remarks/>
        public int PrevId {
            get {
                return this.prevIdField;
            }
            set {
                this.prevIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountGroupPicture : TransitArrayElementServiceOfAccountGroupPicture {
        
        private byte[] thumbnailField;
        
        private byte[] bitmapField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private int accountGroupIdField;
        
        private int commentCountField;
        
        private TransitCounter counterField;
        
        private int accountIdField;
        
        private string accountNameField;
        
        private int positionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Thumbnail {
            get {
                return this.thumbnailField;
            }
            set {
                this.thumbnailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Bitmap {
            get {
                return this.bitmapField;
            }
            set {
                this.bitmapField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public int AccountGroupId {
            get {
                return this.accountGroupIdField;
            }
            set {
                this.accountGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public int CommentCount {
            get {
                return this.commentCountField;
            }
            set {
                this.commentCountField = value;
            }
        }
        
        /// <remarks/>
        public TransitCounter Counter {
            get {
                return this.counterField;
            }
            set {
                this.counterField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public int Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountGroupAccount))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class TransitServiceOfAccountGroupAccount {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountGroupAccount : TransitServiceOfAccountGroupAccount {
        
        private int accountIdField;
        
        private int accountPictureIdField;
        
        private string accountNameField;
        
        private int accountGroupIdField;
        
        private string accountGroupNameField;
        
        private int accountGroupPictureIdField;
        
        private bool isAdministratorField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public int AccountPictureId {
            get {
                return this.accountPictureIdField;
            }
            set {
                this.accountPictureIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public int AccountGroupId {
            get {
                return this.accountGroupIdField;
            }
            set {
                this.accountGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountGroupName {
            get {
                return this.accountGroupNameField;
            }
            set {
                this.accountGroupNameField = value;
            }
        }
        
        /// <remarks/>
        public int AccountGroupPictureId {
            get {
                return this.accountGroupPictureIdField;
            }
            set {
                this.accountGroupPictureIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAdministrator {
            get {
                return this.isAdministratorField;
            }
            set {
                this.isAdministratorField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class ServiceQueryOptions {
        
        private int pageSizeField;
        
        private int pageNumberField;
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int PageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateOrUpdateAccountGroupCompletedEventHandler(object sender, CreateOrUpdateAccountGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateAccountGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateAccountGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupByIdCompletedEventHandler(object sender, GetAccountGroupByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupsCompletedEventHandler(object sender, GetAccountGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupsCountCompletedEventHandler(object sender, GetAccountGroupsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetPublicAccountGroupsCompletedEventHandler(object sender, GetPublicAccountGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicAccountGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicAccountGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetPublicAccountGroupsCountCompletedEventHandler(object sender, GetPublicAccountGroupsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicAccountGroupsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicAccountGroupsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteAccountGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateOrUpdateAccountGroupAccountCompletedEventHandler(object sender, CreateOrUpdateAccountGroupAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateAccountGroupAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateAccountGroupAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountByIdCompletedEventHandler(object sender, GetAccountGroupAccountByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupAccount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountsCompletedEventHandler(object sender, GetAccountGroupAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupAccount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupAccount[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountsCountCompletedEventHandler(object sender, GetAccountGroupAccountsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountsByAccountIdCompletedEventHandler(object sender, GetAccountGroupAccountsByAccountIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountsByAccountIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountsByAccountIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupAccount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupAccount[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountsByAccountIdCountCompletedEventHandler(object sender, GetAccountGroupAccountsByAccountIdCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountsByAccountIdCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountsByAccountIdCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetPublicAccountGroupAccountsByAccountIdCompletedEventHandler(object sender, GetPublicAccountGroupAccountsByAccountIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicAccountGroupAccountsByAccountIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicAccountGroupAccountsByAccountIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupAccount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupAccount[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetPublicAccountGroupAccountsByAccountIdCountCompletedEventHandler(object sender, GetPublicAccountGroupAccountsByAccountIdCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublicAccountGroupAccountsByAccountIdCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublicAccountGroupAccountsByAccountIdCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteAccountGroupAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountByAccountGroupIdCompletedEventHandler(object sender, GetAccountGroupAccountByAccountGroupIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountByAccountGroupIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountByAccountGroupIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupAccount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateOrUpdateAccountGroupPictureCompletedEventHandler(object sender, CreateOrUpdateAccountGroupPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateAccountGroupPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateAccountGroupPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupPictureByIdCompletedEventHandler(object sender, GetAccountGroupPictureByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupPictureByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupPictureByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupPicture Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupPicture)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupPicturesCompletedEventHandler(object sender, GetAccountGroupPicturesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupPicturesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupPicturesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupPicture[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupPicture[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void MoveAccountGroupPictureCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupPicturesCountCompletedEventHandler(object sender, GetAccountGroupPicturesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupPicturesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupPicturesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteAccountGroupPictureCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupPictureIfModifiedSinceByIdCompletedEventHandler(object sender, GetAccountGroupPictureIfModifiedSinceByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupPictureIfModifiedSinceByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupPictureIfModifiedSinceByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupPicture Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupPicture)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateOrUpdateAccountGroupPlaceCompletedEventHandler(object sender, CreateOrUpdateAccountGroupPlaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateAccountGroupPlaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateAccountGroupPlaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupPlaceByIdCompletedEventHandler(object sender, GetAccountGroupPlaceByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupPlaceByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupPlaceByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupPlace Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupPlace)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupPlacesCompletedEventHandler(object sender, GetAccountGroupPlacesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupPlacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupPlacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupPlace[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupPlace[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupPlacesCountCompletedEventHandler(object sender, GetAccountGroupPlacesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupPlacesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupPlacesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteAccountGroupPlaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateOrUpdateAccountGroupAccountInvitationCompletedEventHandler(object sender, CreateOrUpdateAccountGroupAccountInvitationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateAccountGroupAccountInvitationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateAccountGroupAccountInvitationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountInvitationByIdCompletedEventHandler(object sender, GetAccountGroupAccountInvitationByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountInvitationByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountInvitationByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupAccountInvitation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupAccountInvitation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountInvitationsCompletedEventHandler(object sender, GetAccountGroupAccountInvitationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountInvitationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountInvitationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupAccountInvitation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupAccountInvitation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountInvitationsCountCompletedEventHandler(object sender, GetAccountGroupAccountInvitationsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountInvitationsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountInvitationsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountInvitationsByAccountIdCompletedEventHandler(object sender, GetAccountGroupAccountInvitationsByAccountIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountInvitationsByAccountIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountInvitationsByAccountIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupAccountInvitation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupAccountInvitation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountInvitationsByAccountIdCountCompletedEventHandler(object sender, GetAccountGroupAccountInvitationsByAccountIdCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountInvitationsByAccountIdCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountInvitationsByAccountIdCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteAccountGroupAccountInvitationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AcceptAccountGroupAccountInvitationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void RejectAccountGroupAccountInvitationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreateOrUpdateAccountGroupAccountRequestCompletedEventHandler(object sender, CreateOrUpdateAccountGroupAccountRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateAccountGroupAccountRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateAccountGroupAccountRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountRequestByIdCompletedEventHandler(object sender, GetAccountGroupAccountRequestByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountRequestByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountRequestByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupAccountRequest Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupAccountRequest)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountRequestsCompletedEventHandler(object sender, GetAccountGroupAccountRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupAccountRequest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupAccountRequest[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountRequestsCountCompletedEventHandler(object sender, GetAccountGroupAccountRequestsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountRequestsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountRequestsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountRequestsByAccountIdCompletedEventHandler(object sender, GetAccountGroupAccountRequestsByAccountIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountRequestsByAccountIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountRequestsByAccountIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountGroupAccountRequest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountGroupAccountRequest[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAccountGroupAccountRequestsByAccountIdCountCompletedEventHandler(object sender, GetAccountGroupAccountRequestsByAccountIdCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountGroupAccountRequestsByAccountIdCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountGroupAccountRequestsByAccountIdCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteAccountGroupAccountRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AcceptAccountGroupAccountRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void RejectAccountGroupAccountRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591