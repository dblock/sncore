//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace SnCore.Web.Tests.SnCore.WebServices {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebPlaceServiceSoap", Namespace="http://www.vestris.com/sncore/ns/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MemberInfo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitService))]
    public partial class WebPlaceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePlaceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceTypeByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePlaceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePlaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePlaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindPlaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePlacePictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacePictureByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacePicturesCountByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacePicturesByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePlacePictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacePictureWithBitmapByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacePictureWithBitmapByIdIfModifiedSinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacePictureWithThumbnailByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacePictureWithThumbnailByIdIfModifiedSinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateAccountPlaceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlaceTypeByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlaceTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountPlaceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateAccountPlaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlaceByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlacesCountByPlaceIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlacesByPlaceIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlacesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlacesCountByAccountIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlacesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlacesByAccountIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountPlaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateAccountPlaceRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlaceRequestByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlaceRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlaceRequestsByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountPlaceRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptAccountPlaceRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectAccountPlaceRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewPlacesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateAccountPlaceFavoriteOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAccountPlaceFavoriteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlaceFavoriteByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlaceFavoritesCountByPlaceIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlaceFavoritesByPlaceIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlaceFavoritesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlaceFavoritesCountByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlaceFavoritesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountPlaceFavoritesByAccountIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAccountPlaceFavoriteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchPlacesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchPlacesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePlaceNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceNameByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePlaceNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePlacePropertyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacePropertyGroupByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacePropertyGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePlacePropertyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePlacePropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacePropertyByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacePropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePlacePropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistinctPropertyValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacesByPropertyValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacesByPropertyValueCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacePropertyValueByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePlacePropertyValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacePropertyValueByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlacePropertyValuesByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPlacePropertyValuesByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePlacePropertyValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePlaceAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceAttributeByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceAttributesCountByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceAttributesByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePlaceAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFavoritePlacesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFavoritePlacesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePlaceQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceQueueByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceQueueByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrCreatePlaceQueueByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceQueuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePlaceQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePlaceQueueItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceQueueItemByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceQueueItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceQueueItemsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePlaceQueueItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFriendsPlaceQueueItemsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFriendsPlaceQueueItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlaceNeighborhoodsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebPlaceService() {
            this.Url = global::SnCore.Web.Tests.Properties.Settings.Default.SnCore_Web_Tests_SnCore_WebServices_WebPlaceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateOrUpdatePlaceTypeCompletedEventHandler CreateOrUpdatePlaceTypeCompleted;
        
        /// <remarks/>
        public event GetPlaceTypeByIdCompletedEventHandler GetPlaceTypeByIdCompleted;
        
        /// <remarks/>
        public event GetPlaceTypesCompletedEventHandler GetPlaceTypesCompleted;
        
        /// <remarks/>
        public event DeletePlaceTypeCompletedEventHandler DeletePlaceTypeCompleted;
        
        /// <remarks/>
        public event CreateOrUpdatePlaceCompletedEventHandler CreateOrUpdatePlaceCompleted;
        
        /// <remarks/>
        public event GetPlaceByIdCompletedEventHandler GetPlaceByIdCompleted;
        
        /// <remarks/>
        public event GetPlacesCountCompletedEventHandler GetPlacesCountCompleted;
        
        /// <remarks/>
        public event GetPlacesCompletedEventHandler GetPlacesCompleted;
        
        /// <remarks/>
        public event DeletePlaceCompletedEventHandler DeletePlaceCompleted;
        
        /// <remarks/>
        public event FindPlaceCompletedEventHandler FindPlaceCompleted;
        
        /// <remarks/>
        public event CreateOrUpdatePlacePictureCompletedEventHandler CreateOrUpdatePlacePictureCompleted;
        
        /// <remarks/>
        public event GetPlacePictureByIdCompletedEventHandler GetPlacePictureByIdCompleted;
        
        /// <remarks/>
        public event GetPlacePicturesCountByIdCompletedEventHandler GetPlacePicturesCountByIdCompleted;
        
        /// <remarks/>
        public event GetPlacePicturesByIdCompletedEventHandler GetPlacePicturesByIdCompleted;
        
        /// <remarks/>
        public event DeletePlacePictureCompletedEventHandler DeletePlacePictureCompleted;
        
        /// <remarks/>
        public event GetPlacePictureWithBitmapByIdCompletedEventHandler GetPlacePictureWithBitmapByIdCompleted;
        
        /// <remarks/>
        public event GetPlacePictureWithBitmapByIdIfModifiedSinceCompletedEventHandler GetPlacePictureWithBitmapByIdIfModifiedSinceCompleted;
        
        /// <remarks/>
        public event GetPlacePictureWithThumbnailByIdCompletedEventHandler GetPlacePictureWithThumbnailByIdCompleted;
        
        /// <remarks/>
        public event GetPlacePictureWithThumbnailByIdIfModifiedSinceCompletedEventHandler GetPlacePictureWithThumbnailByIdIfModifiedSinceCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateAccountPlaceTypeCompletedEventHandler CreateOrUpdateAccountPlaceTypeCompleted;
        
        /// <remarks/>
        public event GetAccountPlaceTypeByIdCompletedEventHandler GetAccountPlaceTypeByIdCompleted;
        
        /// <remarks/>
        public event GetAccountPlaceTypesCompletedEventHandler GetAccountPlaceTypesCompleted;
        
        /// <remarks/>
        public event DeleteAccountPlaceTypeCompletedEventHandler DeleteAccountPlaceTypeCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateAccountPlaceCompletedEventHandler CreateOrUpdateAccountPlaceCompleted;
        
        /// <remarks/>
        public event GetAccountPlaceByIdCompletedEventHandler GetAccountPlaceByIdCompleted;
        
        /// <remarks/>
        public event GetAccountPlacesCountByPlaceIdCompletedEventHandler GetAccountPlacesCountByPlaceIdCompleted;
        
        /// <remarks/>
        public event GetAccountPlacesByPlaceIdCompletedEventHandler GetAccountPlacesByPlaceIdCompleted;
        
        /// <remarks/>
        public event GetAccountPlacesCountCompletedEventHandler GetAccountPlacesCountCompleted;
        
        /// <remarks/>
        public event GetAccountPlacesCountByAccountIdCompletedEventHandler GetAccountPlacesCountByAccountIdCompleted;
        
        /// <remarks/>
        public event GetAccountPlacesCompletedEventHandler GetAccountPlacesCompleted;
        
        /// <remarks/>
        public event GetAccountPlacesByAccountIdCompletedEventHandler GetAccountPlacesByAccountIdCompleted;
        
        /// <remarks/>
        public event DeleteAccountPlaceCompletedEventHandler DeleteAccountPlaceCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateAccountPlaceRequestCompletedEventHandler CreateOrUpdateAccountPlaceRequestCompleted;
        
        /// <remarks/>
        public event GetAccountPlaceRequestByIdCompletedEventHandler GetAccountPlaceRequestByIdCompleted;
        
        /// <remarks/>
        public event GetAccountPlaceRequestsCompletedEventHandler GetAccountPlaceRequestsCompleted;
        
        /// <remarks/>
        public event GetAccountPlaceRequestsByIdCompletedEventHandler GetAccountPlaceRequestsByIdCompleted;
        
        /// <remarks/>
        public event DeleteAccountPlaceRequestCompletedEventHandler DeleteAccountPlaceRequestCompleted;
        
        /// <remarks/>
        public event AcceptAccountPlaceRequestCompletedEventHandler AcceptAccountPlaceRequestCompleted;
        
        /// <remarks/>
        public event RejectAccountPlaceRequestCompletedEventHandler RejectAccountPlaceRequestCompleted;
        
        /// <remarks/>
        public event GetNewPlacesCompletedEventHandler GetNewPlacesCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateAccountPlaceFavoriteCompletedEventHandler CreateOrUpdateAccountPlaceFavoriteCompleted;
        
        /// <remarks/>
        public event IsAccountPlaceFavoriteCompletedEventHandler IsAccountPlaceFavoriteCompleted;
        
        /// <remarks/>
        public event GetAccountPlaceFavoriteByIdCompletedEventHandler GetAccountPlaceFavoriteByIdCompleted;
        
        /// <remarks/>
        public event GetAccountPlaceFavoritesCountByPlaceIdCompletedEventHandler GetAccountPlaceFavoritesCountByPlaceIdCompleted;
        
        /// <remarks/>
        public event GetAccountPlaceFavoritesByPlaceIdCompletedEventHandler GetAccountPlaceFavoritesByPlaceIdCompleted;
        
        /// <remarks/>
        public event GetAccountPlaceFavoritesCountCompletedEventHandler GetAccountPlaceFavoritesCountCompleted;
        
        /// <remarks/>
        public event GetAccountPlaceFavoritesCountByIdCompletedEventHandler GetAccountPlaceFavoritesCountByIdCompleted;
        
        /// <remarks/>
        public event GetAccountPlaceFavoritesCompletedEventHandler GetAccountPlaceFavoritesCompleted;
        
        /// <remarks/>
        public event GetAccountPlaceFavoritesByAccountIdCompletedEventHandler GetAccountPlaceFavoritesByAccountIdCompleted;
        
        /// <remarks/>
        public event DeleteAccountPlaceFavoriteCompletedEventHandler DeleteAccountPlaceFavoriteCompleted;
        
        /// <remarks/>
        public event SearchPlacesCompletedEventHandler SearchPlacesCompleted;
        
        /// <remarks/>
        public event SearchPlacesCountCompletedEventHandler SearchPlacesCountCompleted;
        
        /// <remarks/>
        public event CreateOrUpdatePlaceNameCompletedEventHandler CreateOrUpdatePlaceNameCompleted;
        
        /// <remarks/>
        public event GetPlaceNameByIdCompletedEventHandler GetPlaceNameByIdCompleted;
        
        /// <remarks/>
        public event GetPlaceNamesCompletedEventHandler GetPlaceNamesCompleted;
        
        /// <remarks/>
        public event DeletePlaceNameCompletedEventHandler DeletePlaceNameCompleted;
        
        /// <remarks/>
        public event CreateOrUpdatePlacePropertyGroupCompletedEventHandler CreateOrUpdatePlacePropertyGroupCompleted;
        
        /// <remarks/>
        public event GetPlacePropertyGroupByIdCompletedEventHandler GetPlacePropertyGroupByIdCompleted;
        
        /// <remarks/>
        public event GetPlacePropertyGroupsCompletedEventHandler GetPlacePropertyGroupsCompleted;
        
        /// <remarks/>
        public event DeletePlacePropertyGroupCompletedEventHandler DeletePlacePropertyGroupCompleted;
        
        /// <remarks/>
        public event CreateOrUpdatePlacePropertyCompletedEventHandler CreateOrUpdatePlacePropertyCompleted;
        
        /// <remarks/>
        public event GetPlacePropertyByIdCompletedEventHandler GetPlacePropertyByIdCompleted;
        
        /// <remarks/>
        public event GetPlacePropertiesCompletedEventHandler GetPlacePropertiesCompleted;
        
        /// <remarks/>
        public event DeletePlacePropertyCompletedEventHandler DeletePlacePropertyCompleted;
        
        /// <remarks/>
        public event GetDistinctPropertyValuesCompletedEventHandler GetDistinctPropertyValuesCompleted;
        
        /// <remarks/>
        public event GetPlacesByPropertyValueCompletedEventHandler GetPlacesByPropertyValueCompleted;
        
        /// <remarks/>
        public event GetPlacesByPropertyValueCountCompletedEventHandler GetPlacesByPropertyValueCountCompleted;
        
        /// <remarks/>
        public event GetPlacePropertyValueByNameCompletedEventHandler GetPlacePropertyValueByNameCompleted;
        
        /// <remarks/>
        public event CreateOrUpdatePlacePropertyValueCompletedEventHandler CreateOrUpdatePlacePropertyValueCompleted;
        
        /// <remarks/>
        public event GetPlacePropertyValueByIdCompletedEventHandler GetPlacePropertyValueByIdCompleted;
        
        /// <remarks/>
        public event GetPlacePropertyValuesByIdCompletedEventHandler GetPlacePropertyValuesByIdCompleted;
        
        /// <remarks/>
        public event GetAllPlacePropertyValuesByIdCompletedEventHandler GetAllPlacePropertyValuesByIdCompleted;
        
        /// <remarks/>
        public event DeletePlacePropertyValueCompletedEventHandler DeletePlacePropertyValueCompleted;
        
        /// <remarks/>
        public event CreateOrUpdatePlaceAttributeCompletedEventHandler CreateOrUpdatePlaceAttributeCompleted;
        
        /// <remarks/>
        public event GetPlaceAttributeByIdCompletedEventHandler GetPlaceAttributeByIdCompleted;
        
        /// <remarks/>
        public event GetPlaceAttributesCountByIdCompletedEventHandler GetPlaceAttributesCountByIdCompleted;
        
        /// <remarks/>
        public event GetPlaceAttributesByIdCompletedEventHandler GetPlaceAttributesByIdCompleted;
        
        /// <remarks/>
        public event DeletePlaceAttributeCompletedEventHandler DeletePlaceAttributeCompleted;
        
        /// <remarks/>
        public event GetFavoritePlacesCountCompletedEventHandler GetFavoritePlacesCountCompleted;
        
        /// <remarks/>
        public event GetFavoritePlacesCompletedEventHandler GetFavoritePlacesCompleted;
        
        /// <remarks/>
        public event CreateOrUpdatePlaceQueueCompletedEventHandler CreateOrUpdatePlaceQueueCompleted;
        
        /// <remarks/>
        public event GetPlaceQueueByIdCompletedEventHandler GetPlaceQueueByIdCompleted;
        
        /// <remarks/>
        public event GetPlaceQueueByNameCompletedEventHandler GetPlaceQueueByNameCompleted;
        
        /// <remarks/>
        public event GetOrCreatePlaceQueueByNameCompletedEventHandler GetOrCreatePlaceQueueByNameCompleted;
        
        /// <remarks/>
        public event GetPlaceQueuesCompletedEventHandler GetPlaceQueuesCompleted;
        
        /// <remarks/>
        public event DeletePlaceQueueCompletedEventHandler DeletePlaceQueueCompleted;
        
        /// <remarks/>
        public event CreateOrUpdatePlaceQueueItemCompletedEventHandler CreateOrUpdatePlaceQueueItemCompleted;
        
        /// <remarks/>
        public event GetPlaceQueueItemByIdCompletedEventHandler GetPlaceQueueItemByIdCompleted;
        
        /// <remarks/>
        public event GetPlaceQueueItemsCompletedEventHandler GetPlaceQueueItemsCompleted;
        
        /// <remarks/>
        public event GetPlaceQueueItemsCountCompletedEventHandler GetPlaceQueueItemsCountCompleted;
        
        /// <remarks/>
        public event DeletePlaceQueueItemCompletedEventHandler DeletePlaceQueueItemCompleted;
        
        /// <remarks/>
        public event GetFriendsPlaceQueueItemsCountCompletedEventHandler GetFriendsPlaceQueueItemsCountCompleted;
        
        /// <remarks/>
        public event GetFriendsPlaceQueueItemsCompletedEventHandler GetFriendsPlaceQueueItemsCompleted;
        
        /// <remarks/>
        public event GetPlaceNeighborhoodsCompletedEventHandler GetPlaceNeighborhoodsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdatePlaceType", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePlaceType(string ticket, TransitPlaceType type) {
            object[] results = this.Invoke("CreateOrUpdatePlaceType", new object[] {
                        ticket,
                        type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlaceTypeAsync(string ticket, TransitPlaceType type) {
            this.CreateOrUpdatePlaceTypeAsync(ticket, type, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlaceTypeAsync(string ticket, TransitPlaceType type, object userState) {
            if ((this.CreateOrUpdatePlaceTypeOperationCompleted == null)) {
                this.CreateOrUpdatePlaceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePlaceTypeOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePlaceType", new object[] {
                        ticket,
                        type}, this.CreateOrUpdatePlaceTypeOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePlaceTypeOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePlaceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePlaceTypeCompleted(this, new CreateOrUpdatePlaceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceTypeById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlaceType GetPlaceTypeById(int id) {
            object[] results = this.Invoke("GetPlaceTypeById", new object[] {
                        id});
            return ((TransitPlaceType)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceTypeByIdAsync(int id) {
            this.GetPlaceTypeByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetPlaceTypeByIdAsync(int id, object userState) {
            if ((this.GetPlaceTypeByIdOperationCompleted == null)) {
                this.GetPlaceTypeByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceTypeByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlaceTypeById", new object[] {
                        id}, this.GetPlaceTypeByIdOperationCompleted, userState);
        }
        
        private void OnGetPlaceTypeByIdOperationCompleted(object arg) {
            if ((this.GetPlaceTypeByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceTypeByIdCompleted(this, new GetPlaceTypeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceTypes", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlaceType[] GetPlaceTypes() {
            object[] results = this.Invoke("GetPlaceTypes", new object[0]);
            return ((TransitPlaceType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceTypesAsync() {
            this.GetPlaceTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetPlaceTypesAsync(object userState) {
            if ((this.GetPlaceTypesOperationCompleted == null)) {
                this.GetPlaceTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceTypesOperationCompleted);
            }
            this.InvokeAsync("GetPlaceTypes", new object[0], this.GetPlaceTypesOperationCompleted, userState);
        }
        
        private void OnGetPlaceTypesOperationCompleted(object arg) {
            if ((this.GetPlaceTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceTypesCompleted(this, new GetPlaceTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeletePlaceType", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePlaceType(string ticket, int id) {
            this.Invoke("DeletePlaceType", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePlaceTypeAsync(string ticket, int id) {
            this.DeletePlaceTypeAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePlaceTypeAsync(string ticket, int id, object userState) {
            if ((this.DeletePlaceTypeOperationCompleted == null)) {
                this.DeletePlaceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePlaceTypeOperationCompleted);
            }
            this.InvokeAsync("DeletePlaceType", new object[] {
                        ticket,
                        id}, this.DeletePlaceTypeOperationCompleted, userState);
        }
        
        private void OnDeletePlaceTypeOperationCompleted(object arg) {
            if ((this.DeletePlaceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePlaceTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdatePlace", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePlace(string ticket, TransitPlace place) {
            object[] results = this.Invoke("CreateOrUpdatePlace", new object[] {
                        ticket,
                        place});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlaceAsync(string ticket, TransitPlace place) {
            this.CreateOrUpdatePlaceAsync(ticket, place, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlaceAsync(string ticket, TransitPlace place, object userState) {
            if ((this.CreateOrUpdatePlaceOperationCompleted == null)) {
                this.CreateOrUpdatePlaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePlaceOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePlace", new object[] {
                        ticket,
                        place}, this.CreateOrUpdatePlaceOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePlaceOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePlaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePlaceCompleted(this, new CreateOrUpdatePlaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlace GetPlaceById(string ticket, int id) {
            object[] results = this.Invoke("GetPlaceById", new object[] {
                        ticket,
                        id});
            return ((TransitPlace)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceByIdAsync(string ticket, int id) {
            this.GetPlaceByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetPlaceByIdAsync(string ticket, int id, object userState) {
            if ((this.GetPlaceByIdOperationCompleted == null)) {
                this.GetPlaceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlaceById", new object[] {
                        ticket,
                        id}, this.GetPlaceByIdOperationCompleted, userState);
        }
        
        private void OnGetPlaceByIdOperationCompleted(object arg) {
            if ((this.GetPlaceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceByIdCompleted(this, new GetPlaceByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPlacesCount(TransitPlaceQueryOptions queryoptions) {
            object[] results = this.Invoke("GetPlacesCount", new object[] {
                        queryoptions});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacesCountAsync(TransitPlaceQueryOptions queryoptions) {
            this.GetPlacesCountAsync(queryoptions, null);
        }
        
        /// <remarks/>
        public void GetPlacesCountAsync(TransitPlaceQueryOptions queryoptions, object userState) {
            if ((this.GetPlacesCountOperationCompleted == null)) {
                this.GetPlacesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacesCountOperationCompleted);
            }
            this.InvokeAsync("GetPlacesCount", new object[] {
                        queryoptions}, this.GetPlacesCountOperationCompleted, userState);
        }
        
        private void OnGetPlacesCountOperationCompleted(object arg) {
            if ((this.GetPlacesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacesCountCompleted(this, new GetPlacesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaces", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlace[] GetPlaces(TransitPlaceQueryOptions queryoptions, ServiceQueryOptions serviceoptions) {
            object[] results = this.Invoke("GetPlaces", new object[] {
                        queryoptions,
                        serviceoptions});
            return ((TransitPlace[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacesAsync(TransitPlaceQueryOptions queryoptions, ServiceQueryOptions serviceoptions) {
            this.GetPlacesAsync(queryoptions, serviceoptions, null);
        }
        
        /// <remarks/>
        public void GetPlacesAsync(TransitPlaceQueryOptions queryoptions, ServiceQueryOptions serviceoptions, object userState) {
            if ((this.GetPlacesOperationCompleted == null)) {
                this.GetPlacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacesOperationCompleted);
            }
            this.InvokeAsync("GetPlaces", new object[] {
                        queryoptions,
                        serviceoptions}, this.GetPlacesOperationCompleted, userState);
        }
        
        private void OnGetPlacesOperationCompleted(object arg) {
            if ((this.GetPlacesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacesCompleted(this, new GetPlacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeletePlace", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePlace(string ticket, int id) {
            this.Invoke("DeletePlace", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePlaceAsync(string ticket, int id) {
            this.DeletePlaceAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePlaceAsync(string ticket, int id, object userState) {
            if ((this.DeletePlaceOperationCompleted == null)) {
                this.DeletePlaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePlaceOperationCompleted);
            }
            this.InvokeAsync("DeletePlace", new object[] {
                        ticket,
                        id}, this.DeletePlaceOperationCompleted, userState);
        }
        
        private void OnDeletePlaceOperationCompleted(object arg) {
            if ((this.DeletePlaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePlaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/FindPlace", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlace FindPlace(string citytag, string name) {
            object[] results = this.Invoke("FindPlace", new object[] {
                        citytag,
                        name});
            return ((TransitPlace)(results[0]));
        }
        
        /// <remarks/>
        public void FindPlaceAsync(string citytag, string name) {
            this.FindPlaceAsync(citytag, name, null);
        }
        
        /// <remarks/>
        public void FindPlaceAsync(string citytag, string name, object userState) {
            if ((this.FindPlaceOperationCompleted == null)) {
                this.FindPlaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindPlaceOperationCompleted);
            }
            this.InvokeAsync("FindPlace", new object[] {
                        citytag,
                        name}, this.FindPlaceOperationCompleted, userState);
        }
        
        private void OnFindPlaceOperationCompleted(object arg) {
            if ((this.FindPlaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindPlaceCompleted(this, new FindPlaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdatePlacePicture", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePlacePicture(string ticket, TransitPlacePicture placepicture) {
            object[] results = this.Invoke("CreateOrUpdatePlacePicture", new object[] {
                        ticket,
                        placepicture});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlacePictureAsync(string ticket, TransitPlacePicture placepicture) {
            this.CreateOrUpdatePlacePictureAsync(ticket, placepicture, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlacePictureAsync(string ticket, TransitPlacePicture placepicture, object userState) {
            if ((this.CreateOrUpdatePlacePictureOperationCompleted == null)) {
                this.CreateOrUpdatePlacePictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePlacePictureOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePlacePicture", new object[] {
                        ticket,
                        placepicture}, this.CreateOrUpdatePlacePictureOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePlacePictureOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePlacePictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePlacePictureCompleted(this, new CreateOrUpdatePlacePictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacePictureById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlacePicture GetPlacePictureById(int id) {
            object[] results = this.Invoke("GetPlacePictureById", new object[] {
                        id});
            return ((TransitPlacePicture)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacePictureByIdAsync(int id) {
            this.GetPlacePictureByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetPlacePictureByIdAsync(int id, object userState) {
            if ((this.GetPlacePictureByIdOperationCompleted == null)) {
                this.GetPlacePictureByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacePictureByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlacePictureById", new object[] {
                        id}, this.GetPlacePictureByIdOperationCompleted, userState);
        }
        
        private void OnGetPlacePictureByIdOperationCompleted(object arg) {
            if ((this.GetPlacePictureByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacePictureByIdCompleted(this, new GetPlacePictureByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacePicturesCountById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPlacePicturesCountById(int id) {
            object[] results = this.Invoke("GetPlacePicturesCountById", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacePicturesCountByIdAsync(int id) {
            this.GetPlacePicturesCountByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetPlacePicturesCountByIdAsync(int id, object userState) {
            if ((this.GetPlacePicturesCountByIdOperationCompleted == null)) {
                this.GetPlacePicturesCountByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacePicturesCountByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlacePicturesCountById", new object[] {
                        id}, this.GetPlacePicturesCountByIdOperationCompleted, userState);
        }
        
        private void OnGetPlacePicturesCountByIdOperationCompleted(object arg) {
            if ((this.GetPlacePicturesCountByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacePicturesCountByIdCompleted(this, new GetPlacePicturesCountByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacePicturesById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlacePicture[] GetPlacePicturesById(int placeid, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetPlacePicturesById", new object[] {
                        placeid,
                        options});
            return ((TransitPlacePicture[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacePicturesByIdAsync(int placeid, ServiceQueryOptions options) {
            this.GetPlacePicturesByIdAsync(placeid, options, null);
        }
        
        /// <remarks/>
        public void GetPlacePicturesByIdAsync(int placeid, ServiceQueryOptions options, object userState) {
            if ((this.GetPlacePicturesByIdOperationCompleted == null)) {
                this.GetPlacePicturesByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacePicturesByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlacePicturesById", new object[] {
                        placeid,
                        options}, this.GetPlacePicturesByIdOperationCompleted, userState);
        }
        
        private void OnGetPlacePicturesByIdOperationCompleted(object arg) {
            if ((this.GetPlacePicturesByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacePicturesByIdCompleted(this, new GetPlacePicturesByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeletePlacePicture", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePlacePicture(string ticket, int id) {
            this.Invoke("DeletePlacePicture", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePlacePictureAsync(string ticket, int id) {
            this.DeletePlacePictureAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePlacePictureAsync(string ticket, int id, object userState) {
            if ((this.DeletePlacePictureOperationCompleted == null)) {
                this.DeletePlacePictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePlacePictureOperationCompleted);
            }
            this.InvokeAsync("DeletePlacePicture", new object[] {
                        ticket,
                        id}, this.DeletePlacePictureOperationCompleted, userState);
        }
        
        private void OnDeletePlacePictureOperationCompleted(object arg) {
            if ((this.DeletePlacePictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePlacePictureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacePictureWithBitmapById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlacePictureWithBitmap GetPlacePictureWithBitmapById(string ticket, int id) {
            object[] results = this.Invoke("GetPlacePictureWithBitmapById", new object[] {
                        ticket,
                        id});
            return ((TransitPlacePictureWithBitmap)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacePictureWithBitmapByIdAsync(string ticket, int id) {
            this.GetPlacePictureWithBitmapByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetPlacePictureWithBitmapByIdAsync(string ticket, int id, object userState) {
            if ((this.GetPlacePictureWithBitmapByIdOperationCompleted == null)) {
                this.GetPlacePictureWithBitmapByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacePictureWithBitmapByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlacePictureWithBitmapById", new object[] {
                        ticket,
                        id}, this.GetPlacePictureWithBitmapByIdOperationCompleted, userState);
        }
        
        private void OnGetPlacePictureWithBitmapByIdOperationCompleted(object arg) {
            if ((this.GetPlacePictureWithBitmapByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacePictureWithBitmapByIdCompleted(this, new GetPlacePictureWithBitmapByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacePictureWithBitmapByIdIfModifiedSince", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlacePictureWithBitmap GetPlacePictureWithBitmapByIdIfModifiedSince(string ticket, int id, System.DateTime ifModifiedSince) {
            object[] results = this.Invoke("GetPlacePictureWithBitmapByIdIfModifiedSince", new object[] {
                        ticket,
                        id,
                        ifModifiedSince});
            return ((TransitPlacePictureWithBitmap)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacePictureWithBitmapByIdIfModifiedSinceAsync(string ticket, int id, System.DateTime ifModifiedSince) {
            this.GetPlacePictureWithBitmapByIdIfModifiedSinceAsync(ticket, id, ifModifiedSince, null);
        }
        
        /// <remarks/>
        public void GetPlacePictureWithBitmapByIdIfModifiedSinceAsync(string ticket, int id, System.DateTime ifModifiedSince, object userState) {
            if ((this.GetPlacePictureWithBitmapByIdIfModifiedSinceOperationCompleted == null)) {
                this.GetPlacePictureWithBitmapByIdIfModifiedSinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacePictureWithBitmapByIdIfModifiedSinceOperationCompleted);
            }
            this.InvokeAsync("GetPlacePictureWithBitmapByIdIfModifiedSince", new object[] {
                        ticket,
                        id,
                        ifModifiedSince}, this.GetPlacePictureWithBitmapByIdIfModifiedSinceOperationCompleted, userState);
        }
        
        private void OnGetPlacePictureWithBitmapByIdIfModifiedSinceOperationCompleted(object arg) {
            if ((this.GetPlacePictureWithBitmapByIdIfModifiedSinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacePictureWithBitmapByIdIfModifiedSinceCompleted(this, new GetPlacePictureWithBitmapByIdIfModifiedSinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacePictureWithThumbnailById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlacePictureWithThumbnail GetPlacePictureWithThumbnailById(string ticket, int id) {
            object[] results = this.Invoke("GetPlacePictureWithThumbnailById", new object[] {
                        ticket,
                        id});
            return ((TransitPlacePictureWithThumbnail)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacePictureWithThumbnailByIdAsync(string ticket, int id) {
            this.GetPlacePictureWithThumbnailByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetPlacePictureWithThumbnailByIdAsync(string ticket, int id, object userState) {
            if ((this.GetPlacePictureWithThumbnailByIdOperationCompleted == null)) {
                this.GetPlacePictureWithThumbnailByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacePictureWithThumbnailByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlacePictureWithThumbnailById", new object[] {
                        ticket,
                        id}, this.GetPlacePictureWithThumbnailByIdOperationCompleted, userState);
        }
        
        private void OnGetPlacePictureWithThumbnailByIdOperationCompleted(object arg) {
            if ((this.GetPlacePictureWithThumbnailByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacePictureWithThumbnailByIdCompleted(this, new GetPlacePictureWithThumbnailByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacePictureWithThumbnailByIdIfModifiedSince", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlacePictureWithThumbnail GetPlacePictureWithThumbnailByIdIfModifiedSince(string ticket, int id, System.DateTime ifModifiedSince) {
            object[] results = this.Invoke("GetPlacePictureWithThumbnailByIdIfModifiedSince", new object[] {
                        ticket,
                        id,
                        ifModifiedSince});
            return ((TransitPlacePictureWithThumbnail)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacePictureWithThumbnailByIdIfModifiedSinceAsync(string ticket, int id, System.DateTime ifModifiedSince) {
            this.GetPlacePictureWithThumbnailByIdIfModifiedSinceAsync(ticket, id, ifModifiedSince, null);
        }
        
        /// <remarks/>
        public void GetPlacePictureWithThumbnailByIdIfModifiedSinceAsync(string ticket, int id, System.DateTime ifModifiedSince, object userState) {
            if ((this.GetPlacePictureWithThumbnailByIdIfModifiedSinceOperationCompleted == null)) {
                this.GetPlacePictureWithThumbnailByIdIfModifiedSinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacePictureWithThumbnailByIdIfModifiedSinceOperationCompleted);
            }
            this.InvokeAsync("GetPlacePictureWithThumbnailByIdIfModifiedSince", new object[] {
                        ticket,
                        id,
                        ifModifiedSince}, this.GetPlacePictureWithThumbnailByIdIfModifiedSinceOperationCompleted, userState);
        }
        
        private void OnGetPlacePictureWithThumbnailByIdIfModifiedSinceOperationCompleted(object arg) {
            if ((this.GetPlacePictureWithThumbnailByIdIfModifiedSinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacePictureWithThumbnailByIdIfModifiedSinceCompleted(this, new GetPlacePictureWithThumbnailByIdIfModifiedSinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateAccountPlaceType", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateAccountPlaceType(string ticket, TransitAccountPlaceType type) {
            object[] results = this.Invoke("CreateOrUpdateAccountPlaceType", new object[] {
                        ticket,
                        type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountPlaceTypeAsync(string ticket, TransitAccountPlaceType type) {
            this.CreateOrUpdateAccountPlaceTypeAsync(ticket, type, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountPlaceTypeAsync(string ticket, TransitAccountPlaceType type, object userState) {
            if ((this.CreateOrUpdateAccountPlaceTypeOperationCompleted == null)) {
                this.CreateOrUpdateAccountPlaceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateAccountPlaceTypeOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateAccountPlaceType", new object[] {
                        ticket,
                        type}, this.CreateOrUpdateAccountPlaceTypeOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateAccountPlaceTypeOperationCompleted(object arg) {
            if ((this.CreateOrUpdateAccountPlaceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateAccountPlaceTypeCompleted(this, new CreateOrUpdateAccountPlaceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlaceTypeById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountPlaceType GetAccountPlaceTypeById(int id) {
            object[] results = this.Invoke("GetAccountPlaceTypeById", new object[] {
                        id});
            return ((TransitAccountPlaceType)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlaceTypeByIdAsync(int id) {
            this.GetAccountPlaceTypeByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAccountPlaceTypeByIdAsync(int id, object userState) {
            if ((this.GetAccountPlaceTypeByIdOperationCompleted == null)) {
                this.GetAccountPlaceTypeByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlaceTypeByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlaceTypeById", new object[] {
                        id}, this.GetAccountPlaceTypeByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountPlaceTypeByIdOperationCompleted(object arg) {
            if ((this.GetAccountPlaceTypeByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlaceTypeByIdCompleted(this, new GetAccountPlaceTypeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlaceTypes", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountPlaceType[] GetAccountPlaceTypes() {
            object[] results = this.Invoke("GetAccountPlaceTypes", new object[0]);
            return ((TransitAccountPlaceType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlaceTypesAsync() {
            this.GetAccountPlaceTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetAccountPlaceTypesAsync(object userState) {
            if ((this.GetAccountPlaceTypesOperationCompleted == null)) {
                this.GetAccountPlaceTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlaceTypesOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlaceTypes", new object[0], this.GetAccountPlaceTypesOperationCompleted, userState);
        }
        
        private void OnGetAccountPlaceTypesOperationCompleted(object arg) {
            if ((this.GetAccountPlaceTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlaceTypesCompleted(this, new GetAccountPlaceTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteAccountPlaceType", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountPlaceType(string ticket, int id) {
            this.Invoke("DeleteAccountPlaceType", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteAccountPlaceTypeAsync(string ticket, int id) {
            this.DeleteAccountPlaceTypeAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteAccountPlaceTypeAsync(string ticket, int id, object userState) {
            if ((this.DeleteAccountPlaceTypeOperationCompleted == null)) {
                this.DeleteAccountPlaceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountPlaceTypeOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountPlaceType", new object[] {
                        ticket,
                        id}, this.DeleteAccountPlaceTypeOperationCompleted, userState);
        }
        
        private void OnDeleteAccountPlaceTypeOperationCompleted(object arg) {
            if ((this.DeleteAccountPlaceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountPlaceTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateAccountPlace", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateAccountPlace(string ticket, TransitAccountPlace accountplace) {
            object[] results = this.Invoke("CreateOrUpdateAccountPlace", new object[] {
                        ticket,
                        accountplace});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountPlaceAsync(string ticket, TransitAccountPlace accountplace) {
            this.CreateOrUpdateAccountPlaceAsync(ticket, accountplace, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountPlaceAsync(string ticket, TransitAccountPlace accountplace, object userState) {
            if ((this.CreateOrUpdateAccountPlaceOperationCompleted == null)) {
                this.CreateOrUpdateAccountPlaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateAccountPlaceOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateAccountPlace", new object[] {
                        ticket,
                        accountplace}, this.CreateOrUpdateAccountPlaceOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateAccountPlaceOperationCompleted(object arg) {
            if ((this.CreateOrUpdateAccountPlaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateAccountPlaceCompleted(this, new CreateOrUpdateAccountPlaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlaceById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountPlace GetAccountPlaceById(int id) {
            object[] results = this.Invoke("GetAccountPlaceById", new object[] {
                        id});
            return ((TransitAccountPlace)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlaceByIdAsync(int id) {
            this.GetAccountPlaceByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAccountPlaceByIdAsync(int id, object userState) {
            if ((this.GetAccountPlaceByIdOperationCompleted == null)) {
                this.GetAccountPlaceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlaceByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlaceById", new object[] {
                        id}, this.GetAccountPlaceByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountPlaceByIdOperationCompleted(object arg) {
            if ((this.GetAccountPlaceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlaceByIdCompleted(this, new GetAccountPlaceByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlacesCountByPlaceId", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountPlacesCountByPlaceId(int id) {
            object[] results = this.Invoke("GetAccountPlacesCountByPlaceId", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlacesCountByPlaceIdAsync(int id) {
            this.GetAccountPlacesCountByPlaceIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAccountPlacesCountByPlaceIdAsync(int id, object userState) {
            if ((this.GetAccountPlacesCountByPlaceIdOperationCompleted == null)) {
                this.GetAccountPlacesCountByPlaceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlacesCountByPlaceIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlacesCountByPlaceId", new object[] {
                        id}, this.GetAccountPlacesCountByPlaceIdOperationCompleted, userState);
        }
        
        private void OnGetAccountPlacesCountByPlaceIdOperationCompleted(object arg) {
            if ((this.GetAccountPlacesCountByPlaceIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlacesCountByPlaceIdCompleted(this, new GetAccountPlacesCountByPlaceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlacesByPlaceId", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountPlace[] GetAccountPlacesByPlaceId(int id, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountPlacesByPlaceId", new object[] {
                        id,
                        options});
            return ((TransitAccountPlace[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlacesByPlaceIdAsync(int id, ServiceQueryOptions options) {
            this.GetAccountPlacesByPlaceIdAsync(id, options, null);
        }
        
        /// <remarks/>
        public void GetAccountPlacesByPlaceIdAsync(int id, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountPlacesByPlaceIdOperationCompleted == null)) {
                this.GetAccountPlacesByPlaceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlacesByPlaceIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlacesByPlaceId", new object[] {
                        id,
                        options}, this.GetAccountPlacesByPlaceIdOperationCompleted, userState);
        }
        
        private void OnGetAccountPlacesByPlaceIdOperationCompleted(object arg) {
            if ((this.GetAccountPlacesByPlaceIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlacesByPlaceIdCompleted(this, new GetAccountPlacesByPlaceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlacesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountPlacesCount(string ticket) {
            object[] results = this.Invoke("GetAccountPlacesCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlacesCountAsync(string ticket) {
            this.GetAccountPlacesCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetAccountPlacesCountAsync(string ticket, object userState) {
            if ((this.GetAccountPlacesCountOperationCompleted == null)) {
                this.GetAccountPlacesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlacesCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlacesCount", new object[] {
                        ticket}, this.GetAccountPlacesCountOperationCompleted, userState);
        }
        
        private void OnGetAccountPlacesCountOperationCompleted(object arg) {
            if ((this.GetAccountPlacesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlacesCountCompleted(this, new GetAccountPlacesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlacesCountByAccountId", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountPlacesCountByAccountId(int id) {
            object[] results = this.Invoke("GetAccountPlacesCountByAccountId", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlacesCountByAccountIdAsync(int id) {
            this.GetAccountPlacesCountByAccountIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAccountPlacesCountByAccountIdAsync(int id, object userState) {
            if ((this.GetAccountPlacesCountByAccountIdOperationCompleted == null)) {
                this.GetAccountPlacesCountByAccountIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlacesCountByAccountIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlacesCountByAccountId", new object[] {
                        id}, this.GetAccountPlacesCountByAccountIdOperationCompleted, userState);
        }
        
        private void OnGetAccountPlacesCountByAccountIdOperationCompleted(object arg) {
            if ((this.GetAccountPlacesCountByAccountIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlacesCountByAccountIdCompleted(this, new GetAccountPlacesCountByAccountIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlaces", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountPlace[] GetAccountPlaces(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountPlaces", new object[] {
                        ticket,
                        options});
            return ((TransitAccountPlace[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlacesAsync(string ticket, ServiceQueryOptions options) {
            this.GetAccountPlacesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetAccountPlacesAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountPlacesOperationCompleted == null)) {
                this.GetAccountPlacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlacesOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlaces", new object[] {
                        ticket,
                        options}, this.GetAccountPlacesOperationCompleted, userState);
        }
        
        private void OnGetAccountPlacesOperationCompleted(object arg) {
            if ((this.GetAccountPlacesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlacesCompleted(this, new GetAccountPlacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlacesByAccountId", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountPlace[] GetAccountPlacesByAccountId(int id, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountPlacesByAccountId", new object[] {
                        id,
                        options});
            return ((TransitAccountPlace[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlacesByAccountIdAsync(int id, ServiceQueryOptions options) {
            this.GetAccountPlacesByAccountIdAsync(id, options, null);
        }
        
        /// <remarks/>
        public void GetAccountPlacesByAccountIdAsync(int id, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountPlacesByAccountIdOperationCompleted == null)) {
                this.GetAccountPlacesByAccountIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlacesByAccountIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlacesByAccountId", new object[] {
                        id,
                        options}, this.GetAccountPlacesByAccountIdOperationCompleted, userState);
        }
        
        private void OnGetAccountPlacesByAccountIdOperationCompleted(object arg) {
            if ((this.GetAccountPlacesByAccountIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlacesByAccountIdCompleted(this, new GetAccountPlacesByAccountIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteAccountPlace", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountPlace(string ticket, int id) {
            this.Invoke("DeleteAccountPlace", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteAccountPlaceAsync(string ticket, int id) {
            this.DeleteAccountPlaceAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteAccountPlaceAsync(string ticket, int id, object userState) {
            if ((this.DeleteAccountPlaceOperationCompleted == null)) {
                this.DeleteAccountPlaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountPlaceOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountPlace", new object[] {
                        ticket,
                        id}, this.DeleteAccountPlaceOperationCompleted, userState);
        }
        
        private void OnDeleteAccountPlaceOperationCompleted(object arg) {
            if ((this.DeleteAccountPlaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountPlaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateAccountPlaceRequest", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateAccountPlaceRequest(string ticket, TransitAccountPlaceRequest request) {
            object[] results = this.Invoke("CreateOrUpdateAccountPlaceRequest", new object[] {
                        ticket,
                        request});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountPlaceRequestAsync(string ticket, TransitAccountPlaceRequest request) {
            this.CreateOrUpdateAccountPlaceRequestAsync(ticket, request, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountPlaceRequestAsync(string ticket, TransitAccountPlaceRequest request, object userState) {
            if ((this.CreateOrUpdateAccountPlaceRequestOperationCompleted == null)) {
                this.CreateOrUpdateAccountPlaceRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateAccountPlaceRequestOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateAccountPlaceRequest", new object[] {
                        ticket,
                        request}, this.CreateOrUpdateAccountPlaceRequestOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateAccountPlaceRequestOperationCompleted(object arg) {
            if ((this.CreateOrUpdateAccountPlaceRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateAccountPlaceRequestCompleted(this, new CreateOrUpdateAccountPlaceRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlaceRequestById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountPlaceRequest GetAccountPlaceRequestById(string ticket, int id) {
            object[] results = this.Invoke("GetAccountPlaceRequestById", new object[] {
                        ticket,
                        id});
            return ((TransitAccountPlaceRequest)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlaceRequestByIdAsync(string ticket, int id) {
            this.GetAccountPlaceRequestByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetAccountPlaceRequestByIdAsync(string ticket, int id, object userState) {
            if ((this.GetAccountPlaceRequestByIdOperationCompleted == null)) {
                this.GetAccountPlaceRequestByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlaceRequestByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlaceRequestById", new object[] {
                        ticket,
                        id}, this.GetAccountPlaceRequestByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountPlaceRequestByIdOperationCompleted(object arg) {
            if ((this.GetAccountPlaceRequestByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlaceRequestByIdCompleted(this, new GetAccountPlaceRequestByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlaceRequests", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountPlaceRequest[] GetAccountPlaceRequests(string ticket) {
            object[] results = this.Invoke("GetAccountPlaceRequests", new object[] {
                        ticket});
            return ((TransitAccountPlaceRequest[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlaceRequestsAsync(string ticket) {
            this.GetAccountPlaceRequestsAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetAccountPlaceRequestsAsync(string ticket, object userState) {
            if ((this.GetAccountPlaceRequestsOperationCompleted == null)) {
                this.GetAccountPlaceRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlaceRequestsOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlaceRequests", new object[] {
                        ticket}, this.GetAccountPlaceRequestsOperationCompleted, userState);
        }
        
        private void OnGetAccountPlaceRequestsOperationCompleted(object arg) {
            if ((this.GetAccountPlaceRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlaceRequestsCompleted(this, new GetAccountPlaceRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlaceRequestsById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountPlaceRequest[] GetAccountPlaceRequestsById(string ticket, int id) {
            object[] results = this.Invoke("GetAccountPlaceRequestsById", new object[] {
                        ticket,
                        id});
            return ((TransitAccountPlaceRequest[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlaceRequestsByIdAsync(string ticket, int id) {
            this.GetAccountPlaceRequestsByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetAccountPlaceRequestsByIdAsync(string ticket, int id, object userState) {
            if ((this.GetAccountPlaceRequestsByIdOperationCompleted == null)) {
                this.GetAccountPlaceRequestsByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlaceRequestsByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlaceRequestsById", new object[] {
                        ticket,
                        id}, this.GetAccountPlaceRequestsByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountPlaceRequestsByIdOperationCompleted(object arg) {
            if ((this.GetAccountPlaceRequestsByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlaceRequestsByIdCompleted(this, new GetAccountPlaceRequestsByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteAccountPlaceRequest", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountPlaceRequest(string ticket, int id) {
            this.Invoke("DeleteAccountPlaceRequest", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteAccountPlaceRequestAsync(string ticket, int id) {
            this.DeleteAccountPlaceRequestAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteAccountPlaceRequestAsync(string ticket, int id, object userState) {
            if ((this.DeleteAccountPlaceRequestOperationCompleted == null)) {
                this.DeleteAccountPlaceRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountPlaceRequestOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountPlaceRequest", new object[] {
                        ticket,
                        id}, this.DeleteAccountPlaceRequestOperationCompleted, userState);
        }
        
        private void OnDeleteAccountPlaceRequestOperationCompleted(object arg) {
            if ((this.DeleteAccountPlaceRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountPlaceRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/AcceptAccountPlaceRequest", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AcceptAccountPlaceRequest(string ticket, int id, string message) {
            this.Invoke("AcceptAccountPlaceRequest", new object[] {
                        ticket,
                        id,
                        message});
        }
        
        /// <remarks/>
        public void AcceptAccountPlaceRequestAsync(string ticket, int id, string message) {
            this.AcceptAccountPlaceRequestAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void AcceptAccountPlaceRequestAsync(string ticket, int id, string message, object userState) {
            if ((this.AcceptAccountPlaceRequestOperationCompleted == null)) {
                this.AcceptAccountPlaceRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptAccountPlaceRequestOperationCompleted);
            }
            this.InvokeAsync("AcceptAccountPlaceRequest", new object[] {
                        ticket,
                        id,
                        message}, this.AcceptAccountPlaceRequestOperationCompleted, userState);
        }
        
        private void OnAcceptAccountPlaceRequestOperationCompleted(object arg) {
            if ((this.AcceptAccountPlaceRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptAccountPlaceRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/RejectAccountPlaceRequest", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RejectAccountPlaceRequest(string ticket, int id, string message) {
            this.Invoke("RejectAccountPlaceRequest", new object[] {
                        ticket,
                        id,
                        message});
        }
        
        /// <remarks/>
        public void RejectAccountPlaceRequestAsync(string ticket, int id, string message) {
            this.RejectAccountPlaceRequestAsync(ticket, id, message, null);
        }
        
        /// <remarks/>
        public void RejectAccountPlaceRequestAsync(string ticket, int id, string message, object userState) {
            if ((this.RejectAccountPlaceRequestOperationCompleted == null)) {
                this.RejectAccountPlaceRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectAccountPlaceRequestOperationCompleted);
            }
            this.InvokeAsync("RejectAccountPlaceRequest", new object[] {
                        ticket,
                        id,
                        message}, this.RejectAccountPlaceRequestOperationCompleted, userState);
        }
        
        private void OnRejectAccountPlaceRequestOperationCompleted(object arg) {
            if ((this.RejectAccountPlaceRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectAccountPlaceRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetNewPlaces", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlace[] GetNewPlaces(int max) {
            object[] results = this.Invoke("GetNewPlaces", new object[] {
                        max});
            return ((TransitPlace[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNewPlacesAsync(int max) {
            this.GetNewPlacesAsync(max, null);
        }
        
        /// <remarks/>
        public void GetNewPlacesAsync(int max, object userState) {
            if ((this.GetNewPlacesOperationCompleted == null)) {
                this.GetNewPlacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewPlacesOperationCompleted);
            }
            this.InvokeAsync("GetNewPlaces", new object[] {
                        max}, this.GetNewPlacesOperationCompleted, userState);
        }
        
        private void OnGetNewPlacesOperationCompleted(object arg) {
            if ((this.GetNewPlacesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewPlacesCompleted(this, new GetNewPlacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdateAccountPlaceFavorite", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateAccountPlaceFavorite(string ticket, TransitAccountPlaceFavorite apf) {
            object[] results = this.Invoke("CreateOrUpdateAccountPlaceFavorite", new object[] {
                        ticket,
                        apf});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountPlaceFavoriteAsync(string ticket, TransitAccountPlaceFavorite apf) {
            this.CreateOrUpdateAccountPlaceFavoriteAsync(ticket, apf, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateAccountPlaceFavoriteAsync(string ticket, TransitAccountPlaceFavorite apf, object userState) {
            if ((this.CreateOrUpdateAccountPlaceFavoriteOperationCompleted == null)) {
                this.CreateOrUpdateAccountPlaceFavoriteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateAccountPlaceFavoriteOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateAccountPlaceFavorite", new object[] {
                        ticket,
                        apf}, this.CreateOrUpdateAccountPlaceFavoriteOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateAccountPlaceFavoriteOperationCompleted(object arg) {
            if ((this.CreateOrUpdateAccountPlaceFavoriteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateAccountPlaceFavoriteCompleted(this, new CreateOrUpdateAccountPlaceFavoriteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/IsAccountPlaceFavorite", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsAccountPlaceFavorite(string ticket, int place_id) {
            object[] results = this.Invoke("IsAccountPlaceFavorite", new object[] {
                        ticket,
                        place_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsAccountPlaceFavoriteAsync(string ticket, int place_id) {
            this.IsAccountPlaceFavoriteAsync(ticket, place_id, null);
        }
        
        /// <remarks/>
        public void IsAccountPlaceFavoriteAsync(string ticket, int place_id, object userState) {
            if ((this.IsAccountPlaceFavoriteOperationCompleted == null)) {
                this.IsAccountPlaceFavoriteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAccountPlaceFavoriteOperationCompleted);
            }
            this.InvokeAsync("IsAccountPlaceFavorite", new object[] {
                        ticket,
                        place_id}, this.IsAccountPlaceFavoriteOperationCompleted, userState);
        }
        
        private void OnIsAccountPlaceFavoriteOperationCompleted(object arg) {
            if ((this.IsAccountPlaceFavoriteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAccountPlaceFavoriteCompleted(this, new IsAccountPlaceFavoriteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlaceFavoriteById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountPlaceFavorite GetAccountPlaceFavoriteById(int id) {
            object[] results = this.Invoke("GetAccountPlaceFavoriteById", new object[] {
                        id});
            return ((TransitAccountPlaceFavorite)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlaceFavoriteByIdAsync(int id) {
            this.GetAccountPlaceFavoriteByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAccountPlaceFavoriteByIdAsync(int id, object userState) {
            if ((this.GetAccountPlaceFavoriteByIdOperationCompleted == null)) {
                this.GetAccountPlaceFavoriteByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlaceFavoriteByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlaceFavoriteById", new object[] {
                        id}, this.GetAccountPlaceFavoriteByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountPlaceFavoriteByIdOperationCompleted(object arg) {
            if ((this.GetAccountPlaceFavoriteByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlaceFavoriteByIdCompleted(this, new GetAccountPlaceFavoriteByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlaceFavoritesCountByPlaceId", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountPlaceFavoritesCountByPlaceId(int id) {
            object[] results = this.Invoke("GetAccountPlaceFavoritesCountByPlaceId", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlaceFavoritesCountByPlaceIdAsync(int id) {
            this.GetAccountPlaceFavoritesCountByPlaceIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAccountPlaceFavoritesCountByPlaceIdAsync(int id, object userState) {
            if ((this.GetAccountPlaceFavoritesCountByPlaceIdOperationCompleted == null)) {
                this.GetAccountPlaceFavoritesCountByPlaceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlaceFavoritesCountByPlaceIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlaceFavoritesCountByPlaceId", new object[] {
                        id}, this.GetAccountPlaceFavoritesCountByPlaceIdOperationCompleted, userState);
        }
        
        private void OnGetAccountPlaceFavoritesCountByPlaceIdOperationCompleted(object arg) {
            if ((this.GetAccountPlaceFavoritesCountByPlaceIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlaceFavoritesCountByPlaceIdCompleted(this, new GetAccountPlaceFavoritesCountByPlaceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlaceFavoritesByPlaceId", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountPlaceFavorite[] GetAccountPlaceFavoritesByPlaceId(int id, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountPlaceFavoritesByPlaceId", new object[] {
                        id,
                        options});
            return ((TransitAccountPlaceFavorite[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlaceFavoritesByPlaceIdAsync(int id, ServiceQueryOptions options) {
            this.GetAccountPlaceFavoritesByPlaceIdAsync(id, options, null);
        }
        
        /// <remarks/>
        public void GetAccountPlaceFavoritesByPlaceIdAsync(int id, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountPlaceFavoritesByPlaceIdOperationCompleted == null)) {
                this.GetAccountPlaceFavoritesByPlaceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlaceFavoritesByPlaceIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlaceFavoritesByPlaceId", new object[] {
                        id,
                        options}, this.GetAccountPlaceFavoritesByPlaceIdOperationCompleted, userState);
        }
        
        private void OnGetAccountPlaceFavoritesByPlaceIdOperationCompleted(object arg) {
            if ((this.GetAccountPlaceFavoritesByPlaceIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlaceFavoritesByPlaceIdCompleted(this, new GetAccountPlaceFavoritesByPlaceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlaceFavoritesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountPlaceFavoritesCount(string ticket) {
            object[] results = this.Invoke("GetAccountPlaceFavoritesCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlaceFavoritesCountAsync(string ticket) {
            this.GetAccountPlaceFavoritesCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetAccountPlaceFavoritesCountAsync(string ticket, object userState) {
            if ((this.GetAccountPlaceFavoritesCountOperationCompleted == null)) {
                this.GetAccountPlaceFavoritesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlaceFavoritesCountOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlaceFavoritesCount", new object[] {
                        ticket}, this.GetAccountPlaceFavoritesCountOperationCompleted, userState);
        }
        
        private void OnGetAccountPlaceFavoritesCountOperationCompleted(object arg) {
            if ((this.GetAccountPlaceFavoritesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlaceFavoritesCountCompleted(this, new GetAccountPlaceFavoritesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlaceFavoritesCountById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountPlaceFavoritesCountById(int id) {
            object[] results = this.Invoke("GetAccountPlaceFavoritesCountById", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlaceFavoritesCountByIdAsync(int id) {
            this.GetAccountPlaceFavoritesCountByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAccountPlaceFavoritesCountByIdAsync(int id, object userState) {
            if ((this.GetAccountPlaceFavoritesCountByIdOperationCompleted == null)) {
                this.GetAccountPlaceFavoritesCountByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlaceFavoritesCountByIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlaceFavoritesCountById", new object[] {
                        id}, this.GetAccountPlaceFavoritesCountByIdOperationCompleted, userState);
        }
        
        private void OnGetAccountPlaceFavoritesCountByIdOperationCompleted(object arg) {
            if ((this.GetAccountPlaceFavoritesCountByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlaceFavoritesCountByIdCompleted(this, new GetAccountPlaceFavoritesCountByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlaceFavorites", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountPlaceFavorite[] GetAccountPlaceFavorites(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountPlaceFavorites", new object[] {
                        ticket,
                        options});
            return ((TransitAccountPlaceFavorite[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlaceFavoritesAsync(string ticket, ServiceQueryOptions options) {
            this.GetAccountPlaceFavoritesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetAccountPlaceFavoritesAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountPlaceFavoritesOperationCompleted == null)) {
                this.GetAccountPlaceFavoritesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlaceFavoritesOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlaceFavorites", new object[] {
                        ticket,
                        options}, this.GetAccountPlaceFavoritesOperationCompleted, userState);
        }
        
        private void OnGetAccountPlaceFavoritesOperationCompleted(object arg) {
            if ((this.GetAccountPlaceFavoritesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlaceFavoritesCompleted(this, new GetAccountPlaceFavoritesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAccountPlaceFavoritesByAccountId", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAccountPlaceFavorite[] GetAccountPlaceFavoritesByAccountId(int id, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetAccountPlaceFavoritesByAccountId", new object[] {
                        id,
                        options});
            return ((TransitAccountPlaceFavorite[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountPlaceFavoritesByAccountIdAsync(int id, ServiceQueryOptions options) {
            this.GetAccountPlaceFavoritesByAccountIdAsync(id, options, null);
        }
        
        /// <remarks/>
        public void GetAccountPlaceFavoritesByAccountIdAsync(int id, ServiceQueryOptions options, object userState) {
            if ((this.GetAccountPlaceFavoritesByAccountIdOperationCompleted == null)) {
                this.GetAccountPlaceFavoritesByAccountIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountPlaceFavoritesByAccountIdOperationCompleted);
            }
            this.InvokeAsync("GetAccountPlaceFavoritesByAccountId", new object[] {
                        id,
                        options}, this.GetAccountPlaceFavoritesByAccountIdOperationCompleted, userState);
        }
        
        private void OnGetAccountPlaceFavoritesByAccountIdOperationCompleted(object arg) {
            if ((this.GetAccountPlaceFavoritesByAccountIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountPlaceFavoritesByAccountIdCompleted(this, new GetAccountPlaceFavoritesByAccountIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeleteAccountPlaceFavorite", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAccountPlaceFavorite(string ticket, int id) {
            this.Invoke("DeleteAccountPlaceFavorite", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteAccountPlaceFavoriteAsync(string ticket, int id) {
            this.DeleteAccountPlaceFavoriteAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteAccountPlaceFavoriteAsync(string ticket, int id, object userState) {
            if ((this.DeleteAccountPlaceFavoriteOperationCompleted == null)) {
                this.DeleteAccountPlaceFavoriteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAccountPlaceFavoriteOperationCompleted);
            }
            this.InvokeAsync("DeleteAccountPlaceFavorite", new object[] {
                        ticket,
                        id}, this.DeleteAccountPlaceFavoriteOperationCompleted, userState);
        }
        
        private void OnDeleteAccountPlaceFavoriteOperationCompleted(object arg) {
            if ((this.DeleteAccountPlaceFavoriteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAccountPlaceFavoriteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/SearchPlaces", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlace[] SearchPlaces(string s, ServiceQueryOptions options) {
            object[] results = this.Invoke("SearchPlaces", new object[] {
                        s,
                        options});
            return ((TransitPlace[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchPlacesAsync(string s, ServiceQueryOptions options) {
            this.SearchPlacesAsync(s, options, null);
        }
        
        /// <remarks/>
        public void SearchPlacesAsync(string s, ServiceQueryOptions options, object userState) {
            if ((this.SearchPlacesOperationCompleted == null)) {
                this.SearchPlacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchPlacesOperationCompleted);
            }
            this.InvokeAsync("SearchPlaces", new object[] {
                        s,
                        options}, this.SearchPlacesOperationCompleted, userState);
        }
        
        private void OnSearchPlacesOperationCompleted(object arg) {
            if ((this.SearchPlacesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchPlacesCompleted(this, new SearchPlacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/SearchPlacesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SearchPlacesCount(string s) {
            object[] results = this.Invoke("SearchPlacesCount", new object[] {
                        s});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SearchPlacesCountAsync(string s) {
            this.SearchPlacesCountAsync(s, null);
        }
        
        /// <remarks/>
        public void SearchPlacesCountAsync(string s, object userState) {
            if ((this.SearchPlacesCountOperationCompleted == null)) {
                this.SearchPlacesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchPlacesCountOperationCompleted);
            }
            this.InvokeAsync("SearchPlacesCount", new object[] {
                        s}, this.SearchPlacesCountOperationCompleted, userState);
        }
        
        private void OnSearchPlacesCountOperationCompleted(object arg) {
            if ((this.SearchPlacesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchPlacesCountCompleted(this, new SearchPlacesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdatePlaceName", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePlaceName(string ticket, TransitPlaceName placename) {
            object[] results = this.Invoke("CreateOrUpdatePlaceName", new object[] {
                        ticket,
                        placename});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlaceNameAsync(string ticket, TransitPlaceName placename) {
            this.CreateOrUpdatePlaceNameAsync(ticket, placename, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlaceNameAsync(string ticket, TransitPlaceName placename, object userState) {
            if ((this.CreateOrUpdatePlaceNameOperationCompleted == null)) {
                this.CreateOrUpdatePlaceNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePlaceNameOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePlaceName", new object[] {
                        ticket,
                        placename}, this.CreateOrUpdatePlaceNameOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePlaceNameOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePlaceNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePlaceNameCompleted(this, new CreateOrUpdatePlaceNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceNameById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlaceName GetPlaceNameById(int id) {
            object[] results = this.Invoke("GetPlaceNameById", new object[] {
                        id});
            return ((TransitPlaceName)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceNameByIdAsync(int id) {
            this.GetPlaceNameByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetPlaceNameByIdAsync(int id, object userState) {
            if ((this.GetPlaceNameByIdOperationCompleted == null)) {
                this.GetPlaceNameByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceNameByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlaceNameById", new object[] {
                        id}, this.GetPlaceNameByIdOperationCompleted, userState);
        }
        
        private void OnGetPlaceNameByIdOperationCompleted(object arg) {
            if ((this.GetPlaceNameByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceNameByIdCompleted(this, new GetPlaceNameByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceNames", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlaceName[] GetPlaceNames(int placeid) {
            object[] results = this.Invoke("GetPlaceNames", new object[] {
                        placeid});
            return ((TransitPlaceName[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceNamesAsync(int placeid) {
            this.GetPlaceNamesAsync(placeid, null);
        }
        
        /// <remarks/>
        public void GetPlaceNamesAsync(int placeid, object userState) {
            if ((this.GetPlaceNamesOperationCompleted == null)) {
                this.GetPlaceNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceNamesOperationCompleted);
            }
            this.InvokeAsync("GetPlaceNames", new object[] {
                        placeid}, this.GetPlaceNamesOperationCompleted, userState);
        }
        
        private void OnGetPlaceNamesOperationCompleted(object arg) {
            if ((this.GetPlaceNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceNamesCompleted(this, new GetPlaceNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeletePlaceName", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePlaceName(string ticket, int id) {
            this.Invoke("DeletePlaceName", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePlaceNameAsync(string ticket, int id) {
            this.DeletePlaceNameAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePlaceNameAsync(string ticket, int id, object userState) {
            if ((this.DeletePlaceNameOperationCompleted == null)) {
                this.DeletePlaceNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePlaceNameOperationCompleted);
            }
            this.InvokeAsync("DeletePlaceName", new object[] {
                        ticket,
                        id}, this.DeletePlaceNameOperationCompleted, userState);
        }
        
        private void OnDeletePlaceNameOperationCompleted(object arg) {
            if ((this.DeletePlaceNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePlaceNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdatePlacePropertyGroup", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePlacePropertyGroup(string ticket, TransitPlacePropertyGroup pg) {
            object[] results = this.Invoke("CreateOrUpdatePlacePropertyGroup", new object[] {
                        ticket,
                        pg});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlacePropertyGroupAsync(string ticket, TransitPlacePropertyGroup pg) {
            this.CreateOrUpdatePlacePropertyGroupAsync(ticket, pg, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlacePropertyGroupAsync(string ticket, TransitPlacePropertyGroup pg, object userState) {
            if ((this.CreateOrUpdatePlacePropertyGroupOperationCompleted == null)) {
                this.CreateOrUpdatePlacePropertyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePlacePropertyGroupOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePlacePropertyGroup", new object[] {
                        ticket,
                        pg}, this.CreateOrUpdatePlacePropertyGroupOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePlacePropertyGroupOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePlacePropertyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePlacePropertyGroupCompleted(this, new CreateOrUpdatePlacePropertyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacePropertyGroupById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlacePropertyGroup GetPlacePropertyGroupById(int id) {
            object[] results = this.Invoke("GetPlacePropertyGroupById", new object[] {
                        id});
            return ((TransitPlacePropertyGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacePropertyGroupByIdAsync(int id) {
            this.GetPlacePropertyGroupByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetPlacePropertyGroupByIdAsync(int id, object userState) {
            if ((this.GetPlacePropertyGroupByIdOperationCompleted == null)) {
                this.GetPlacePropertyGroupByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacePropertyGroupByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlacePropertyGroupById", new object[] {
                        id}, this.GetPlacePropertyGroupByIdOperationCompleted, userState);
        }
        
        private void OnGetPlacePropertyGroupByIdOperationCompleted(object arg) {
            if ((this.GetPlacePropertyGroupByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacePropertyGroupByIdCompleted(this, new GetPlacePropertyGroupByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacePropertyGroups", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlacePropertyGroup[] GetPlacePropertyGroups() {
            object[] results = this.Invoke("GetPlacePropertyGroups", new object[0]);
            return ((TransitPlacePropertyGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacePropertyGroupsAsync() {
            this.GetPlacePropertyGroupsAsync(null);
        }
        
        /// <remarks/>
        public void GetPlacePropertyGroupsAsync(object userState) {
            if ((this.GetPlacePropertyGroupsOperationCompleted == null)) {
                this.GetPlacePropertyGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacePropertyGroupsOperationCompleted);
            }
            this.InvokeAsync("GetPlacePropertyGroups", new object[0], this.GetPlacePropertyGroupsOperationCompleted, userState);
        }
        
        private void OnGetPlacePropertyGroupsOperationCompleted(object arg) {
            if ((this.GetPlacePropertyGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacePropertyGroupsCompleted(this, new GetPlacePropertyGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeletePlacePropertyGroup", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePlacePropertyGroup(string ticket, int id) {
            this.Invoke("DeletePlacePropertyGroup", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePlacePropertyGroupAsync(string ticket, int id) {
            this.DeletePlacePropertyGroupAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePlacePropertyGroupAsync(string ticket, int id, object userState) {
            if ((this.DeletePlacePropertyGroupOperationCompleted == null)) {
                this.DeletePlacePropertyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePlacePropertyGroupOperationCompleted);
            }
            this.InvokeAsync("DeletePlacePropertyGroup", new object[] {
                        ticket,
                        id}, this.DeletePlacePropertyGroupOperationCompleted, userState);
        }
        
        private void OnDeletePlacePropertyGroupOperationCompleted(object arg) {
            if ((this.DeletePlacePropertyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePlacePropertyGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdatePlaceProperty", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePlaceProperty(string ticket, TransitPlaceProperty p) {
            object[] results = this.Invoke("CreateOrUpdatePlaceProperty", new object[] {
                        ticket,
                        p});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlacePropertyAsync(string ticket, TransitPlaceProperty p) {
            this.CreateOrUpdatePlacePropertyAsync(ticket, p, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlacePropertyAsync(string ticket, TransitPlaceProperty p, object userState) {
            if ((this.CreateOrUpdatePlacePropertyOperationCompleted == null)) {
                this.CreateOrUpdatePlacePropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePlacePropertyOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePlaceProperty", new object[] {
                        ticket,
                        p}, this.CreateOrUpdatePlacePropertyOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePlacePropertyOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePlacePropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePlacePropertyCompleted(this, new CreateOrUpdatePlacePropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacePropertyById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlaceProperty GetPlacePropertyById(int id) {
            object[] results = this.Invoke("GetPlacePropertyById", new object[] {
                        id});
            return ((TransitPlaceProperty)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacePropertyByIdAsync(int id) {
            this.GetPlacePropertyByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetPlacePropertyByIdAsync(int id, object userState) {
            if ((this.GetPlacePropertyByIdOperationCompleted == null)) {
                this.GetPlacePropertyByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacePropertyByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlacePropertyById", new object[] {
                        id}, this.GetPlacePropertyByIdOperationCompleted, userState);
        }
        
        private void OnGetPlacePropertyByIdOperationCompleted(object arg) {
            if ((this.GetPlacePropertyByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacePropertyByIdCompleted(this, new GetPlacePropertyByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceProperties", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlaceProperty[] GetPlaceProperties(int gid) {
            object[] results = this.Invoke("GetPlaceProperties", new object[] {
                        gid});
            return ((TransitPlaceProperty[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacePropertiesAsync(int gid) {
            this.GetPlacePropertiesAsync(gid, null);
        }
        
        /// <remarks/>
        public void GetPlacePropertiesAsync(int gid, object userState) {
            if ((this.GetPlacePropertiesOperationCompleted == null)) {
                this.GetPlacePropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacePropertiesOperationCompleted);
            }
            this.InvokeAsync("GetPlaceProperties", new object[] {
                        gid}, this.GetPlacePropertiesOperationCompleted, userState);
        }
        
        private void OnGetPlacePropertiesOperationCompleted(object arg) {
            if ((this.GetPlacePropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacePropertiesCompleted(this, new GetPlacePropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeletePlaceProperty", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePlaceProperty(string ticket, int id) {
            this.Invoke("DeletePlaceProperty", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePlacePropertyAsync(string ticket, int id) {
            this.DeletePlacePropertyAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePlacePropertyAsync(string ticket, int id, object userState) {
            if ((this.DeletePlacePropertyOperationCompleted == null)) {
                this.DeletePlacePropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePlacePropertyOperationCompleted);
            }
            this.InvokeAsync("DeletePlaceProperty", new object[] {
                        ticket,
                        id}, this.DeletePlacePropertyOperationCompleted, userState);
        }
        
        private void OnDeletePlacePropertyOperationCompleted(object arg) {
            if ((this.DeletePlacePropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePlacePropertyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetDistinctPropertyValues", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitDistinctPlacePropertyValue[] GetDistinctPropertyValues(string groupname, string propertyname) {
            object[] results = this.Invoke("GetDistinctPropertyValues", new object[] {
                        groupname,
                        propertyname});
            return ((TransitDistinctPlacePropertyValue[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDistinctPropertyValuesAsync(string groupname, string propertyname) {
            this.GetDistinctPropertyValuesAsync(groupname, propertyname, null);
        }
        
        /// <remarks/>
        public void GetDistinctPropertyValuesAsync(string groupname, string propertyname, object userState) {
            if ((this.GetDistinctPropertyValuesOperationCompleted == null)) {
                this.GetDistinctPropertyValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistinctPropertyValuesOperationCompleted);
            }
            this.InvokeAsync("GetDistinctPropertyValues", new object[] {
                        groupname,
                        propertyname}, this.GetDistinctPropertyValuesOperationCompleted, userState);
        }
        
        private void OnGetDistinctPropertyValuesOperationCompleted(object arg) {
            if ((this.GetDistinctPropertyValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistinctPropertyValuesCompleted(this, new GetDistinctPropertyValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacesByPropertyValue", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlace[] GetPlacesByPropertyValue(string groupname, string propertyname, string propertyvalue, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetPlacesByPropertyValue", new object[] {
                        groupname,
                        propertyname,
                        propertyvalue,
                        options});
            return ((TransitPlace[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacesByPropertyValueAsync(string groupname, string propertyname, string propertyvalue, ServiceQueryOptions options) {
            this.GetPlacesByPropertyValueAsync(groupname, propertyname, propertyvalue, options, null);
        }
        
        /// <remarks/>
        public void GetPlacesByPropertyValueAsync(string groupname, string propertyname, string propertyvalue, ServiceQueryOptions options, object userState) {
            if ((this.GetPlacesByPropertyValueOperationCompleted == null)) {
                this.GetPlacesByPropertyValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacesByPropertyValueOperationCompleted);
            }
            this.InvokeAsync("GetPlacesByPropertyValue", new object[] {
                        groupname,
                        propertyname,
                        propertyvalue,
                        options}, this.GetPlacesByPropertyValueOperationCompleted, userState);
        }
        
        private void OnGetPlacesByPropertyValueOperationCompleted(object arg) {
            if ((this.GetPlacesByPropertyValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacesByPropertyValueCompleted(this, new GetPlacesByPropertyValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacesByPropertyValueCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPlacesByPropertyValueCount(string groupname, string propertyname, string propertyvalue) {
            object[] results = this.Invoke("GetPlacesByPropertyValueCount", new object[] {
                        groupname,
                        propertyname,
                        propertyvalue});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacesByPropertyValueCountAsync(string groupname, string propertyname, string propertyvalue) {
            this.GetPlacesByPropertyValueCountAsync(groupname, propertyname, propertyvalue, null);
        }
        
        /// <remarks/>
        public void GetPlacesByPropertyValueCountAsync(string groupname, string propertyname, string propertyvalue, object userState) {
            if ((this.GetPlacesByPropertyValueCountOperationCompleted == null)) {
                this.GetPlacesByPropertyValueCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacesByPropertyValueCountOperationCompleted);
            }
            this.InvokeAsync("GetPlacesByPropertyValueCount", new object[] {
                        groupname,
                        propertyname,
                        propertyvalue}, this.GetPlacesByPropertyValueCountOperationCompleted, userState);
        }
        
        private void OnGetPlacesByPropertyValueCountOperationCompleted(object arg) {
            if ((this.GetPlacesByPropertyValueCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacesByPropertyValueCountCompleted(this, new GetPlacesByPropertyValueCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacePropertyValueByName", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlacePropertyValue GetPlacePropertyValueByName(int placeid, string groupname, string propertyname) {
            object[] results = this.Invoke("GetPlacePropertyValueByName", new object[] {
                        placeid,
                        groupname,
                        propertyname});
            return ((TransitPlacePropertyValue)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacePropertyValueByNameAsync(int placeid, string groupname, string propertyname) {
            this.GetPlacePropertyValueByNameAsync(placeid, groupname, propertyname, null);
        }
        
        /// <remarks/>
        public void GetPlacePropertyValueByNameAsync(int placeid, string groupname, string propertyname, object userState) {
            if ((this.GetPlacePropertyValueByNameOperationCompleted == null)) {
                this.GetPlacePropertyValueByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacePropertyValueByNameOperationCompleted);
            }
            this.InvokeAsync("GetPlacePropertyValueByName", new object[] {
                        placeid,
                        groupname,
                        propertyname}, this.GetPlacePropertyValueByNameOperationCompleted, userState);
        }
        
        private void OnGetPlacePropertyValueByNameOperationCompleted(object arg) {
            if ((this.GetPlacePropertyValueByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacePropertyValueByNameCompleted(this, new GetPlacePropertyValueByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdatePlacePropertyValue", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePlacePropertyValue(string ticket, TransitPlacePropertyValue propertyvalue) {
            object[] results = this.Invoke("CreateOrUpdatePlacePropertyValue", new object[] {
                        ticket,
                        propertyvalue});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlacePropertyValueAsync(string ticket, TransitPlacePropertyValue propertyvalue) {
            this.CreateOrUpdatePlacePropertyValueAsync(ticket, propertyvalue, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlacePropertyValueAsync(string ticket, TransitPlacePropertyValue propertyvalue, object userState) {
            if ((this.CreateOrUpdatePlacePropertyValueOperationCompleted == null)) {
                this.CreateOrUpdatePlacePropertyValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePlacePropertyValueOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePlacePropertyValue", new object[] {
                        ticket,
                        propertyvalue}, this.CreateOrUpdatePlacePropertyValueOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePlacePropertyValueOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePlacePropertyValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePlacePropertyValueCompleted(this, new CreateOrUpdatePlacePropertyValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacePropertyValueById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlacePropertyValue GetPlacePropertyValueById(int id) {
            object[] results = this.Invoke("GetPlacePropertyValueById", new object[] {
                        id});
            return ((TransitPlacePropertyValue)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacePropertyValueByIdAsync(int id) {
            this.GetPlacePropertyValueByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetPlacePropertyValueByIdAsync(int id, object userState) {
            if ((this.GetPlacePropertyValueByIdOperationCompleted == null)) {
                this.GetPlacePropertyValueByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacePropertyValueByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlacePropertyValueById", new object[] {
                        id}, this.GetPlacePropertyValueByIdOperationCompleted, userState);
        }
        
        private void OnGetPlacePropertyValueByIdOperationCompleted(object arg) {
            if ((this.GetPlacePropertyValueByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacePropertyValueByIdCompleted(this, new GetPlacePropertyValueByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlacePropertyValuesById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlacePropertyValue[] GetPlacePropertyValuesById(int placeid, int groupid) {
            object[] results = this.Invoke("GetPlacePropertyValuesById", new object[] {
                        placeid,
                        groupid});
            return ((TransitPlacePropertyValue[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlacePropertyValuesByIdAsync(int placeid, int groupid) {
            this.GetPlacePropertyValuesByIdAsync(placeid, groupid, null);
        }
        
        /// <remarks/>
        public void GetPlacePropertyValuesByIdAsync(int placeid, int groupid, object userState) {
            if ((this.GetPlacePropertyValuesByIdOperationCompleted == null)) {
                this.GetPlacePropertyValuesByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlacePropertyValuesByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlacePropertyValuesById", new object[] {
                        placeid,
                        groupid}, this.GetPlacePropertyValuesByIdOperationCompleted, userState);
        }
        
        private void OnGetPlacePropertyValuesByIdOperationCompleted(object arg) {
            if ((this.GetPlacePropertyValuesByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlacePropertyValuesByIdCompleted(this, new GetPlacePropertyValuesByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetAllPlacePropertyValuesById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlacePropertyValue[] GetAllPlacePropertyValuesById(int placeid, int groupid) {
            object[] results = this.Invoke("GetAllPlacePropertyValuesById", new object[] {
                        placeid,
                        groupid});
            return ((TransitPlacePropertyValue[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPlacePropertyValuesByIdAsync(int placeid, int groupid) {
            this.GetAllPlacePropertyValuesByIdAsync(placeid, groupid, null);
        }
        
        /// <remarks/>
        public void GetAllPlacePropertyValuesByIdAsync(int placeid, int groupid, object userState) {
            if ((this.GetAllPlacePropertyValuesByIdOperationCompleted == null)) {
                this.GetAllPlacePropertyValuesByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPlacePropertyValuesByIdOperationCompleted);
            }
            this.InvokeAsync("GetAllPlacePropertyValuesById", new object[] {
                        placeid,
                        groupid}, this.GetAllPlacePropertyValuesByIdOperationCompleted, userState);
        }
        
        private void OnGetAllPlacePropertyValuesByIdOperationCompleted(object arg) {
            if ((this.GetAllPlacePropertyValuesByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPlacePropertyValuesByIdCompleted(this, new GetAllPlacePropertyValuesByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeletePlacePropertyValue", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePlacePropertyValue(string ticket, int id) {
            this.Invoke("DeletePlacePropertyValue", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePlacePropertyValueAsync(string ticket, int id) {
            this.DeletePlacePropertyValueAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePlacePropertyValueAsync(string ticket, int id, object userState) {
            if ((this.DeletePlacePropertyValueOperationCompleted == null)) {
                this.DeletePlacePropertyValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePlacePropertyValueOperationCompleted);
            }
            this.InvokeAsync("DeletePlacePropertyValue", new object[] {
                        ticket,
                        id}, this.DeletePlacePropertyValueOperationCompleted, userState);
        }
        
        private void OnDeletePlacePropertyValueOperationCompleted(object arg) {
            if ((this.DeletePlacePropertyValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePlacePropertyValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdatePlaceAttribute", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePlaceAttribute(string ticket, TransitPlaceAttribute attribute) {
            object[] results = this.Invoke("CreateOrUpdatePlaceAttribute", new object[] {
                        ticket,
                        attribute});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlaceAttributeAsync(string ticket, TransitPlaceAttribute attribute) {
            this.CreateOrUpdatePlaceAttributeAsync(ticket, attribute, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlaceAttributeAsync(string ticket, TransitPlaceAttribute attribute, object userState) {
            if ((this.CreateOrUpdatePlaceAttributeOperationCompleted == null)) {
                this.CreateOrUpdatePlaceAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePlaceAttributeOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePlaceAttribute", new object[] {
                        ticket,
                        attribute}, this.CreateOrUpdatePlaceAttributeOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePlaceAttributeOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePlaceAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePlaceAttributeCompleted(this, new CreateOrUpdatePlaceAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceAttributeById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlaceAttribute GetPlaceAttributeById(int id) {
            object[] results = this.Invoke("GetPlaceAttributeById", new object[] {
                        id});
            return ((TransitPlaceAttribute)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceAttributeByIdAsync(int id) {
            this.GetPlaceAttributeByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetPlaceAttributeByIdAsync(int id, object userState) {
            if ((this.GetPlaceAttributeByIdOperationCompleted == null)) {
                this.GetPlaceAttributeByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceAttributeByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlaceAttributeById", new object[] {
                        id}, this.GetPlaceAttributeByIdOperationCompleted, userState);
        }
        
        private void OnGetPlaceAttributeByIdOperationCompleted(object arg) {
            if ((this.GetPlaceAttributeByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceAttributeByIdCompleted(this, new GetPlaceAttributeByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceAttributesCountById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPlaceAttributesCountById(int id) {
            object[] results = this.Invoke("GetPlaceAttributesCountById", new object[] {
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceAttributesCountByIdAsync(int id) {
            this.GetPlaceAttributesCountByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetPlaceAttributesCountByIdAsync(int id, object userState) {
            if ((this.GetPlaceAttributesCountByIdOperationCompleted == null)) {
                this.GetPlaceAttributesCountByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceAttributesCountByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlaceAttributesCountById", new object[] {
                        id}, this.GetPlaceAttributesCountByIdOperationCompleted, userState);
        }
        
        private void OnGetPlaceAttributesCountByIdOperationCompleted(object arg) {
            if ((this.GetPlaceAttributesCountByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceAttributesCountByIdCompleted(this, new GetPlaceAttributesCountByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceAttributesById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlaceAttribute[] GetPlaceAttributesById(int placeid, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetPlaceAttributesById", new object[] {
                        placeid,
                        options});
            return ((TransitPlaceAttribute[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceAttributesByIdAsync(int placeid, ServiceQueryOptions options) {
            this.GetPlaceAttributesByIdAsync(placeid, options, null);
        }
        
        /// <remarks/>
        public void GetPlaceAttributesByIdAsync(int placeid, ServiceQueryOptions options, object userState) {
            if ((this.GetPlaceAttributesByIdOperationCompleted == null)) {
                this.GetPlaceAttributesByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceAttributesByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlaceAttributesById", new object[] {
                        placeid,
                        options}, this.GetPlaceAttributesByIdOperationCompleted, userState);
        }
        
        private void OnGetPlaceAttributesByIdOperationCompleted(object arg) {
            if ((this.GetPlaceAttributesByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceAttributesByIdCompleted(this, new GetPlaceAttributesByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeletePlaceAttribute", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePlaceAttribute(string ticket, int id) {
            this.Invoke("DeletePlaceAttribute", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePlaceAttributeAsync(string ticket, int id) {
            this.DeletePlaceAttributeAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePlaceAttributeAsync(string ticket, int id, object userState) {
            if ((this.DeletePlaceAttributeOperationCompleted == null)) {
                this.DeletePlaceAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePlaceAttributeOperationCompleted);
            }
            this.InvokeAsync("DeletePlaceAttribute", new object[] {
                        ticket,
                        id}, this.DeletePlaceAttributeOperationCompleted, userState);
        }
        
        private void OnDeletePlaceAttributeOperationCompleted(object arg) {
            if ((this.DeletePlaceAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePlaceAttributeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetFavoritePlacesCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFavoritePlacesCount() {
            object[] results = this.Invoke("GetFavoritePlacesCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFavoritePlacesCountAsync() {
            this.GetFavoritePlacesCountAsync(null);
        }
        
        /// <remarks/>
        public void GetFavoritePlacesCountAsync(object userState) {
            if ((this.GetFavoritePlacesCountOperationCompleted == null)) {
                this.GetFavoritePlacesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFavoritePlacesCountOperationCompleted);
            }
            this.InvokeAsync("GetFavoritePlacesCount", new object[0], this.GetFavoritePlacesCountOperationCompleted, userState);
        }
        
        private void OnGetFavoritePlacesCountOperationCompleted(object arg) {
            if ((this.GetFavoritePlacesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFavoritePlacesCountCompleted(this, new GetFavoritePlacesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetFavoritePlaces", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlace[] GetFavoritePlaces(ServiceQueryOptions serviceoptions) {
            object[] results = this.Invoke("GetFavoritePlaces", new object[] {
                        serviceoptions});
            return ((TransitPlace[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFavoritePlacesAsync(ServiceQueryOptions serviceoptions) {
            this.GetFavoritePlacesAsync(serviceoptions, null);
        }
        
        /// <remarks/>
        public void GetFavoritePlacesAsync(ServiceQueryOptions serviceoptions, object userState) {
            if ((this.GetFavoritePlacesOperationCompleted == null)) {
                this.GetFavoritePlacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFavoritePlacesOperationCompleted);
            }
            this.InvokeAsync("GetFavoritePlaces", new object[] {
                        serviceoptions}, this.GetFavoritePlacesOperationCompleted, userState);
        }
        
        private void OnGetFavoritePlacesOperationCompleted(object arg) {
            if ((this.GetFavoritePlacesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFavoritePlacesCompleted(this, new GetFavoritePlacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdatePlaceQueue", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePlaceQueue(string ticket, TransitPlaceQueue queue) {
            object[] results = this.Invoke("CreateOrUpdatePlaceQueue", new object[] {
                        ticket,
                        queue});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlaceQueueAsync(string ticket, TransitPlaceQueue queue) {
            this.CreateOrUpdatePlaceQueueAsync(ticket, queue, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlaceQueueAsync(string ticket, TransitPlaceQueue queue, object userState) {
            if ((this.CreateOrUpdatePlaceQueueOperationCompleted == null)) {
                this.CreateOrUpdatePlaceQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePlaceQueueOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePlaceQueue", new object[] {
                        ticket,
                        queue}, this.CreateOrUpdatePlaceQueueOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePlaceQueueOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePlaceQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePlaceQueueCompleted(this, new CreateOrUpdatePlaceQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceQueueById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlaceQueue GetPlaceQueueById(string ticket, int id) {
            object[] results = this.Invoke("GetPlaceQueueById", new object[] {
                        ticket,
                        id});
            return ((TransitPlaceQueue)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceQueueByIdAsync(string ticket, int id) {
            this.GetPlaceQueueByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetPlaceQueueByIdAsync(string ticket, int id, object userState) {
            if ((this.GetPlaceQueueByIdOperationCompleted == null)) {
                this.GetPlaceQueueByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceQueueByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlaceQueueById", new object[] {
                        ticket,
                        id}, this.GetPlaceQueueByIdOperationCompleted, userState);
        }
        
        private void OnGetPlaceQueueByIdOperationCompleted(object arg) {
            if ((this.GetPlaceQueueByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceQueueByIdCompleted(this, new GetPlaceQueueByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceQueueByName", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlaceQueue GetPlaceQueueByName(string ticket, string name) {
            object[] results = this.Invoke("GetPlaceQueueByName", new object[] {
                        ticket,
                        name});
            return ((TransitPlaceQueue)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceQueueByNameAsync(string ticket, string name) {
            this.GetPlaceQueueByNameAsync(ticket, name, null);
        }
        
        /// <remarks/>
        public void GetPlaceQueueByNameAsync(string ticket, string name, object userState) {
            if ((this.GetPlaceQueueByNameOperationCompleted == null)) {
                this.GetPlaceQueueByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceQueueByNameOperationCompleted);
            }
            this.InvokeAsync("GetPlaceQueueByName", new object[] {
                        ticket,
                        name}, this.GetPlaceQueueByNameOperationCompleted, userState);
        }
        
        private void OnGetPlaceQueueByNameOperationCompleted(object arg) {
            if ((this.GetPlaceQueueByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceQueueByNameCompleted(this, new GetPlaceQueueByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetOrCreatePlaceQueueByName", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlaceQueue GetOrCreatePlaceQueueByName(string ticket, string name) {
            object[] results = this.Invoke("GetOrCreatePlaceQueueByName", new object[] {
                        ticket,
                        name});
            return ((TransitPlaceQueue)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrCreatePlaceQueueByNameAsync(string ticket, string name) {
            this.GetOrCreatePlaceQueueByNameAsync(ticket, name, null);
        }
        
        /// <remarks/>
        public void GetOrCreatePlaceQueueByNameAsync(string ticket, string name, object userState) {
            if ((this.GetOrCreatePlaceQueueByNameOperationCompleted == null)) {
                this.GetOrCreatePlaceQueueByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrCreatePlaceQueueByNameOperationCompleted);
            }
            this.InvokeAsync("GetOrCreatePlaceQueueByName", new object[] {
                        ticket,
                        name}, this.GetOrCreatePlaceQueueByNameOperationCompleted, userState);
        }
        
        private void OnGetOrCreatePlaceQueueByNameOperationCompleted(object arg) {
            if ((this.GetOrCreatePlaceQueueByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrCreatePlaceQueueByNameCompleted(this, new GetOrCreatePlaceQueueByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceQueues", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlaceQueue[] GetPlaceQueues(string ticket, int id) {
            object[] results = this.Invoke("GetPlaceQueues", new object[] {
                        ticket,
                        id});
            return ((TransitPlaceQueue[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceQueuesAsync(string ticket, int id) {
            this.GetPlaceQueuesAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetPlaceQueuesAsync(string ticket, int id, object userState) {
            if ((this.GetPlaceQueuesOperationCompleted == null)) {
                this.GetPlaceQueuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceQueuesOperationCompleted);
            }
            this.InvokeAsync("GetPlaceQueues", new object[] {
                        ticket,
                        id}, this.GetPlaceQueuesOperationCompleted, userState);
        }
        
        private void OnGetPlaceQueuesOperationCompleted(object arg) {
            if ((this.GetPlaceQueuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceQueuesCompleted(this, new GetPlaceQueuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeletePlaceQueue", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePlaceQueue(string ticket, int id) {
            this.Invoke("DeletePlaceQueue", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePlaceQueueAsync(string ticket, int id) {
            this.DeletePlaceQueueAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePlaceQueueAsync(string ticket, int id, object userState) {
            if ((this.DeletePlaceQueueOperationCompleted == null)) {
                this.DeletePlaceQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePlaceQueueOperationCompleted);
            }
            this.InvokeAsync("DeletePlaceQueue", new object[] {
                        ticket,
                        id}, this.DeletePlaceQueueOperationCompleted, userState);
        }
        
        private void OnDeletePlaceQueueOperationCompleted(object arg) {
            if ((this.DeletePlaceQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePlaceQueueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/CreateOrUpdatePlaceQueueItem", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePlaceQueueItem(string ticket, TransitPlaceQueueItem queueitem) {
            object[] results = this.Invoke("CreateOrUpdatePlaceQueueItem", new object[] {
                        ticket,
                        queueitem});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlaceQueueItemAsync(string ticket, TransitPlaceQueueItem queueitem) {
            this.CreateOrUpdatePlaceQueueItemAsync(ticket, queueitem, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePlaceQueueItemAsync(string ticket, TransitPlaceQueueItem queueitem, object userState) {
            if ((this.CreateOrUpdatePlaceQueueItemOperationCompleted == null)) {
                this.CreateOrUpdatePlaceQueueItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePlaceQueueItemOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePlaceQueueItem", new object[] {
                        ticket,
                        queueitem}, this.CreateOrUpdatePlaceQueueItemOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePlaceQueueItemOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePlaceQueueItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePlaceQueueItemCompleted(this, new CreateOrUpdatePlaceQueueItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceQueueItemById", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlaceQueueItem GetPlaceQueueItemById(string ticket, int id) {
            object[] results = this.Invoke("GetPlaceQueueItemById", new object[] {
                        ticket,
                        id});
            return ((TransitPlaceQueueItem)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceQueueItemByIdAsync(string ticket, int id) {
            this.GetPlaceQueueItemByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetPlaceQueueItemByIdAsync(string ticket, int id, object userState) {
            if ((this.GetPlaceQueueItemByIdOperationCompleted == null)) {
                this.GetPlaceQueueItemByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceQueueItemByIdOperationCompleted);
            }
            this.InvokeAsync("GetPlaceQueueItemById", new object[] {
                        ticket,
                        id}, this.GetPlaceQueueItemByIdOperationCompleted, userState);
        }
        
        private void OnGetPlaceQueueItemByIdOperationCompleted(object arg) {
            if ((this.GetPlaceQueueItemByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceQueueItemByIdCompleted(this, new GetPlaceQueueItemByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceQueueItems", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPlaceQueueItem[] GetPlaceQueueItems(string ticket, int id, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetPlaceQueueItems", new object[] {
                        ticket,
                        id,
                        options});
            return ((TransitPlaceQueueItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceQueueItemsAsync(string ticket, int id, ServiceQueryOptions options) {
            this.GetPlaceQueueItemsAsync(ticket, id, options, null);
        }
        
        /// <remarks/>
        public void GetPlaceQueueItemsAsync(string ticket, int id, ServiceQueryOptions options, object userState) {
            if ((this.GetPlaceQueueItemsOperationCompleted == null)) {
                this.GetPlaceQueueItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceQueueItemsOperationCompleted);
            }
            this.InvokeAsync("GetPlaceQueueItems", new object[] {
                        ticket,
                        id,
                        options}, this.GetPlaceQueueItemsOperationCompleted, userState);
        }
        
        private void OnGetPlaceQueueItemsOperationCompleted(object arg) {
            if ((this.GetPlaceQueueItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceQueueItemsCompleted(this, new GetPlaceQueueItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceQueueItemsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPlaceQueueItemsCount(string ticket, int id) {
            object[] results = this.Invoke("GetPlaceQueueItemsCount", new object[] {
                        ticket,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceQueueItemsCountAsync(string ticket, int id) {
            this.GetPlaceQueueItemsCountAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetPlaceQueueItemsCountAsync(string ticket, int id, object userState) {
            if ((this.GetPlaceQueueItemsCountOperationCompleted == null)) {
                this.GetPlaceQueueItemsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceQueueItemsCountOperationCompleted);
            }
            this.InvokeAsync("GetPlaceQueueItemsCount", new object[] {
                        ticket,
                        id}, this.GetPlaceQueueItemsCountOperationCompleted, userState);
        }
        
        private void OnGetPlaceQueueItemsCountOperationCompleted(object arg) {
            if ((this.GetPlaceQueueItemsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceQueueItemsCountCompleted(this, new GetPlaceQueueItemsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/DeletePlaceQueueItem", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePlaceQueueItem(string ticket, int id) {
            this.Invoke("DeletePlaceQueueItem", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePlaceQueueItemAsync(string ticket, int id) {
            this.DeletePlaceQueueItemAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePlaceQueueItemAsync(string ticket, int id, object userState) {
            if ((this.DeletePlaceQueueItemOperationCompleted == null)) {
                this.DeletePlaceQueueItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePlaceQueueItemOperationCompleted);
            }
            this.InvokeAsync("DeletePlaceQueueItem", new object[] {
                        ticket,
                        id}, this.DeletePlaceQueueItemOperationCompleted, userState);
        }
        
        private void OnDeletePlaceQueueItemOperationCompleted(object arg) {
            if ((this.DeletePlaceQueueItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePlaceQueueItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetFriendsPlaceQueueItemsCount", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFriendsPlaceQueueItemsCount(string ticket) {
            object[] results = this.Invoke("GetFriendsPlaceQueueItemsCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFriendsPlaceQueueItemsCountAsync(string ticket) {
            this.GetFriendsPlaceQueueItemsCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetFriendsPlaceQueueItemsCountAsync(string ticket, object userState) {
            if ((this.GetFriendsPlaceQueueItemsCountOperationCompleted == null)) {
                this.GetFriendsPlaceQueueItemsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFriendsPlaceQueueItemsCountOperationCompleted);
            }
            this.InvokeAsync("GetFriendsPlaceQueueItemsCount", new object[] {
                        ticket}, this.GetFriendsPlaceQueueItemsCountOperationCompleted, userState);
        }
        
        private void OnGetFriendsPlaceQueueItemsCountOperationCompleted(object arg) {
            if ((this.GetFriendsPlaceQueueItemsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFriendsPlaceQueueItemsCountCompleted(this, new GetFriendsPlaceQueueItemsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetFriendsPlaceQueueItems", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitFriendsPlaceQueueItem[] GetFriendsPlaceQueueItems(string ticket, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetFriendsPlaceQueueItems", new object[] {
                        ticket,
                        options});
            return ((TransitFriendsPlaceQueueItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFriendsPlaceQueueItemsAsync(string ticket, ServiceQueryOptions options) {
            this.GetFriendsPlaceQueueItemsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetFriendsPlaceQueueItemsAsync(string ticket, ServiceQueryOptions options, object userState) {
            if ((this.GetFriendsPlaceQueueItemsOperationCompleted == null)) {
                this.GetFriendsPlaceQueueItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFriendsPlaceQueueItemsOperationCompleted);
            }
            this.InvokeAsync("GetFriendsPlaceQueueItems", new object[] {
                        ticket,
                        options}, this.GetFriendsPlaceQueueItemsOperationCompleted, userState);
        }
        
        private void OnGetFriendsPlaceQueueItemsOperationCompleted(object arg) {
            if ((this.GetFriendsPlaceQueueItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFriendsPlaceQueueItemsCompleted(this, new GetFriendsPlaceQueueItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.vestris.com/sncore/ns/GetPlaceNeighborhoods", RequestNamespace="http://www.vestris.com/sncore/ns/", ResponseNamespace="http://www.vestris.com/sncore/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitDistinctPlaceNeighborhood[] GetPlaceNeighborhoods(string country, string state, string city, ServiceQueryOptions options) {
            object[] results = this.Invoke("GetPlaceNeighborhoods", new object[] {
                        country,
                        state,
                        city,
                        options});
            return ((TransitDistinctPlaceNeighborhood[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlaceNeighborhoodsAsync(string country, string state, string city, ServiceQueryOptions options) {
            this.GetPlaceNeighborhoodsAsync(country, state, city, options, null);
        }
        
        /// <remarks/>
        public void GetPlaceNeighborhoodsAsync(string country, string state, string city, ServiceQueryOptions options, object userState) {
            if ((this.GetPlaceNeighborhoodsOperationCompleted == null)) {
                this.GetPlaceNeighborhoodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlaceNeighborhoodsOperationCompleted);
            }
            this.InvokeAsync("GetPlaceNeighborhoods", new object[] {
                        country,
                        state,
                        city,
                        options}, this.GetPlaceNeighborhoodsOperationCompleted, userState);
        }
        
        private void OnGetPlaceNeighborhoodsOperationCompleted(object arg) {
            if ((this.GetPlaceNeighborhoodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlaceNeighborhoodsCompleted(this, new GetPlaceNeighborhoodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitPlaceType : TransitService {
        
        private string nameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitDistinctPlaceNeighborhood))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitFriendsPlaceQueueItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlaceQueueItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlaceQueue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAttribute))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlaceAttribute))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlacePropertyValue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlaceProperty))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlacePropertyGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlaceName))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountPlaceFavorite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountPlaceRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountPlace))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAccountPlaceType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitArrayElementService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlacePicture))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlacePictureWithThumbnail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlacePictureWithBitmap))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlace))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlaceType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitService {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitDistinctPlacePropertyValue {
        
        private string valueField;
        
        private int countField;
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class ServiceQueryOptions {
        
        private int pageSizeField;
        
        private int pageNumberField;
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int PageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitPlaceQueryOptions {
        
        private string sortOrderField;
        
        private bool sortAscendingField;
        
        private string countryField;
        
        private string stateField;
        
        private string cityField;
        
        private string neighborhoodField;
        
        private string nameField;
        
        private string typeField;
        
        private bool picturesOnlyField;
        
        private int accountIdField;
        
        /// <remarks/>
        public string SortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        public bool SortAscending {
            get {
                return this.sortAscendingField;
            }
            set {
                this.sortAscendingField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Neighborhood {
            get {
                return this.neighborhoodField;
            }
            set {
                this.neighborhoodField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public bool PicturesOnly {
            get {
                return this.picturesOnlyField;
            }
            set {
                this.picturesOnlyField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Type))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class MemberInfo {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public abstract partial class Type : MemberInfo {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitCounter {
        
        private System.DateTime timestampField;
        
        private long totalField;
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public long Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitDistinctPlaceNeighborhood : TransitService {
        
        private string nameField;
        
        private int countField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitFriendsPlaceQueueItem : TransitService {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitPlaceQueueItem : TransitService {
        
        private int placeIdField;
        
        private int placeQueueIdField;
        
        private System.DateTime createdField;
        
        private System.DateTime updatedField;
        
        /// <remarks/>
        public int PlaceId {
            get {
                return this.placeIdField;
            }
            set {
                this.placeIdField = value;
            }
        }
        
        /// <remarks/>
        public int PlaceQueueId {
            get {
                return this.placeQueueIdField;
            }
            set {
                this.placeQueueIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitPlaceQueue : TransitService {
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private int accountIdField;
        
        private int accountPictureIdField;
        
        private string accountNameField;
        
        private bool publishAllField;
        
        private bool publishFriendsField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public int AccountPictureId {
            get {
                return this.accountPictureIdField;
            }
            set {
                this.accountPictureIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public bool PublishAll {
            get {
                return this.publishAllField;
            }
            set {
                this.publishAllField = value;
            }
        }
        
        /// <remarks/>
        public bool PublishFriends {
            get {
                return this.publishFriendsField;
            }
            set {
                this.publishFriendsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAttribute : TransitService {
        
        private string nameField;
        
        private string descriptionField;
        
        private string defaultUrlField;
        
        private string defaultValueField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultUrl {
            get {
                return this.defaultUrlField;
            }
            set {
                this.defaultUrlField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitPlaceAttribute : TransitService {
        
        private TransitAttribute attributeField;
        
        private string valueField;
        
        private string urlField;
        
        private System.DateTime createdField;
        
        private int placeIdField;
        
        private int attributeIdField;
        
        /// <remarks/>
        public TransitAttribute Attribute {
            get {
                return this.attributeField;
            }
            set {
                this.attributeField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public int PlaceId {
            get {
                return this.placeIdField;
            }
            set {
                this.placeIdField = value;
            }
        }
        
        /// <remarks/>
        public int AttributeId {
            get {
                return this.attributeIdField;
            }
            set {
                this.attributeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitPlacePropertyValue : TransitService {
        
        private int placeIdField;
        
        private TransitPlaceProperty placePropertyField;
        
        private string valueField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        /// <remarks/>
        public int PlaceId {
            get {
                return this.placeIdField;
            }
            set {
                this.placeIdField = value;
            }
        }
        
        /// <remarks/>
        public TransitPlaceProperty PlaceProperty {
            get {
                return this.placePropertyField;
            }
            set {
                this.placePropertyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitPlaceProperty : TransitService {
        
        private bool publishField;
        
        private string nameField;
        
        private string descriptionField;
        
        private Type typeField;
        
        private string defaultValueField;
        
        private string placePropertyGroupNameField;
        
        private int placePropertyGroupIdField;
        
        /// <remarks/>
        public bool Publish {
            get {
                return this.publishField;
            }
            set {
                this.publishField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public Type Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        public string PlacePropertyGroupName {
            get {
                return this.placePropertyGroupNameField;
            }
            set {
                this.placePropertyGroupNameField = value;
            }
        }
        
        /// <remarks/>
        public int PlacePropertyGroupId {
            get {
                return this.placePropertyGroupIdField;
            }
            set {
                this.placePropertyGroupIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitPlacePropertyGroup : TransitService {
        
        private string nameField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitPlaceName : TransitService {
        
        private string nameField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private int placeIdField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public int PlaceId {
            get {
                return this.placeIdField;
            }
            set {
                this.placeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountPlaceFavorite : TransitService {
        
        private System.DateTime createdField;
        
        private int accountIdField;
        
        private int placeIdField;
        
        private string accountNameField;
        
        private int accountPictureIdField;
        
        private string placeNameField;
        
        private int placePictureIdField;
        
        private string placeCityField;
        
        private string placeCountryField;
        
        private string placeStateField;
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public int PlaceId {
            get {
                return this.placeIdField;
            }
            set {
                this.placeIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public int AccountPictureId {
            get {
                return this.accountPictureIdField;
            }
            set {
                this.accountPictureIdField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceName {
            get {
                return this.placeNameField;
            }
            set {
                this.placeNameField = value;
            }
        }
        
        /// <remarks/>
        public int PlacePictureId {
            get {
                return this.placePictureIdField;
            }
            set {
                this.placePictureIdField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceCity {
            get {
                return this.placeCityField;
            }
            set {
                this.placeCityField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceCountry {
            get {
                return this.placeCountryField;
            }
            set {
                this.placeCountryField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceState {
            get {
                return this.placeStateField;
            }
            set {
                this.placeStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountPlaceRequest : TransitService {
        
        private System.DateTime submittedField;
        
        private int accountIdField;
        
        private string accountNameField;
        
        private int placeIdField;
        
        private string placeNameField;
        
        private string typeField;
        
        private string messageField;
        
        /// <remarks/>
        public System.DateTime Submitted {
            get {
                return this.submittedField;
            }
            set {
                this.submittedField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public int PlaceId {
            get {
                return this.placeIdField;
            }
            set {
                this.placeIdField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceName {
            get {
                return this.placeNameField;
            }
            set {
                this.placeNameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountPlace : TransitService {
        
        private string typeField;
        
        private string descriptionField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private int accountIdField;
        
        private int placeIdField;
        
        private string accountNameField;
        
        private int accountPictureIdField;
        
        private string placeNameField;
        
        private int placePictureIdField;
        
        private bool canWriteField;
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public int PlaceId {
            get {
                return this.placeIdField;
            }
            set {
                this.placeIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public int AccountPictureId {
            get {
                return this.accountPictureIdField;
            }
            set {
                this.accountPictureIdField = value;
            }
        }
        
        /// <remarks/>
        public string PlaceName {
            get {
                return this.placeNameField;
            }
            set {
                this.placeNameField = value;
            }
        }
        
        /// <remarks/>
        public int PlacePictureId {
            get {
                return this.placePictureIdField;
            }
            set {
                this.placePictureIdField = value;
            }
        }
        
        /// <remarks/>
        public bool CanWrite {
            get {
                return this.canWriteField;
            }
            set {
                this.canWriteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitAccountPlaceType : TransitService {
        
        private string nameField;
        
        private string descriptionField;
        
        private bool canWriteField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool CanWrite {
            get {
                return this.canWriteField;
            }
            set {
                this.canWriteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlacePicture))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlacePictureWithThumbnail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlacePictureWithBitmap))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitArrayElementService : TransitService {
        
        private int countField;
        
        private int nextIndexField;
        
        private int prevIndexField;
        
        private int indexField;
        
        private int nextIdField;
        
        private int prevIdField;
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        public int NextIndex {
            get {
                return this.nextIndexField;
            }
            set {
                this.nextIndexField = value;
            }
        }
        
        /// <remarks/>
        public int PrevIndex {
            get {
                return this.prevIndexField;
            }
            set {
                this.prevIndexField = value;
            }
        }
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public int NextId {
            get {
                return this.nextIdField;
            }
            set {
                this.nextIdField = value;
            }
        }
        
        /// <remarks/>
        public int PrevId {
            get {
                return this.prevIdField;
            }
            set {
                this.prevIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlacePictureWithThumbnail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPlacePictureWithBitmap))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitPlacePicture : TransitArrayElementService {
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private int placeIdField;
        
        private int commentCountField;
        
        private TransitCounter counterField;
        
        private int accountIdField;
        
        private string accountNameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public int PlaceId {
            get {
                return this.placeIdField;
            }
            set {
                this.placeIdField = value;
            }
        }
        
        /// <remarks/>
        public int CommentCount {
            get {
                return this.commentCountField;
            }
            set {
                this.commentCountField = value;
            }
        }
        
        /// <remarks/>
        public TransitCounter Counter {
            get {
                return this.counterField;
            }
            set {
                this.counterField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitPlacePictureWithThumbnail : TransitPlacePicture {
        
        private byte[] thumbnailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Thumbnail {
            get {
                return this.thumbnailField;
            }
            set {
                this.thumbnailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitPlacePictureWithBitmap : TransitPlacePicture {
        
        private byte[] bitmapField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Bitmap {
            get {
                return this.bitmapField;
            }
            set {
                this.bitmapField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.vestris.com/sncore/ns/")]
    public partial class TransitPlace : TransitService {
        
        private string nameField;
        
        private string typeField;
        
        private string descriptionField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private string streetField;
        
        private string zipField;
        
        private string crossStreetField;
        
        private string phoneField;
        
        private string faxField;
        
        private string emailField;
        
        private string websiteField;
        
        private string neighborhoodField;
        
        private string cityField;
        
        private string stateField;
        
        private string countryField;
        
        private int pictureIdField;
        
        private int accountIdField;
        
        private bool canWriteField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string CrossStreet {
            get {
                return this.crossStreetField;
            }
            set {
                this.crossStreetField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        public string Neighborhood {
            get {
                return this.neighborhoodField;
            }
            set {
                this.neighborhoodField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public int PictureId {
            get {
                return this.pictureIdField;
            }
            set {
                this.pictureIdField = value;
            }
        }
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public bool CanWrite {
            get {
                return this.canWriteField;
            }
            set {
                this.canWriteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdatePlaceTypeCompletedEventHandler(object sender, CreateOrUpdatePlaceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePlaceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePlaceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceTypeByIdCompletedEventHandler(object sender, GetPlaceTypeByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceTypeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceTypeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlaceType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlaceType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceTypesCompletedEventHandler(object sender, GetPlaceTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlaceType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlaceType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeletePlaceTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdatePlaceCompletedEventHandler(object sender, CreateOrUpdatePlaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePlaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePlaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceByIdCompletedEventHandler(object sender, GetPlaceByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlace Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlace)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacesCountCompletedEventHandler(object sender, GetPlacesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacesCompletedEventHandler(object sender, GetPlacesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlace[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlace[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeletePlaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void FindPlaceCompletedEventHandler(object sender, FindPlaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindPlaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindPlaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlace Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlace)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdatePlacePictureCompletedEventHandler(object sender, CreateOrUpdatePlacePictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePlacePictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePlacePictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacePictureByIdCompletedEventHandler(object sender, GetPlacePictureByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacePictureByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacePictureByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlacePicture Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlacePicture)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacePicturesCountByIdCompletedEventHandler(object sender, GetPlacePicturesCountByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacePicturesCountByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacePicturesCountByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacePicturesByIdCompletedEventHandler(object sender, GetPlacePicturesByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacePicturesByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacePicturesByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlacePicture[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlacePicture[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeletePlacePictureCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacePictureWithBitmapByIdCompletedEventHandler(object sender, GetPlacePictureWithBitmapByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacePictureWithBitmapByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacePictureWithBitmapByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlacePictureWithBitmap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlacePictureWithBitmap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacePictureWithBitmapByIdIfModifiedSinceCompletedEventHandler(object sender, GetPlacePictureWithBitmapByIdIfModifiedSinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacePictureWithBitmapByIdIfModifiedSinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacePictureWithBitmapByIdIfModifiedSinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlacePictureWithBitmap Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlacePictureWithBitmap)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacePictureWithThumbnailByIdCompletedEventHandler(object sender, GetPlacePictureWithThumbnailByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacePictureWithThumbnailByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacePictureWithThumbnailByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlacePictureWithThumbnail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlacePictureWithThumbnail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacePictureWithThumbnailByIdIfModifiedSinceCompletedEventHandler(object sender, GetPlacePictureWithThumbnailByIdIfModifiedSinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacePictureWithThumbnailByIdIfModifiedSinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacePictureWithThumbnailByIdIfModifiedSinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlacePictureWithThumbnail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlacePictureWithThumbnail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateAccountPlaceTypeCompletedEventHandler(object sender, CreateOrUpdateAccountPlaceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateAccountPlaceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateAccountPlaceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlaceTypeByIdCompletedEventHandler(object sender, GetAccountPlaceTypeByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlaceTypeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlaceTypeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountPlaceType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountPlaceType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlaceTypesCompletedEventHandler(object sender, GetAccountPlaceTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlaceTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlaceTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountPlaceType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountPlaceType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteAccountPlaceTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateAccountPlaceCompletedEventHandler(object sender, CreateOrUpdateAccountPlaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateAccountPlaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateAccountPlaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlaceByIdCompletedEventHandler(object sender, GetAccountPlaceByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlaceByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlaceByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountPlace Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountPlace)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlacesCountByPlaceIdCompletedEventHandler(object sender, GetAccountPlacesCountByPlaceIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlacesCountByPlaceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlacesCountByPlaceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlacesByPlaceIdCompletedEventHandler(object sender, GetAccountPlacesByPlaceIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlacesByPlaceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlacesByPlaceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountPlace[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountPlace[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlacesCountCompletedEventHandler(object sender, GetAccountPlacesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlacesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlacesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlacesCountByAccountIdCompletedEventHandler(object sender, GetAccountPlacesCountByAccountIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlacesCountByAccountIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlacesCountByAccountIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlacesCompletedEventHandler(object sender, GetAccountPlacesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountPlace[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountPlace[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlacesByAccountIdCompletedEventHandler(object sender, GetAccountPlacesByAccountIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlacesByAccountIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlacesByAccountIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountPlace[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountPlace[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteAccountPlaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateAccountPlaceRequestCompletedEventHandler(object sender, CreateOrUpdateAccountPlaceRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateAccountPlaceRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateAccountPlaceRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlaceRequestByIdCompletedEventHandler(object sender, GetAccountPlaceRequestByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlaceRequestByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlaceRequestByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountPlaceRequest Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountPlaceRequest)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlaceRequestsCompletedEventHandler(object sender, GetAccountPlaceRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlaceRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlaceRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountPlaceRequest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountPlaceRequest[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlaceRequestsByIdCompletedEventHandler(object sender, GetAccountPlaceRequestsByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlaceRequestsByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlaceRequestsByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountPlaceRequest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountPlaceRequest[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteAccountPlaceRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void AcceptAccountPlaceRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void RejectAccountPlaceRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetNewPlacesCompletedEventHandler(object sender, GetNewPlacesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewPlacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewPlacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlace[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlace[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateAccountPlaceFavoriteCompletedEventHandler(object sender, CreateOrUpdateAccountPlaceFavoriteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateAccountPlaceFavoriteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateAccountPlaceFavoriteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void IsAccountPlaceFavoriteCompletedEventHandler(object sender, IsAccountPlaceFavoriteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAccountPlaceFavoriteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAccountPlaceFavoriteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlaceFavoriteByIdCompletedEventHandler(object sender, GetAccountPlaceFavoriteByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlaceFavoriteByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlaceFavoriteByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountPlaceFavorite Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountPlaceFavorite)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlaceFavoritesCountByPlaceIdCompletedEventHandler(object sender, GetAccountPlaceFavoritesCountByPlaceIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlaceFavoritesCountByPlaceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlaceFavoritesCountByPlaceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlaceFavoritesByPlaceIdCompletedEventHandler(object sender, GetAccountPlaceFavoritesByPlaceIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlaceFavoritesByPlaceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlaceFavoritesByPlaceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountPlaceFavorite[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountPlaceFavorite[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlaceFavoritesCountCompletedEventHandler(object sender, GetAccountPlaceFavoritesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlaceFavoritesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlaceFavoritesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlaceFavoritesCountByIdCompletedEventHandler(object sender, GetAccountPlaceFavoritesCountByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlaceFavoritesCountByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlaceFavoritesCountByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlaceFavoritesCompletedEventHandler(object sender, GetAccountPlaceFavoritesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlaceFavoritesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlaceFavoritesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountPlaceFavorite[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountPlaceFavorite[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAccountPlaceFavoritesByAccountIdCompletedEventHandler(object sender, GetAccountPlaceFavoritesByAccountIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountPlaceFavoritesByAccountIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountPlaceFavoritesByAccountIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAccountPlaceFavorite[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAccountPlaceFavorite[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteAccountPlaceFavoriteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void SearchPlacesCompletedEventHandler(object sender, SearchPlacesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchPlacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchPlacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlace[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlace[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void SearchPlacesCountCompletedEventHandler(object sender, SearchPlacesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchPlacesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchPlacesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdatePlaceNameCompletedEventHandler(object sender, CreateOrUpdatePlaceNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePlaceNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePlaceNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceNameByIdCompletedEventHandler(object sender, GetPlaceNameByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceNameByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceNameByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlaceName Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlaceName)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceNamesCompletedEventHandler(object sender, GetPlaceNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlaceName[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlaceName[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeletePlaceNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdatePlacePropertyGroupCompletedEventHandler(object sender, CreateOrUpdatePlacePropertyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePlacePropertyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePlacePropertyGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacePropertyGroupByIdCompletedEventHandler(object sender, GetPlacePropertyGroupByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacePropertyGroupByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacePropertyGroupByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlacePropertyGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlacePropertyGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacePropertyGroupsCompletedEventHandler(object sender, GetPlacePropertyGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacePropertyGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacePropertyGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlacePropertyGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlacePropertyGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeletePlacePropertyGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdatePlacePropertyCompletedEventHandler(object sender, CreateOrUpdatePlacePropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePlacePropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePlacePropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacePropertyByIdCompletedEventHandler(object sender, GetPlacePropertyByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacePropertyByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacePropertyByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlaceProperty Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlaceProperty)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacePropertiesCompletedEventHandler(object sender, GetPlacePropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacePropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacePropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlaceProperty[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlaceProperty[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeletePlacePropertyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetDistinctPropertyValuesCompletedEventHandler(object sender, GetDistinctPropertyValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistinctPropertyValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistinctPropertyValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitDistinctPlacePropertyValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitDistinctPlacePropertyValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacesByPropertyValueCompletedEventHandler(object sender, GetPlacesByPropertyValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacesByPropertyValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacesByPropertyValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlace[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlace[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacesByPropertyValueCountCompletedEventHandler(object sender, GetPlacesByPropertyValueCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacesByPropertyValueCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacesByPropertyValueCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacePropertyValueByNameCompletedEventHandler(object sender, GetPlacePropertyValueByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacePropertyValueByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacePropertyValueByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlacePropertyValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlacePropertyValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdatePlacePropertyValueCompletedEventHandler(object sender, CreateOrUpdatePlacePropertyValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePlacePropertyValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePlacePropertyValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacePropertyValueByIdCompletedEventHandler(object sender, GetPlacePropertyValueByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacePropertyValueByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacePropertyValueByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlacePropertyValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlacePropertyValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlacePropertyValuesByIdCompletedEventHandler(object sender, GetPlacePropertyValuesByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlacePropertyValuesByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlacePropertyValuesByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlacePropertyValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlacePropertyValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAllPlacePropertyValuesByIdCompletedEventHandler(object sender, GetAllPlacePropertyValuesByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPlacePropertyValuesByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPlacePropertyValuesByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlacePropertyValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlacePropertyValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeletePlacePropertyValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdatePlaceAttributeCompletedEventHandler(object sender, CreateOrUpdatePlaceAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePlaceAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePlaceAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceAttributeByIdCompletedEventHandler(object sender, GetPlaceAttributeByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceAttributeByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceAttributeByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlaceAttribute Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlaceAttribute)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceAttributesCountByIdCompletedEventHandler(object sender, GetPlaceAttributesCountByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceAttributesCountByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceAttributesCountByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceAttributesByIdCompletedEventHandler(object sender, GetPlaceAttributesByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceAttributesByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceAttributesByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlaceAttribute[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlaceAttribute[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeletePlaceAttributeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetFavoritePlacesCountCompletedEventHandler(object sender, GetFavoritePlacesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFavoritePlacesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFavoritePlacesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetFavoritePlacesCompletedEventHandler(object sender, GetFavoritePlacesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFavoritePlacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFavoritePlacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlace[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlace[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdatePlaceQueueCompletedEventHandler(object sender, CreateOrUpdatePlaceQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePlaceQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePlaceQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceQueueByIdCompletedEventHandler(object sender, GetPlaceQueueByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceQueueByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceQueueByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlaceQueue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlaceQueue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceQueueByNameCompletedEventHandler(object sender, GetPlaceQueueByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceQueueByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceQueueByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlaceQueue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlaceQueue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetOrCreatePlaceQueueByNameCompletedEventHandler(object sender, GetOrCreatePlaceQueueByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrCreatePlaceQueueByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrCreatePlaceQueueByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlaceQueue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlaceQueue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceQueuesCompletedEventHandler(object sender, GetPlaceQueuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceQueuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceQueuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlaceQueue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlaceQueue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeletePlaceQueueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdatePlaceQueueItemCompletedEventHandler(object sender, CreateOrUpdatePlaceQueueItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePlaceQueueItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePlaceQueueItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceQueueItemByIdCompletedEventHandler(object sender, GetPlaceQueueItemByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceQueueItemByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceQueueItemByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlaceQueueItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlaceQueueItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceQueueItemsCompletedEventHandler(object sender, GetPlaceQueueItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceQueueItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceQueueItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPlaceQueueItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPlaceQueueItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceQueueItemsCountCompletedEventHandler(object sender, GetPlaceQueueItemsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceQueueItemsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceQueueItemsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeletePlaceQueueItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetFriendsPlaceQueueItemsCountCompletedEventHandler(object sender, GetFriendsPlaceQueueItemsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFriendsPlaceQueueItemsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFriendsPlaceQueueItemsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetFriendsPlaceQueueItemsCompletedEventHandler(object sender, GetFriendsPlaceQueueItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFriendsPlaceQueueItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFriendsPlaceQueueItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitFriendsPlaceQueueItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitFriendsPlaceQueueItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPlaceNeighborhoodsCompletedEventHandler(object sender, GetPlaceNeighborhoodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlaceNeighborhoodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlaceNeighborhoodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitDistinctPlaceNeighborhood[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitDistinctPlaceNeighborhood[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591